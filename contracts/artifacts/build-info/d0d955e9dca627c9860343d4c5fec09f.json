{
	"id": "d0d955e9dca627c9860343d4c5fec09f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FrenStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\n\ncontract FrenStaking is Ownable, IERC721Receiver, ReentrancyGuard, Pausable {\n    using EnumerableSet for EnumerableSet.UintSet; \n    \n    //addresses \n    address nullAddress = 0x0000000000000000000000000000000000000000;\n    address public stakingDestinationAddress;\n    address public erc20Address;\n\n    uint256 public expiration; \n    //rate governs how often you receive your token\n    uint256 public rate; \n\n    bool public isClaimable;\n  \n    // mappings \n    mapping(address => EnumerableSet.UintSet) private _deposits;\n    mapping(address => mapping(uint256 => uint256)) public _depositBlocks;\n    mapping(address => uint256) public accumulatedTokens;\n\n    constructor(address _stakingDestinationAddress, uint256 _rate, uint256 _expiration, address _erc20Address) {\n        stakingDestinationAddress = _stakingDestinationAddress;\n        rate = _rate;\n        expiration = block.number + _expiration;\n        erc20Address = _erc20Address;\n        _pause();\n        isClaimable = false;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /* STAKING MECHANICS */\n\n    // Set a multiplier for how many tokens to earn each time a block passes. \n    // n Blocks per day = 6000, Token Decimal = 18\n    // Rate = 833333333333333\n    function setRate(uint256 _rate) public onlyOwner() {\n      rate = _rate;\n    }\n\n    // Set this to a block to disable the ability to continue accruing tokens past that block number.\n    function setExpiration(uint256 _expiration) public onlyOwner() {\n      expiration = block.number + _expiration;\n    }\n\n    //check deposit amount\n    function depositsOf(address account) external view returns (uint256[] memory) {\n      EnumerableSet.UintSet storage depositSet = _deposits[account];\n      uint256[] memory tokenIds = new uint256[] (depositSet.length());\n\n      for (uint256 i; i < depositSet.length(); i++) {\n        tokenIds[i] = depositSet.at(i);\n      }\n\n      return tokenIds;\n    }\n\n    function calculateRewards(address account, uint256[] memory tokenIds) public view returns (uint256[] memory rewards) {\n        rewards = new uint256[](tokenIds.length);\n\n        for (uint256 i; i < tokenIds.length; i++) {\n            uint256 tokenId = tokenIds[i];\n            rewards[i] = rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]);\n        }\n\n        return rewards;\n    }\n\n    function calculateReward(address account, uint256 tokenId) public view returns (uint256) {\n        require(Math.min(block.number, expiration) > _depositBlocks[account][tokenId], \"Invalid blocks\");\n        return rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]);\n    }\n\n    function claimRewards(uint256[] calldata tokenIds) public whenNotPaused {\n        require(isClaimable == true);\n        uint256 reward; \n        uint256 blockCur = Math.min(block.number, expiration);\n\n        for (uint256 i; i < tokenIds.length; i++) {\n            reward += calculateReward(msg.sender, tokenIds[i]);\n            _depositBlocks[msg.sender][tokenIds[i]] = blockCur;\n        }\n\n        if (reward > 0) {\n            IERC20(erc20Address).transfer(msg.sender, reward);\n        }\n\n    }\n\n    function deposit(uint256[] calldata tokenIds) external whenNotPaused {\n        require(msg.sender != stakingDestinationAddress, \"Invalid address\");\n        for (uint256 i; i < tokenIds.length; i++) {\n            accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]);\n            IERC721(stakingDestinationAddress).safeTransferFrom(msg.sender,address(this),tokenIds[i],\"\");\n            _deposits[msg.sender].add(tokenIds[i]);\n        }\n    }\n\n    function withdraw(uint256[] calldata tokenIds) external whenNotPaused nonReentrant() {\n        for (uint256 i; i < tokenIds.length; i++) {\n            require( _deposits[msg.sender].contains(tokenIds[i]),\"Staking: token not deposited\");\n            accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]);\n            _deposits[msg.sender].remove(tokenIds[i]);\n            IERC721(stakingDestinationAddress).safeTransferFrom(address(this), msg.sender,tokenIds[i],\"\");\n        }\n    }\n\n    function withdrawTokens() external onlyOwner {\n        uint256 tokenSupply = IERC20(erc20Address).balanceOf(address(this));\n        IERC20(erc20Address).transfer(msg.sender, tokenSupply);\n    }\n\n    function flipIsClaimable() external onlyOwner {\n        isClaimable = !isClaimable;\n    }\n\n    function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n    \n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046f2de202e85485c2e65c3034b1385243dd034039a6bfc27d6c496cc4db2500864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046f2de202e85485c2e65c3034b1385243dd034039a6bfc27d6c496cc4db2500864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CALLCODE 0xDE KECCAK256 0x2E DUP6 BASEFEE 0x5C 0x2E PUSH6 0xC3034B138524 RETURNDATASIZE 0xD0 CALLVALUE SUB SWAP11 PUSH12 0xFC27D6C496CC4DB250086473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046f2de202e85485c2e65c3034b1385243dd034039a6bfc27d6c496cc4db2500864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID CALLCODE 0xDE KECCAK256 0x2E DUP6 BASEFEE 0x5C 0x2E PUSH6 0xC3034B138524 RETURNDATASIZE 0xD0 CALLVALUE SUB SWAP11 PUSH12 0xFC27D6C496CC4DB250086473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046f2de202e85485c2e65c3034b1385243dd034039a6bfc27d6c496cc4db2500864736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac4b635f5de68887fe4401c374c7bb558b6c0ec11a4369361e97d7ab00dbb19064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac4b635f5de68887fe4401c374c7bb558b6c0ec11a4369361e97d7ab00dbb19064736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x4B PUSH4 0x5F5DE688 DUP8 INVALID DIFFICULTY ADD 0xC3 PUSH21 0xC7BB558B6C0EC11A4369361E97D7AB00DBB1906473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12302:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac4b635f5de68887fe4401c374c7bb558b6c0ec11a4369361e97d7ab00dbb19064736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0x4B PUSH4 0x5F5DE688 DUP8 INVALID DIFFICULTY ADD 0xC3 PUSH21 0xC7BB558B6C0EC11A4369361E97D7AB00DBB1906473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "202:12302:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac4b635f5de68887fe4401c374c7bb558b6c0ec11a4369361e97d7ab00dbb19064736f6c634300080d0033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xF8 PUSH10 0xDE8C0A490A7E0398B797 ORIGIN 0x25 DUP13 PUSH13 0x9EA88F1020E83FFAA45BA650FE RETURNDATACOPY 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xF8 PUSH10 0xDE8C0A490A7E0398B797 ORIGIN 0x25 DUP13 PUSH13 0x9EA88F1020E83FFAA45BA650FE RETURNDATACOPY 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "482:6300:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5f869de8c0a490a7e0398b79732258c6c9ea88f1020e83ffaa45ba650fe3ea864736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1321:12951  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205fd2ebe6d522b9f924c0a931153ca76c69f3b9f16abd9e6ce786244cf52c772c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fd2ebe6d522b9f924c0a931153ca76c69f3b9f16abd9e6ce786244cf52c772c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD2 0xEB 0xE6 0xD5 0x22 0xB9 0xF9 0x24 0xC0 0xA9 BALANCE ISZERO EXTCODECOPY 0xA7 PUSH13 0x69F3B9F16ABD9E6CE786244CF5 0x2C PUSH24 0x2C64736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "1321:11630:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1321:11630:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205fd2ebe6d522b9f924c0a931153ca76c69f3b9f16abd9e6ce786244cf52c772c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F 0xD2 0xEB 0xE6 0xD5 0x22 0xB9 0xF9 0x24 0xC0 0xA9 BALANCE ISZERO EXTCODECOPY 0xA7 PUSH13 0x69F3B9F16ABD9E6CE786244CF5 0x2C PUSH24 0x2C64736F6C634300080D0033000000000000000000000000 ",
							"sourceMap": "1321:11630:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 12951,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fd2ebe6d522b9f924c0a931153ca76c69f3b9f16abd9e6ce786244cf52c772c64736f6c634300080d0033",
									".code": [
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1321,
											"end": 12951,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FrenStaking.sol": {
				"FrenStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingDestinationAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_erc20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "_depositBlocks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "accumulatedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rewards",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "depositsOf",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "expiration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flipIsClaimable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isClaimable",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "setExpiration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rate",
									"type": "uint256"
								}
							],
							"name": "setRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingDestinationAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FrenStaking.sol\":665:5452  contract FrenStaking is Ownable, IERC721Receiver, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FrenStaking.sol\":821:885  address nullAddress = 0x0000000000000000000000000000000000000000 */\n  0x02\n  dup1\n  sload\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  and\n  swap1\n  sstore\n    /* \"contracts/FrenStaking.sol\":1330:1664  constructor(address _stakingDestinationAddress, uint256 _rate, uint256 _expiration, address _erc20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_9\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/FrenStaking.sol\":1447:1472  stakingDestinationAddress */\n  0x03\n    /* \"contracts/FrenStaking.sol\":1447:1501  stakingDestinationAddress = _stakingDestinationAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/FrenStaking.sol\":1511:1515  rate */\n  0x06\n    /* \"contracts/FrenStaking.sol\":1511:1523  rate = _rate */\n  dup4\n  swap1\n  sstore\n    /* \"contracts/FrenStaking.sol\":1546:1572  block.number + _expiration */\n  tag_16\n    /* \"contracts/FrenStaking.sol\":1561:1572  _expiration */\n  dup3\n    /* \"contracts/FrenStaking.sol\":1546:1558  block.number */\n  number\n    /* \"contracts/FrenStaking.sol\":1546:1572  block.number + _expiration */\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"contracts/FrenStaking.sol\":1533:1543  expiration */\n  0x05\n    /* \"contracts/FrenStaking.sol\":1533:1572  expiration = block.number + _expiration */\n  sstore\n    /* \"contracts/FrenStaking.sol\":1582:1594  erc20Address */\n  0x04\n    /* \"contracts/FrenStaking.sol\":1582:1610  erc20Address = _erc20Address */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/FrenStaking.sol\":1620:1628  _pause() */\n  tag_18\n    /* \"contracts/FrenStaking.sol\":1620:1626  _pause */\n  tag_19\n    /* \"contracts/FrenStaking.sol\":1620:1628  _pause() */\n  jump\t// in\ntag_18:\n  pop\n  pop\n    /* \"contracts/FrenStaking.sol\":1638:1649  isClaimable */\n  0x07\n    /* \"contracts/FrenStaking.sol\":1638:1657  isClaimable = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"contracts/FrenStaking.sol\":665:5452  contract FrenStaking is Ownable, IERC721Receiver, ReentrancyGuard, Pausable {... */\n  tag_38\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\ntag_19:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_24\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  tag_25\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  jump\t// in\ntag_24:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n  0x02\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n  0x01\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\ntag_27:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1011:1043   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":993:1044   */\n  dup2\n  mstore\n    /* \"#utility.yul\":981:983   */\n  0x20\n    /* \"#utility.yul\":966:984   */\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_25:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  and(0xff, sload(0x02))\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_33\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1257:1259   */\n  0x20\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1239:1260   */\n  mstore\n    /* \"#utility.yul\":1296:1298   */\n  0x10\n    /* \"#utility.yul\":1276:1294   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1269:1299   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":1315:1333   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1308:1354   */\n  mstore\n    /* \"#utility.yul\":1371:1389   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_33:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_37:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_40:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:612   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_42:\n    /* \"#utility.yul\":410:450   */\n  tag_43\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":490:492   */\n  0x20\n    /* \"#utility.yul\":479:488   */\n  dup6\n    /* \"#utility.yul\":475:493   */\n  add\n    /* \"#utility.yul\":469:494   */\n  mload\n    /* \"#utility.yul\":459:494   */\n  swap3\n  pop\n    /* \"#utility.yul\":534:536   */\n  0x40\n    /* \"#utility.yul\":523:532   */\n  dup6\n    /* \"#utility.yul\":519:537   */\n  add\n    /* \"#utility.yul\":513:538   */\n  mload\n    /* \"#utility.yul\":503:538   */\n  swap2\n  pop\n    /* \"#utility.yul\":557:606   */\n  tag_44\n    /* \"#utility.yul\":602:604   */\n  0x60\n    /* \"#utility.yul\":591:600   */\n  dup7\n    /* \"#utility.yul\":587:605   */\n  add\n    /* \"#utility.yul\":557:606   */\n  tag_37\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":547:606   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:612   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":617:842   */\ntag_17:\n    /* \"#utility.yul\":657:660   */\n  0x00\n    /* \"#utility.yul\":688:689   */\n  dup3\n    /* \"#utility.yul\":684:690   */\n  not\n    /* \"#utility.yul\":681:682   */\n  dup3\n    /* \"#utility.yul\":678:691   */\n  gt\n    /* \"#utility.yul\":675:811   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":733:743   */\n  0x4e487b71\n    /* \"#utility.yul\":728:731   */\n  0xe0\n    /* \"#utility.yul\":724:744   */\n  shl\n    /* \"#utility.yul\":721:722   */\n  0x00\n    /* \"#utility.yul\":714:745   */\n  mstore\n    /* \"#utility.yul\":768:772   */\n  0x11\n    /* \"#utility.yul\":765:766   */\n  0x04\n    /* \"#utility.yul\":758:773   */\n  mstore\n    /* \"#utility.yul\":796:800   */\n  0x24\n    /* \"#utility.yul\":793:794   */\n  0x00\n    /* \"#utility.yul\":786:801   */\n  revert\n    /* \"#utility.yul\":675:811   */\ntag_46:\n  pop\n    /* \"#utility.yul\":827:836   */\n  add\n  swap1\n    /* \"#utility.yul\":617:842   */\n  jump\t// out\n    /* \"#utility.yul\":1055:1395   */\ntag_38:\n    /* \"contracts/FrenStaking.sol\":665:5452  contract FrenStaking is Ownable, IERC721Receiver, ReentrancyGuard, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FrenStaking.sol\":665:5452  contract FrenStaking is Ownable, IERC721Receiver, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5eac6239\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x983d95ce\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x983d95ce\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb343ae14\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xca1c2019\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xdeec7eff\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe3a9db1a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x5eac6239\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x74478bb3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x34fcf437\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x34fcf437\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4665096d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x515a20ba\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x598b8e71\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x0222a2c4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x068c526f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1852e8d9\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x276184ae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2c4e722e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FrenStaking.sol\":891:931  address public stakingDestinationAddress */\n    tag_3:\n      sload(0x03)\n      tag_30\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/FrenStaking.sol\":891:931  address public stakingDestinationAddress */\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FrenStaking.sol\":2687:3146  function calculateRewards(address account, uint256[] memory tokenIds) public view returns (uint256[] memory rewards) {... */\n    tag_4:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":5274:5445  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_5:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      shl(0xe1, 0x0a85bd01)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_40:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3338:3371   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3320:3372   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3308:3310   */\n      0x20\n        /* \"#utility.yul\":3293:3311   */\n      add\n        /* \"contracts/FrenStaking.sol\":5274:5445  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n      tag_32\n        /* \"#utility.yul\":3176:3378   */\n      jump\n        /* \"contracts/FrenStaking.sol\":3152:3498  function calculateReward(address account, uint256 tokenId) public view returns (uint256) {... */\n    tag_6:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":3788:3813   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3776:3778   */\n      0x20\n        /* \"#utility.yul\":3761:3779   */\n      add\n        /* \"contracts/FrenStaking.sol\":3152:3498  function calculateReward(address account, uint256 tokenId) public view returns (uint256) {... */\n      tag_32\n        /* \"#utility.yul\":3642:3819   */\n      jump\n        /* \"contracts/FrenStaking.sol\":937:964  address public erc20Address */\n    tag_7:\n      sload(0x04)\n      tag_30\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":1055:1074  uint256 public rate */\n    tag_8:\n      tag_46\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":1993:2071  function setRate(uint256 _rate) public onlyOwner() {... */\n    tag_9:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/FrenStaking.sol\":1735:1798  function unpause() public onlyOwner {... */\n    tag_10:\n      tag_58\n      tag_63\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":971:996  uint256 public expiration */\n    tag_11:\n      tag_46\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":2179:2296  function setExpiration(uint256 _expiration) public onlyOwner() {... */\n    tag_12:\n      tag_58\n      tag_68\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":4007:4467  function deposit(uint256[] calldata tokenIds) external whenNotPaused {... */\n    tag_13:\n      tag_58\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_74:\n      mload(0x40)\n        /* \"#utility.yul\":4794:4808   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4787:4809   */\n      iszero\n        /* \"#utility.yul\":4769:4810   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4757:4759   */\n      0x20\n        /* \"#utility.yul\":4742:4760   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      tag_32\n        /* \"#utility.yul\":4629:4816   */\n      jump\n        /* \"contracts/FrenStaking.sol\":3504:4001  function claimRewards(uint256[] calldata tokenIds) public whenNotPaused {... */\n    tag_15:\n      tag_58\n      tag_79\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_58\n      tag_82\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":1082:1105  bool public isClaimable */\n    tag_17:\n      sload(0x07)\n      tag_74\n      swap1\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":1670:1729  function pause() public onlyOwner {... */\n    tag_18:\n      tag_58\n      tag_87\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":4980:5173  function withdrawTokens() external onlyOwner {... */\n    tag_19:\n      tag_58\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      jump(tag_30)\n        /* \"contracts/FrenStaking.sol\":4473:4974  function withdraw(uint256[] calldata tokenIds) external whenNotPaused nonReentrant() {... */\n    tag_21:\n      tag_58\n      tag_94\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":1196:1265  mapping(address => mapping(uint256 => uint256)) public _depositBlocks */\n    tag_22:\n      tag_46\n      tag_97\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_97:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":5179:5268  function flipIsClaimable() external onlyOwner {... */\n    tag_23:\n      tag_58\n      tag_101\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":1271:1323  mapping(address => uint256) public accumulatedTokens */\n    tag_24:\n      tag_46\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      mstore(0x20, 0x0a)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/FrenStaking.sol\":2329:2681  function depositsOf(address account) external view returns (uint256[] memory) {... */\n    tag_25:\n      tag_34\n      tag_108\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_58\n      tag_112\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":2687:3146  function calculateRewards(address account, uint256[] memory tokenIds) public view returns (uint256[] memory rewards) {... */\n    tag_37:\n        /* \"contracts/FrenStaking.sol\":2778:2802  uint256[] memory rewards */\n      0x60\n        /* \"contracts/FrenStaking.sol\":2838:2846  tokenIds */\n      dup2\n        /* \"contracts/FrenStaking.sol\":2838:2853  tokenIds.length */\n      mload\n        /* \"contracts/FrenStaking.sol\":2824:2854  new uint256[](tokenIds.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_118:\n      pop\n        /* \"contracts/FrenStaking.sol\":2814:2854  rewards = new uint256[](tokenIds.length) */\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":2870:2879  uint256 i */\n      0x00\n        /* \"contracts/FrenStaking.sol\":2865:3115  for (uint256 i; i < tokenIds.length; i++) {... */\n    tag_119:\n        /* \"contracts/FrenStaking.sol\":2885:2893  tokenIds */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2885:2900  tokenIds.length */\n      mload\n        /* \"contracts/FrenStaking.sol\":2881:2882  i */\n      dup2\n        /* \"contracts/FrenStaking.sol\":2881:2900  i < tokenIds.length */\n      lt\n        /* \"contracts/FrenStaking.sol\":2865:3115  for (uint256 i; i < tokenIds.length; i++) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"contracts/FrenStaking.sol\":2921:2936  uint256 tokenId */\n      0x00\n        /* \"contracts/FrenStaking.sol\":2939:2947  tokenIds */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2948:2949  i */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2939:2950  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/FrenStaking.sol\":2921:2950  uint256 tokenId = tokenIds[i] */\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":3071:3085  _depositBlocks */\n      0x09\n        /* \"contracts/FrenStaking.sol\":3071:3094  _depositBlocks[account] */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3086:3093  account */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":3071:3094  _depositBlocks[account] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3071:3103  _depositBlocks[account][tokenId] */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3095:3102  tokenId */\n      dup3\n        /* \"contracts/FrenStaking.sol\":3071:3103  _depositBlocks[account][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FrenStaking.sol\":3034:3068  Math.min(block.number, expiration) */\n      tag_125\n        /* \"contracts/FrenStaking.sol\":3043:3055  block.number */\n      number\n        /* \"contracts/FrenStaking.sol\":3057:3067  expiration */\n      sload(0x05)\n        /* \"contracts/FrenStaking.sol\":3034:3042  Math.min */\n      tag_126\n        /* \"contracts/FrenStaking.sol\":3034:3068  Math.min(block.number, expiration) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/FrenStaking.sol\":3034:3103  Math.min(block.number, expiration) - _depositBlocks[account][tokenId] */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":2985:3003  _deposits[account] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":2985:2994  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":2985:3003  _deposits[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/FrenStaking.sol\":2985:3021  _deposits[account].contains(tokenId) */\n      tag_129\n      swap1\n        /* \"contracts/FrenStaking.sol\":3013:3020  tokenId */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2985:3012  _deposits[account].contains */\n      tag_130\n        /* \"contracts/FrenStaking.sol\":2985:3021  _deposits[account].contains(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/FrenStaking.sol\":2985:3029  _deposits[account].contains(tokenId) ? 1 : 0 */\n      tag_131\n      jumpi\n        /* \"contracts/FrenStaking.sol\":3028:3029  0 */\n      0x00\n        /* \"contracts/FrenStaking.sol\":2985:3029  _deposits[account].contains(tokenId) ? 1 : 0 */\n      jump(tag_132)\n    tag_131:\n        /* \"contracts/FrenStaking.sol\":3024:3025  1 */\n      0x01\n        /* \"contracts/FrenStaking.sol\":2985:3029  _deposits[account].contains(tokenId) ? 1 : 0 */\n    tag_132:\n        /* \"contracts/FrenStaking.sol\":2977:3030  rate * (_deposits[account].contains(tokenId) ? 1 : 0) */\n      0xff\n      and\n        /* \"contracts/FrenStaking.sol\":2977:2981  rate */\n      sload(0x06)\n        /* \"contracts/FrenStaking.sol\":2977:3030  rate * (_deposits[account].contains(tokenId) ? 1 : 0) */\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/FrenStaking.sol\":2977:3104  rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]) */\n      tag_135\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_135:\n        /* \"contracts/FrenStaking.sol\":2964:2971  rewards */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2972:2973  i */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2964:2974  rewards[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_137\n      jumpi\n      tag_137\n      tag_124\n      jump\t// in\n    tag_137:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/FrenStaking.sol\":2964:3104  rewards[i] = rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]) */\n      mstore\n      pop\n        /* \"contracts/FrenStaking.sol\":2902:2905  i++ */\n      dup1\n      tag_138\n      dup2\n      tag_139\n      jump\t// in\n    tag_138:\n      swap2\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":2865:3115  for (uint256 i; i < tokenIds.length; i++) {... */\n      jump(tag_119)\n    tag_120:\n      pop\n        /* \"contracts/FrenStaking.sol\":2687:3146  function calculateRewards(address account, uint256[] memory tokenIds) public view returns (uint256[] memory rewards) {... */\n    tag_114:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":3152:3498  function calculateReward(address account, uint256 tokenId) public view returns (uint256) {... */\n    tag_49:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":3296:3319  _depositBlocks[account] */\n      dup3\n      and\n        /* \"contracts/FrenStaking.sol\":3232:3239  uint256 */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3296:3319  _depositBlocks[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":3296:3310  _depositBlocks */\n      0x09\n        /* \"contracts/FrenStaking.sol\":3296:3319  _depositBlocks[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3296:3328  _depositBlocks[account][tokenId] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"contracts/FrenStaking.sol\":3282:3292  expiration */\n      sload(0x05)\n        /* \"contracts/FrenStaking.sol\":3259:3293  Math.min(block.number, expiration) */\n      tag_142\n      swap1\n        /* \"contracts/FrenStaking.sol\":3268:3280  block.number */\n      number\n      swap1\n        /* \"contracts/FrenStaking.sol\":3259:3267  Math.min */\n      tag_126\n        /* \"contracts/FrenStaking.sol\":3259:3293  Math.min(block.number, expiration) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/FrenStaking.sol\":3259:3328  Math.min(block.number, expiration) > _depositBlocks[account][tokenId] */\n      gt\n        /* \"contracts/FrenStaking.sol\":3251:3347  require(Math.min(block.number, expiration) > _depositBlocks[account][tokenId], \"Invalid blocks\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5921:5923   */\n      0x20\n        /* \"contracts/FrenStaking.sol\":3251:3347  require(Math.min(block.number, expiration) > _depositBlocks[account][tokenId], \"Invalid blocks\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5903:5924   */\n      mstore\n        /* \"#utility.yul\":5960:5962   */\n      0x0e\n        /* \"#utility.yul\":5940:5958   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5933:5963   */\n      mstore\n      shl(0x90, 0x496e76616c696420626c6f636b73)\n        /* \"#utility.yul\":5979:5997   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5972:6016   */\n      mstore\n        /* \"#utility.yul\":6033:6051   */\n      0x64\n      add\n        /* \"contracts/FrenStaking.sol\":3251:3347  require(Math.min(block.number, expiration) > _depositBlocks[account][tokenId], \"Invalid blocks\") */\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":3458:3481  _depositBlocks[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":3458:3472  _depositBlocks */\n      0x09\n        /* \"contracts/FrenStaking.sol\":3458:3481  _depositBlocks[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3458:3490  _depositBlocks[account][tokenId] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/FrenStaking.sol\":3444:3454  expiration */\n      sload(0x05)\n        /* \"contracts/FrenStaking.sol\":3421:3455  Math.min(block.number, expiration) */\n      tag_146\n      swap1\n        /* \"contracts/FrenStaking.sol\":3430:3442  block.number */\n      number\n      swap1\n        /* \"contracts/FrenStaking.sol\":3421:3429  Math.min */\n      tag_126\n        /* \"contracts/FrenStaking.sol\":3421:3455  Math.min(block.number, expiration) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/FrenStaking.sol\":3421:3490  Math.min(block.number, expiration) - _depositBlocks[account][tokenId] */\n      tag_147\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":3372:3390  _deposits[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":3372:3381  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":3372:3390  _deposits[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3372:3408  _deposits[account].contains(tokenId) */\n      tag_148\n      swap1\n        /* \"contracts/FrenStaking.sol\":3400:3407  tokenId */\n      dup5\n        /* \"contracts/FrenStaking.sol\":3372:3399  _deposits[account].contains */\n      tag_130\n        /* \"contracts/FrenStaking.sol\":3372:3408  _deposits[account].contains(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/FrenStaking.sol\":3372:3416  _deposits[account].contains(tokenId) ? 1 : 0 */\n      tag_149\n      jumpi\n        /* \"contracts/FrenStaking.sol\":3415:3416  0 */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3372:3416  _deposits[account].contains(tokenId) ? 1 : 0 */\n      jump(tag_150)\n    tag_149:\n        /* \"contracts/FrenStaking.sol\":3411:3412  1 */\n      0x01\n        /* \"contracts/FrenStaking.sol\":3372:3416  _deposits[account].contains(tokenId) ? 1 : 0 */\n    tag_150:\n        /* \"contracts/FrenStaking.sol\":3364:3417  rate * (_deposits[account].contains(tokenId) ? 1 : 0) */\n      0xff\n      and\n        /* \"contracts/FrenStaking.sol\":3364:3368  rate */\n      sload(0x06)\n        /* \"contracts/FrenStaking.sol\":3364:3417  rate * (_deposits[account].contains(tokenId) ? 1 : 0) */\n      tag_151\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_151:\n        /* \"contracts/FrenStaking.sol\":3364:3491  rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]) */\n      tag_152\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_152:\n        /* \"contracts/FrenStaking.sol\":3357:3491  return rate * (_deposits[account].contains(tokenId) ? 1 : 0) * (Math.min(block.number, expiration) - _depositBlocks[account][tokenId]) */\n      swap4\n        /* \"contracts/FrenStaking.sol\":3152:3498  function calculateReward(address account, uint256 tokenId) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":1993:2071  function setRate(uint256 _rate) public onlyOwner() {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/FrenStaking.sol\":2052:2056  rate */\n      0x06\n        /* \"contracts/FrenStaking.sol\":2052:2064  rate = _rate */\n      sstore\n        /* \"contracts/FrenStaking.sol\":1993:2071  function setRate(uint256 _rate) public onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":1735:1798  function unpause() public onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/FrenStaking.sol\":1781:1791  _unpause() */\n      tag_160\n        /* \"contracts/FrenStaking.sol\":1781:1789  _unpause */\n      tag_161\n        /* \"contracts/FrenStaking.sol\":1781:1791  _unpause() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/FrenStaking.sol\":1735:1798  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":2179:2296  function setExpiration(uint256 _expiration) public onlyOwner() {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/FrenStaking.sol\":2263:2289  block.number + _expiration */\n      tag_165\n        /* \"contracts/FrenStaking.sol\":2278:2289  _expiration */\n      dup2\n        /* \"contracts/FrenStaking.sol\":2263:2275  block.number */\n      number\n        /* \"contracts/FrenStaking.sol\":2263:2289  block.number + _expiration */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"contracts/FrenStaking.sol\":2250:2260  expiration */\n      0x05\n        /* \"contracts/FrenStaking.sol\":2250:2289  expiration = block.number + _expiration */\n      sstore\n      pop\n        /* \"contracts/FrenStaking.sol\":2179:2296  function setExpiration(uint256 _expiration) public onlyOwner() {... */\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":4007:4467  function deposit(uint256[] calldata tokenIds) external whenNotPaused {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_168\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/FrenStaking.sol\":4108:4133  stakingDestinationAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/FrenStaking.sol\":4094:4104  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4094:4133  msg.sender != stakingDestinationAddress */\n      sub\n        /* \"contracts/FrenStaking.sol\":4086:4153  require(msg.sender != stakingDestinationAddress, \"Invalid address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6397:6399   */\n      0x20\n        /* \"contracts/FrenStaking.sol\":4086:4153  require(msg.sender != stakingDestinationAddress, \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6379:6400   */\n      mstore\n        /* \"#utility.yul\":6436:6438   */\n      0x0f\n        /* \"#utility.yul\":6416:6434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6409:6439   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":6455:6473   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6448:6493   */\n      mstore\n        /* \"#utility.yul\":6510:6528   */\n      0x64\n      add\n        /* \"contracts/FrenStaking.sol\":4086:4153  require(msg.sender != stakingDestinationAddress, \"Invalid address\") */\n      tag_144\n        /* \"#utility.yul\":6195:6534   */\n      jump\n        /* \"contracts/FrenStaking.sol\":4086:4153  require(msg.sender != stakingDestinationAddress, \"Invalid address\") */\n    tag_171:\n        /* \"contracts/FrenStaking.sol\":4168:4177  uint256 i */\n      0x00\n        /* \"contracts/FrenStaking.sol\":4163:4461  for (uint256 i; i < tokenIds.length; i++) {... */\n    tag_174:\n        /* \"contracts/FrenStaking.sol\":4179:4198  i < tokenIds.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/FrenStaking.sol\":4163:4461  for (uint256 i; i < tokenIds.length; i++) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"contracts/FrenStaking.sol\":4252:4292  calculateReward(msg.sender, tokenIds[i]) */\n      tag_177\n        /* \"contracts/FrenStaking.sol\":4268:4278  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4280:4288  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/FrenStaking.sol\":4289:4290  i */\n      dup5\n        /* \"contracts/FrenStaking.sol\":4280:4291  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_124\n      jump\t// in\n    tag_179:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/FrenStaking.sol\":4252:4267  calculateReward */\n      tag_49\n        /* \"contracts/FrenStaking.sol\":4252:4292  calculateReward(msg.sender, tokenIds[i]) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/FrenStaking.sol\":4237:4247  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4219:4248  accumulatedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":4219:4236  accumulatedTokens */\n      0x0a\n        /* \"contracts/FrenStaking.sol\":4219:4248  accumulatedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/FrenStaking.sol\":4219:4292  accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]) */\n      dup1\n      sload\n        /* \"contracts/FrenStaking.sol\":4219:4248  accumulatedTokens[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/FrenStaking.sol\":4219:4292  accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]) */\n      tag_180\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_180:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":4314:4339  stakingDestinationAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/FrenStaking.sol\":4306:4357  IERC721(stakingDestinationAddress).safeTransferFrom */\n      0xb88d4fde\n        /* \"contracts/FrenStaking.sol\":4358:4368  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4377:4381  this */\n      address\n        /* \"contracts/FrenStaking.sol\":4383:4391  tokenIds */\n      dup7\n      dup7\n        /* \"contracts/FrenStaking.sol\":4392:4393  i */\n      dup7\n        /* \"contracts/FrenStaking.sol\":4383:4394  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_124\n      jump\t// in\n    tag_182:\n        /* \"contracts/FrenStaking.sol\":4306:4398  IERC721(stakingDestinationAddress).safeTransferFrom(msg.sender,address(this),tokenIds[i],\"\") */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup9\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6862:6877   */\n      swap6\n      dup7\n      and\n        /* \"contracts/FrenStaking.sol\":4306:4398  IERC721(stakingDestinationAddress).safeTransferFrom(msg.sender,address(this),tokenIds[i],\"\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6844:6878   */\n      mstore\n        /* \"#utility.yul\":6914:6929   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6894:6912   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":6887:6930   */\n      mstore\n      pop\n        /* \"contracts/FrenStaking.sol\":4383:4394  tokenIds[i] */\n      0x20\n      swap1\n      swap2\n      mul\n      add\n      calldataload\n        /* \"#utility.yul\":6946:6964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6939:6973   */\n      mstore\n        /* \"#utility.yul\":7009:7012   */\n      0x80\n        /* \"#utility.yul\":6989:7007   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6982:7013   */\n      mstore\n      0x00\n        /* \"#utility.yul\":7029:7048   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7022:7052   */\n      mstore\n        /* \"#utility.yul\":7069:7088   */\n      0xa4\n      add\n        /* \"contracts/FrenStaking.sol\":4306:4398  IERC721(stakingDestinationAddress).safeTransferFrom(msg.sender,address(this),tokenIds[i],\"\") */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":4412:4450  _deposits[msg.sender].add(tokenIds[i]) */\n      tag_188\n        /* \"contracts/FrenStaking.sol\":4438:4446  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/FrenStaking.sol\":4447:4448  i */\n      dup4\n        /* \"contracts/FrenStaking.sol\":4438:4449  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_190\n      jumpi\n      tag_190\n      tag_124\n      jump\t// in\n    tag_190:\n        /* \"contracts/FrenStaking.sol\":4422:4432  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4412:4433  _deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":4412:4421  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":4438:4449  tokenIds[i] */\n      0x20\n        /* \"contracts/FrenStaking.sol\":4412:4433  _deposits[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      swap4\n        /* \"contracts/FrenStaking.sol\":4438:4449  tokenIds[i] */\n      swap2\n      mul\n      add\n      calldataload\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":4412:4437  _deposits[msg.sender].add */\n      tag_191\n        /* \"contracts/FrenStaking.sol\":4412:4450  _deposits[msg.sender].add(tokenIds[i]) */\n      jump\t// in\n    tag_188:\n      pop\n        /* \"contracts/FrenStaking.sol\":4200:4203  i++ */\n      dup1\n      tag_192\n      dup2\n      tag_139\n      jump\t// in\n    tag_192:\n      swap2\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":4163:4461  for (uint256 i; i < tokenIds.length; i++) {... */\n      jump(tag_174)\n    tag_175:\n      pop\n        /* \"contracts/FrenStaking.sol\":4007:4467  function deposit(uint256[] calldata tokenIds) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":3504:4001  function claimRewards(uint256[] calldata tokenIds) public whenNotPaused {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_195\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/FrenStaking.sol\":3594:3605  isClaimable */\n      and(0xff, sload(0x07))\n        /* \"contracts/FrenStaking.sol\":3594:3613  isClaimable == true */\n      iszero\n      iszero\n        /* \"contracts/FrenStaking.sol\":3594:3605  isClaimable */\n      0x01\n        /* \"contracts/FrenStaking.sol\":3594:3613  isClaimable == true */\n      eq\n        /* \"contracts/FrenStaking.sol\":3586:3614  require(isClaimable == true) */\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n        /* \"contracts/FrenStaking.sol\":3624:3638  uint256 reward */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3649:3665  uint256 blockCur */\n      dup1\n        /* \"contracts/FrenStaking.sol\":3668:3702  Math.min(block.number, expiration) */\n      tag_198\n        /* \"contracts/FrenStaking.sol\":3677:3689  block.number */\n      number\n        /* \"contracts/FrenStaking.sol\":3691:3701  expiration */\n      sload(0x05)\n        /* \"contracts/FrenStaking.sol\":3668:3676  Math.min */\n      tag_126\n        /* \"contracts/FrenStaking.sol\":3668:3702  Math.min(block.number, expiration) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/FrenStaking.sol\":3649:3702  uint256 blockCur = Math.min(block.number, expiration) */\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":3718:3727  uint256 i */\n      0x00\n        /* \"contracts/FrenStaking.sol\":3713:3894  for (uint256 i; i < tokenIds.length; i++) {... */\n    tag_199:\n        /* \"contracts/FrenStaking.sol\":3729:3748  i < tokenIds.length */\n      dup4\n      dup2\n      lt\n        /* \"contracts/FrenStaking.sol\":3713:3894  for (uint256 i; i < tokenIds.length; i++) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/FrenStaking.sol\":3779:3819  calculateReward(msg.sender, tokenIds[i]) */\n      tag_202\n        /* \"contracts/FrenStaking.sol\":3795:3805  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":3807:3815  tokenIds */\n      dup7\n      dup7\n        /* \"contracts/FrenStaking.sol\":3816:3817  i */\n      dup5\n        /* \"contracts/FrenStaking.sol\":3807:3818  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_124\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":3779:3819  calculateReward(msg.sender, tokenIds[i]) */\n    tag_202:\n        /* \"contracts/FrenStaking.sol\":3769:3819  reward += calculateReward(msg.sender, tokenIds[i]) */\n      tag_205\n      swap1\n      dup5\n      tag_166\n      jump\t// in\n    tag_205:\n        /* \"contracts/FrenStaking.sol\":3848:3858  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":3833:3859  _depositBlocks[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":3833:3847  _depositBlocks */\n      0x09\n        /* \"contracts/FrenStaking.sol\":3833:3859  _depositBlocks[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3769:3819  reward += calculateReward(msg.sender, tokenIds[i]) */\n      swap2\n      swap5\n      pop\n        /* \"contracts/FrenStaking.sol\":3875:3883  blockCur */\n      dup4\n      swap2\n        /* \"contracts/FrenStaking.sol\":3833:3859  _depositBlocks[msg.sender] */\n      swap1\n        /* \"contracts/FrenStaking.sol\":3860:3868  tokenIds */\n      dup8\n      dup8\n        /* \"contracts/FrenStaking.sol\":3869:3870  i */\n      dup6\n        /* \"contracts/FrenStaking.sol\":3860:3871  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_207\n      jumpi\n      tag_207\n      tag_124\n      jump\t// in\n    tag_207:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/FrenStaking.sol\":3833:3872  _depositBlocks[msg.sender][tokenIds[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FrenStaking.sol\":3833:3883  _depositBlocks[msg.sender][tokenIds[i]] = blockCur */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FrenStaking.sol\":3750:3753  i++ */\n      dup1\n      dup1\n      tag_208\n      swap1\n      tag_139\n      jump\t// in\n    tag_208:\n      swap2\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":3713:3894  for (uint256 i; i < tokenIds.length; i++) {... */\n      jump(tag_199)\n    tag_200:\n      pop\n        /* \"contracts/FrenStaking.sol\":3908:3918  reward > 0 */\n      dup2\n      iszero\n        /* \"contracts/FrenStaking.sol\":3904:3994  if (reward > 0) {... */\n      tag_209\n      jumpi\n        /* \"contracts/FrenStaking.sol\":3941:3953  erc20Address */\n      0x04\n      dup1\n      sload\n        /* \"contracts/FrenStaking.sol\":3934:3983  IERC20(erc20Address).transfer(msg.sender, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":3964:3974  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":3934:3983  IERC20(erc20Address).transfer(msg.sender, reward) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":7273:7324   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7340:7358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7333:7367   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":3941:3953  erc20Address */\n      and\n      swap1\n        /* \"contracts/FrenStaking.sol\":3934:3963  IERC20(erc20Address).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7246:7264   */\n      0x44\n      add\n        /* \"contracts/FrenStaking.sol\":3934:3983  IERC20(erc20Address).transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/FrenStaking.sol\":3904:3994  if (reward > 0) {... */\n    tag_209:\n        /* \"contracts/FrenStaking.sol\":3576:4001  {... */\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":3504:4001  function claimRewards(uint256[] calldata tokenIds) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":1670:1729  function pause() public onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/FrenStaking.sol\":1714:1722  _pause() */\n      tag_160\n        /* \"contracts/FrenStaking.sol\":1714:1720  _pause */\n      tag_225\n        /* \"contracts/FrenStaking.sol\":1714:1722  _pause() */\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":4980:5173  function withdrawTokens() external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/FrenStaking.sol\":5064:5076  erc20Address */\n      0x04\n      dup1\n      sload\n        /* \"contracts/FrenStaking.sol\":5057:5102  IERC20(erc20Address).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":5096:5100  this */\n      address\n        /* \"contracts/FrenStaking.sol\":5057:5102  IERC20(erc20Address).balanceOf(address(this)) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":160:211   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/FrenStaking.sol\":5035:5054  uint256 tokenSupply */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":5064:5076  erc20Address */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/FrenStaking.sol\":5057:5087  IERC20(erc20Address).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/FrenStaking.sol\":5057:5102  IERC20(erc20Address).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_231:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"contracts/FrenStaking.sol\":5119:5131  erc20Address */\n      0x04\n      dup1\n      sload\n        /* \"contracts/FrenStaking.sol\":5112:5166  IERC20(erc20Address).transfer(msg.sender, tokenSupply) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":5142:5152  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":5112:5166  IERC20(erc20Address).transfer(msg.sender, tokenSupply) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":7273:7324   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7340:7358   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7333:7367   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/FrenStaking.sol\":5035:5102  uint256 tokenSupply = IERC20(erc20Address).balanceOf(address(this)) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":5119:5131  erc20Address */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/FrenStaking.sol\":5112:5141  IERC20(erc20Address).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7246:7264   */\n      0x44\n      add\n        /* \"contracts/FrenStaking.sol\":5112:5166  IERC20(erc20Address).transfer(msg.sender, tokenSupply) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_237\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_237:\n      pop\n        /* \"contracts/FrenStaking.sol\":5025:5173  {... */\n      pop\n        /* \"contracts/FrenStaking.sol\":4980:5173  function withdrawTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":4473:4974  function withdraw(uint256[] calldata tokenIds) external whenNotPaused nonReentrant() {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_240\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_242\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_243\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/FrenStaking.sol\":4573:4582  uint256 i */\n      0x00\n        /* \"contracts/FrenStaking.sol\":4568:4968  for (uint256 i; i < tokenIds.length; i++) {... */\n    tag_245:\n        /* \"contracts/FrenStaking.sol\":4584:4603  i < tokenIds.length */\n      dup2\n      dup2\n      lt\n        /* \"contracts/FrenStaking.sol\":4568:4968  for (uint256 i; i < tokenIds.length; i++) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/FrenStaking.sol\":4633:4676  _deposits[msg.sender].contains(tokenIds[i]) */\n      tag_248\n        /* \"contracts/FrenStaking.sol\":4664:4672  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/FrenStaking.sol\":4673:4674  i */\n      dup4\n        /* \"contracts/FrenStaking.sol\":4664:4675  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_124\n      jump\t// in\n    tag_250:\n        /* \"contracts/FrenStaking.sol\":4643:4653  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4633:4654  _deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":4633:4642  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":4664:4675  tokenIds[i] */\n      0x20\n        /* \"contracts/FrenStaking.sol\":4633:4654  _deposits[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      swap4\n        /* \"contracts/FrenStaking.sol\":4664:4675  tokenIds[i] */\n      swap2\n      mul\n      add\n      calldataload\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":4633:4663  _deposits[msg.sender].contains */\n      tag_130\n        /* \"contracts/FrenStaking.sol\":4633:4676  _deposits[msg.sender].contains(tokenIds[i]) */\n      jump\t// in\n    tag_248:\n        /* \"contracts/FrenStaking.sol\":4624:4708  require( _deposits[msg.sender].contains(tokenIds[i]),\"Staking: token not deposited\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8051:8053   */\n      0x20\n        /* \"contracts/FrenStaking.sol\":4624:4708  require( _deposits[msg.sender].contains(tokenIds[i]),\"Staking: token not deposited\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8033:8054   */\n      mstore\n        /* \"#utility.yul\":8090:8092   */\n      0x1c\n        /* \"#utility.yul\":8070:8088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8063:8093   */\n      mstore\n        /* \"#utility.yul\":8129:8159   */\n      0x5374616b696e673a20746f6b656e206e6f74206465706f736974656400000000\n        /* \"#utility.yul\":8109:8127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8102:8160   */\n      mstore\n        /* \"#utility.yul\":8177:8195   */\n      0x64\n      add\n        /* \"contracts/FrenStaking.sol\":4624:4708  require( _deposits[msg.sender].contains(tokenIds[i]),\"Staking: token not deposited\") */\n      tag_144\n        /* \"#utility.yul\":7849:8201   */\n      jump\n        /* \"contracts/FrenStaking.sol\":4624:4708  require( _deposits[msg.sender].contains(tokenIds[i]),\"Staking: token not deposited\") */\n    tag_251:\n        /* \"contracts/FrenStaking.sol\":4755:4795  calculateReward(msg.sender, tokenIds[i]) */\n      tag_254\n        /* \"contracts/FrenStaking.sol\":4771:4781  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4783:4791  tokenIds */\n      dup5\n      dup5\n        /* \"contracts/FrenStaking.sol\":4792:4793  i */\n      dup5\n        /* \"contracts/FrenStaking.sol\":4783:4794  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_179\n      jumpi\n      tag_179\n      tag_124\n      jump\t// in\n        /* \"contracts/FrenStaking.sol\":4755:4795  calculateReward(msg.sender, tokenIds[i]) */\n    tag_254:\n        /* \"contracts/FrenStaking.sol\":4740:4750  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4722:4751  accumulatedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":4722:4739  accumulatedTokens */\n      0x0a\n        /* \"contracts/FrenStaking.sol\":4722:4751  accumulatedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/FrenStaking.sol\":4722:4795  accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]) */\n      dup1\n      sload\n        /* \"contracts/FrenStaking.sol\":4722:4751  accumulatedTokens[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"contracts/FrenStaking.sol\":4722:4795  accumulatedTokens[msg.sender] += calculateReward(msg.sender, tokenIds[i]) */\n      tag_257\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_257:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/FrenStaking.sol\":4809:4850  _deposits[msg.sender].remove(tokenIds[i]) */\n      tag_258\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":4838:4846  tokenIds */\n      dup4\n      dup4\n        /* \"contracts/FrenStaking.sol\":4847:4848  i */\n      dup4\n        /* \"contracts/FrenStaking.sol\":4838:4849  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_260\n      tag_124\n      jump\t// in\n    tag_260:\n        /* \"contracts/FrenStaking.sol\":4819:4829  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4809:4830  _deposits[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":4809:4818  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":4838:4849  tokenIds[i] */\n      0x20\n        /* \"contracts/FrenStaking.sol\":4809:4830  _deposits[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      swap4\n        /* \"contracts/FrenStaking.sol\":4838:4849  tokenIds[i] */\n      swap2\n      mul\n      add\n      calldataload\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":4809:4837  _deposits[msg.sender].remove */\n      tag_261\n        /* \"contracts/FrenStaking.sol\":4809:4850  _deposits[msg.sender].remove(tokenIds[i]) */\n      jump\t// in\n    tag_258:\n      pop\n        /* \"contracts/FrenStaking.sol\":4872:4897  stakingDestinationAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"contracts/FrenStaking.sol\":4864:4915  IERC721(stakingDestinationAddress).safeTransferFrom */\n      0xb88d4fde\n        /* \"contracts/FrenStaking.sol\":4924:4928  this */\n      address\n        /* \"contracts/FrenStaking.sol\":4931:4941  msg.sender */\n      caller\n        /* \"contracts/FrenStaking.sol\":4942:4950  tokenIds */\n      dup7\n      dup7\n        /* \"contracts/FrenStaking.sol\":4951:4952  i */\n      dup7\n        /* \"contracts/FrenStaking.sol\":4942:4953  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_263\n      jumpi\n      tag_263\n      tag_124\n      jump\t// in\n    tag_263:\n        /* \"contracts/FrenStaking.sol\":4864:4957  IERC721(stakingDestinationAddress).safeTransferFrom(address(this), msg.sender,tokenIds[i],\"\") */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup9\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6862:6877   */\n      swap6\n      dup7\n      and\n        /* \"contracts/FrenStaking.sol\":4864:4957  IERC721(stakingDestinationAddress).safeTransferFrom(address(this), msg.sender,tokenIds[i],\"\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6844:6878   */\n      mstore\n        /* \"#utility.yul\":6914:6929   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6894:6912   */\n      0x24\n      dup6\n      add\n        /* \"#utility.yul\":6887:6930   */\n      mstore\n      pop\n        /* \"contracts/FrenStaking.sol\":4942:4953  tokenIds[i] */\n      0x20\n      swap1\n      swap2\n      mul\n      add\n      calldataload\n        /* \"#utility.yul\":6946:6964   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6939:6973   */\n      mstore\n        /* \"#utility.yul\":7009:7012   */\n      0x80\n        /* \"#utility.yul\":6989:7007   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6982:7013   */\n      mstore\n      0x00\n        /* \"#utility.yul\":7029:7048   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":7022:7052   */\n      mstore\n        /* \"#utility.yul\":7069:7088   */\n      0xa4\n      add\n        /* \"contracts/FrenStaking.sol\":4864:4957  IERC721(stakingDestinationAddress).safeTransferFrom(address(this), msg.sender,tokenIds[i],\"\") */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":4605:4608  i++ */\n      dup1\n      dup1\n      tag_268\n      swap1\n      tag_139\n      jump\t// in\n    tag_268:\n      swap2\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":4568:4968  for (uint256 i; i < tokenIds.length; i++) {... */\n      jump(tag_245)\n    tag_246:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"contracts/FrenStaking.sol\":5179:5268  function flipIsClaimable() external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"contracts/FrenStaking.sol\":5250:5261  isClaimable */\n      0x07\n      dup1\n      sload\n      not(0xff)\n        /* \"contracts/FrenStaking.sol\":5235:5261  isClaimable = !isClaimable */\n      dup2\n      and\n        /* \"contracts/FrenStaking.sol\":5250:5261  isClaimable */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/FrenStaking.sol\":5249:5261  !isClaimable */\n      iszero\n        /* \"contracts/FrenStaking.sol\":5235:5261  isClaimable = !isClaimable */\n      or\n      swap1\n      sstore\n        /* \"contracts/FrenStaking.sol\":5179:5268  function flipIsClaimable() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FrenStaking.sol\":2329:2681  function depositsOf(address account) external view returns (uint256[] memory) {... */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/FrenStaking.sol\":2458:2476  _deposits[account] */\n      dup2\n      and\n        /* \"contracts/FrenStaking.sol\":2415:2455  EnumerableSet.UintSet storage depositSet */\n      0x00\n        /* \"contracts/FrenStaking.sol\":2458:2476  _deposits[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/FrenStaking.sol\":2458:2467  _deposits */\n      0x08\n        /* \"contracts/FrenStaking.sol\":2458:2476  _deposits[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/FrenStaking.sol\":2389:2405  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/FrenStaking.sol\":2527:2546  depositSet.length() */\n      tag_275\n        /* \"contracts/FrenStaking.sol\":2458:2476  _deposits[account] */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2527:2544  depositSet.length */\n      tag_276\n        /* \"contracts/FrenStaking.sol\":2527:2546  depositSet.length() */\n      jump\t// in\n    tag_275:\n        /* \"contracts/FrenStaking.sol\":2512:2547  new uint256[] (depositSet.length()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_278\n      jumpi\n      tag_278\n      tag_117\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_279\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_279:\n      pop\n        /* \"contracts/FrenStaking.sol\":2484:2547  uint256[] memory tokenIds = new uint256[] (depositSet.length()) */\n      swap1\n      pop\n        /* \"contracts/FrenStaking.sol\":2561:2570  uint256 i */\n      0x00\n        /* \"contracts/FrenStaking.sol\":2556:2651  for (uint256 i; i < depositSet.length(); i++) {... */\n    tag_280:\n        /* \"contracts/FrenStaking.sol\":2576:2595  depositSet.length() */\n      tag_283\n        /* \"contracts/FrenStaking.sol\":2576:2586  depositSet */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2576:2593  depositSet.length */\n      tag_276\n        /* \"contracts/FrenStaking.sol\":2576:2595  depositSet.length() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/FrenStaking.sol\":2572:2573  i */\n      dup2\n        /* \"contracts/FrenStaking.sol\":2572:2595  i < depositSet.length() */\n      lt\n        /* \"contracts/FrenStaking.sol\":2556:2651  for (uint256 i; i < depositSet.length(); i++) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"contracts/FrenStaking.sol\":2626:2642  depositSet.at(i) */\n      tag_284\n        /* \"contracts/FrenStaking.sol\":2626:2636  depositSet */\n      dup4\n        /* \"contracts/FrenStaking.sol\":2640:2641  i */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2626:2639  depositSet.at */\n      tag_285\n        /* \"contracts/FrenStaking.sol\":2626:2642  depositSet.at(i) */\n      jump\t// in\n    tag_284:\n        /* \"contracts/FrenStaking.sol\":2612:2620  tokenIds */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2621:2622  i */\n      dup3\n        /* \"contracts/FrenStaking.sol\":2612:2623  tokenIds[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_287\n      tag_124\n      jump\t// in\n    tag_287:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/FrenStaking.sol\":2612:2642  tokenIds[i] = depositSet.at(i) */\n      mstore\n        /* \"contracts/FrenStaking.sol\":2597:2600  i++ */\n      dup1\n      tag_288\n      dup2\n      tag_139\n      jump\t// in\n    tag_288:\n      swap2\n      pop\n      pop\n        /* \"contracts/FrenStaking.sol\":2556:2651  for (uint256 i; i < depositSet.length(); i++) {... */\n      jump(tag_280)\n    tag_281:\n      pop\n        /* \"contracts/FrenStaking.sol\":2666:2674  tokenIds */\n      swap4\n        /* \"contracts/FrenStaking.sol\":2329:2681  function depositsOf(address account) external view returns (uint256[] memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8408:8410   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8390:8411   */\n      mstore\n        /* \"#utility.yul\":8447:8449   */\n      0x26\n        /* \"#utility.yul\":8427:8445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8420:8450   */\n      mstore\n        /* \"#utility.yul\":8486:8520   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8466:8484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8459:8521   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8537:8555   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8530:8566   */\n      mstore\n        /* \"#utility.yul\":8583:8602   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_144\n        /* \"#utility.yul\":8206:8608   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_292:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":646:653  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":676:677  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:673  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:677  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":684:685  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":672:685  a < b ? a : b */\n      jump(tag_152)\n    tag_297:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":680:681  a */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":588:692  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11298:11442  function contains(UintSet storage set, uint256 value) internal view returns (bool) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11375:11379  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4355  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4367  set._indexes[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11398:11435  _contains(set._inner, bytes32(value)) */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4247:4374  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8815:8817   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8797:8818   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8834:8852   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8827:8857   */\n      mstore\n        /* \"#utility.yul\":8893:8927   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8873:8891   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8866:8928   */\n      mstore\n        /* \"#utility.yul\":8945:8963   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n        /* \"#utility.yul\":8613:8969   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_310\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_311\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_313:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9176:9178   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9158:9179   */\n      mstore\n        /* \"#utility.yul\":9215:9217   */\n      0x10\n        /* \"#utility.yul\":9195:9213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9188:9218   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":9234:9252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9227:9273   */\n      mstore\n        /* \"#utility.yul\":9290:9308   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_144\n        /* \"#utility.yul\":8974:9314   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10785:10914  function add(UintSet storage set, uint256 value) internal returns (bool) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10852:10856  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10875:10907  _add(set._inner, bytes32(value)) */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10880:10883  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10900:10905  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10875:10879  _add */\n      tag_322\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":10875:10907  _add(set._inner, bytes32(value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_325\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x02\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_313\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9521:9523   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9503:9524   */\n      mstore\n        /* \"#utility.yul\":9560:9562   */\n      0x1f\n        /* \"#utility.yul\":9540:9558   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9533:9563   */\n      mstore\n        /* \"#utility.yul\":9599:9632   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9579:9597   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9572:9633   */\n      mstore\n        /* \"#utility.yul\":9650:9668   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_144\n        /* \"#utility.yul\":9319:9674   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_330:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11082:11217  function remove(UintSet storage set, uint256 value) internal returns (bool) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11152:11156  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11175:11210  _remove(set._inner, bytes32(value)) */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11183:11186  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11203:11208  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11175:11182  _remove */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11175:11210  _remove(set._inner, bytes32(value)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11523:11635  function length(UintSet storage set) internal view returns (uint256) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11583:11590  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11609:11628  _length(set._inner) */\n      tag_114\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11617:11620  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4537:4555  set._values.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4455:4562  function _length(Set storage set) private view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":11977:12112  function at(UintSet storage set, uint256 index) internal view returns (uint256) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12048:12055  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12082:12104  _at(set._inner, index) */\n      tag_152\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12086:12089  set */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12098:12103  index */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12082:12085  _at */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":12082:12104  _at(set._inner, index) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x02))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9881:9883   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9863:9884   */\n      mstore\n        /* \"#utility.yul\":9920:9922   */\n      0x14\n        /* \"#utility.yul\":9900:9918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9893:9923   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":9939:9957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9932:9982   */\n      mstore\n        /* \"#utility.yul\":9999:10017   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_144\n        /* \"#utility.yul\":9679:10023   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2206:2610  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2269:2273  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4355  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4343:4362  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2350  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2338  set._values */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2327:2350  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2507:2525  set._values.length */\n      dup5\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2497  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2504  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2485:2525  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2539:2550  return true */\n      jump(tag_114)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2285:2604  if (!_contains(set, value)) {... */\n    tag_352:\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2588:2593  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2581:2593  return false */\n      jump(tag_114)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2778:4166  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2844:2848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:2993  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":2981:3000  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3015:3030  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3405  uint256 toDeleteIndex */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3422  valueIndex - 1 */\n      tag_357\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3421:3422  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3418  valueIndex */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3408:3422  valueIndex - 1 */\n      tag_128\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3474  set._values.length */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3384:3422  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3453  uint256 lastIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3478  set._values.length - 1 */\n      tag_358\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3477:3478  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3456:3478  set._values.length - 1 */\n      tag_128\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3436:3478  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3510:3523  toDeleteIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3506  lastIndex */\n      dup2\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3497:3523  lastIndex != toDeleteIndex */\n      eq\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3560  bytes32 lastValue */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3566  set */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3574  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3575:3584  lastIndex */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3563:3585  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_361\n      jumpi\n      tag_361\n      tag_124\n      jump\t// in\n    tag_361:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3543:3585  bytes32 lastValue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3714:3723  lastValue */\n      dup1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3688  set */\n      dup8\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3696  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3697:3710  toDeleteIndex */\n      dup5\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3711  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_124\n      jump\t// in\n    tag_364:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3685:3723  set._values[toDeleteIndex] = lastValue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3809  set._indexes */\n      0x01\n      dup9\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3820  set._indexes[lastValue] */\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3797:3833  set._indexes[lastValue] = valueIndex */\n      dup4\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3493:3891  if (lastIndex != toDeleteIndex) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3986  set._values.pop() */\n      dup6\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3972  set */\n      dup7\n      swap1\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3969:3986  set._values.pop() */\n      dup1\n      tag_367\n      jumpi\n      tag_367\n      tag_368\n      jump\t// in\n    tag_367:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4064  set */\n      dup6\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4073  set._indexes */\n      0x01\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4074:4079  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4061:4080  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4054:4080  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4102:4106  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4095:4106  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_114)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":3011:4160  if (valueIndex != 0) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4144:4149  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4137:4149  return false */\n      swap2\n      pop\n      pop\n      jump(tag_114)\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4971:4978  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5000  set */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5008  set._values */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":5009:5014  index */\n      dup3\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4997:5015  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_124\n      jump\t// in\n    tag_374:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4990:5015  return set._values[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4904:5022  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:395   */\n    tag_376:\n        /* \"#utility.yul\":290:310   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":339:370   */\n      dup2\n      and\n        /* \"#utility.yul\":329:371   */\n      dup2\n      eq\n        /* \"#utility.yul\":319:389   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":385:386   */\n      0x00\n        /* \"#utility.yul\":382:383   */\n      dup1\n        /* \"#utility.yul\":375:387   */\n      revert\n        /* \"#utility.yul\":319:389   */\n    tag_381:\n        /* \"#utility.yul\":222:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":400:527   */\n    tag_117:\n        /* \"#utility.yul\":461:471   */\n      0x4e487b71\n        /* \"#utility.yul\":456:459   */\n      0xe0\n        /* \"#utility.yul\":452:472   */\n      shl\n        /* \"#utility.yul\":449:450   */\n      0x00\n        /* \"#utility.yul\":442:473   */\n      mstore\n        /* \"#utility.yul\":492:496   */\n      0x41\n        /* \"#utility.yul\":489:490   */\n      0x04\n        /* \"#utility.yul\":482:497   */\n      mstore\n        /* \"#utility.yul\":516:520   */\n      0x24\n        /* \"#utility.yul\":513:514   */\n      0x00\n        /* \"#utility.yul\":506:521   */\n      revert\n        /* \"#utility.yul\":532:1721   */\n    tag_36:\n        /* \"#utility.yul\":625:631   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup1\n        /* \"#utility.yul\":686:688   */\n      0x40\n        /* \"#utility.yul\":674:683   */\n      dup4\n        /* \"#utility.yul\":665:672   */\n      dup6\n        /* \"#utility.yul\":661:684   */\n      sub\n        /* \"#utility.yul\":657:689   */\n      slt\n        /* \"#utility.yul\":654:706   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":702:703   */\n      0x00\n        /* \"#utility.yul\":699:700   */\n      dup1\n        /* \"#utility.yul\":692:704   */\n      revert\n        /* \"#utility.yul\":654:706   */\n    tag_384:\n        /* \"#utility.yul\":725:754   */\n      tag_385\n        /* \"#utility.yul\":744:753   */\n      dup4\n        /* \"#utility.yul\":725:754   */\n      tag_376\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":715:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":773:775   */\n      0x20\n        /* \"#utility.yul\":826:828   */\n      dup1\n        /* \"#utility.yul\":815:824   */\n      dup5\n        /* \"#utility.yul\":811:829   */\n      add\n        /* \"#utility.yul\":798:830   */\n      calldataload\n        /* \"#utility.yul\":849:867   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":890:892   */\n      dup1\n        /* \"#utility.yul\":882:888   */\n      dup3\n        /* \"#utility.yul\":879:893   */\n      gt\n        /* \"#utility.yul\":876:910   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":903:904   */\n      dup1\n        /* \"#utility.yul\":896:908   */\n      revert\n        /* \"#utility.yul\":876:910   */\n    tag_386:\n        /* \"#utility.yul\":944:950   */\n      dup2\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":919:951   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:996   */\n      dup7\n        /* \"#utility.yul\":982:986   */\n      0x1f\n        /* \"#utility.yul\":978:980   */\n      dup4\n        /* \"#utility.yul\":974:987   */\n      add\n        /* \"#utility.yul\":970:997   */\n      slt\n        /* \"#utility.yul\":960:1015   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":1011:1012   */\n      0x00\n        /* \"#utility.yul\":1008:1009   */\n      dup1\n        /* \"#utility.yul\":1001:1013   */\n      revert\n        /* \"#utility.yul\":960:1015   */\n    tag_387:\n        /* \"#utility.yul\":1047:1049   */\n      dup2\n        /* \"#utility.yul\":1034:1050   */\n      calldataload\n        /* \"#utility.yul\":1069:1071   */\n      dup2\n        /* \"#utility.yul\":1065:1067   */\n      dup2\n        /* \"#utility.yul\":1062:1072   */\n      gt\n        /* \"#utility.yul\":1059:1095   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":1075:1093   */\n      tag_389\n      tag_117\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":1121:1123   */\n      dup1\n        /* \"#utility.yul\":1118:1119   */\n      0x05\n        /* \"#utility.yul\":1114:1124   */\n      shl\n        /* \"#utility.yul\":1153:1155   */\n      0x40\n        /* \"#utility.yul\":1147:1156   */\n      mload\n        /* \"#utility.yul\":1216:1218   */\n      0x1f\n        /* \"#utility.yul\":1212:1219   */\n      not\n        /* \"#utility.yul\":1207:1209   */\n      0x3f\n        /* \"#utility.yul\":1203:1205   */\n      dup4\n        /* \"#utility.yul\":1199:1210   */\n      add\n        /* \"#utility.yul\":1195:1220   */\n      and\n        /* \"#utility.yul\":1187:1193   */\n      dup2\n        /* \"#utility.yul\":1183:1221   */\n      add\n        /* \"#utility.yul\":1271:1277   */\n      dup2\n        /* \"#utility.yul\":1259:1269   */\n      dup2\n        /* \"#utility.yul\":1256:1278   */\n      lt\n        /* \"#utility.yul\":1251:1253   */\n      dup6\n        /* \"#utility.yul\":1239:1249   */\n      dup3\n        /* \"#utility.yul\":1236:1254   */\n      gt\n        /* \"#utility.yul\":1233:1279   */\n      or\n        /* \"#utility.yul\":1230:1302   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":1282:1300   */\n      tag_391\n      tag_117\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1318:1320   */\n      0x40\n        /* \"#utility.yul\":1311:1333   */\n      mstore\n        /* \"#utility.yul\":1368:1386   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":1402:1417   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":1444:1455   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1440:1460   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":1472:1491   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":1469:1508   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":1504:1505   */\n      0x00\n        /* \"#utility.yul\":1501:1502   */\n      dup1\n        /* \"#utility.yul\":1494:1506   */\n      revert\n        /* \"#utility.yul\":1469:1508   */\n    tag_392:\n        /* \"#utility.yul\":1528:1539   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1548:1690   */\n    tag_393:\n        /* \"#utility.yul\":1564:1570   */\n      dup3\n        /* \"#utility.yul\":1559:1562   */\n      dup6\n        /* \"#utility.yul\":1556:1571   */\n      lt\n        /* \"#utility.yul\":1548:1690   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":1630:1647   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":1618:1648   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1581:1593   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":1668:1680   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":1548:1690   */\n      jump(tag_393)\n    tag_395:\n        /* \"#utility.yul\":1709:1715   */\n      dup1\n        /* \"#utility.yul\":1699:1715   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":532:1721   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1726:2358   */\n    tag_39:\n        /* \"#utility.yul\":1897:1899   */\n      0x20\n        /* \"#utility.yul\":1949:1970   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2019:2032   */\n      dup3\n      mload\n        /* \"#utility.yul\":1922:1940   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2041:2063   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1868:1872   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1897:1899   */\n      swap1\n        /* \"#utility.yul\":2120:2135   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":2094:2096   */\n      0x40\n        /* \"#utility.yul\":2079:2097   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1868:1872   */\n      dup5\n        /* \"#utility.yul\":2163:2332   */\n    tag_397:\n        /* \"#utility.yul\":2177:2183   */\n      dup2\n        /* \"#utility.yul\":2174:2175   */\n      dup2\n        /* \"#utility.yul\":2171:2184   */\n      lt\n        /* \"#utility.yul\":2163:2332   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":2238:2251   */\n      dup4\n      mload\n        /* \"#utility.yul\":2226:2252   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2307:2322   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":2272:2284   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":2199:2200   */\n      0x01\n        /* \"#utility.yul\":2192:2201   */\n      add\n        /* \"#utility.yul\":2163:2332   */\n      jump(tag_397)\n    tag_399:\n      pop\n        /* \"#utility.yul\":2349:2352   */\n      swap1\n      swap7\n        /* \"#utility.yul\":1726:2358   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2363:3171   */\n    tag_42:\n        /* \"#utility.yul\":2460:2466   */\n      0x00\n        /* \"#utility.yul\":2468:2474   */\n      dup1\n        /* \"#utility.yul\":2476:2482   */\n      0x00\n        /* \"#utility.yul\":2484:2490   */\n      dup1\n        /* \"#utility.yul\":2492:2498   */\n      0x00\n        /* \"#utility.yul\":2545:2548   */\n      0x80\n        /* \"#utility.yul\":2533:2542   */\n      dup7\n        /* \"#utility.yul\":2524:2531   */\n      dup9\n        /* \"#utility.yul\":2520:2543   */\n      sub\n        /* \"#utility.yul\":2516:2549   */\n      slt\n        /* \"#utility.yul\":2513:2566   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":2562:2563   */\n      0x00\n        /* \"#utility.yul\":2559:2560   */\n      dup1\n        /* \"#utility.yul\":2552:2564   */\n      revert\n        /* \"#utility.yul\":2513:2566   */\n    tag_401:\n        /* \"#utility.yul\":2585:2614   */\n      tag_402\n        /* \"#utility.yul\":2604:2613   */\n      dup7\n        /* \"#utility.yul\":2585:2614   */\n      tag_376\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2575:2614   */\n      swap5\n      pop\n        /* \"#utility.yul\":2633:2671   */\n      tag_403\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2656:2665   */\n      dup8\n        /* \"#utility.yul\":2652:2670   */\n      add\n        /* \"#utility.yul\":2633:2671   */\n      tag_376\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2623:2671   */\n      swap4\n      pop\n        /* \"#utility.yul\":2718:2720   */\n      0x40\n        /* \"#utility.yul\":2707:2716   */\n      dup7\n        /* \"#utility.yul\":2703:2721   */\n      add\n        /* \"#utility.yul\":2690:2722   */\n      calldataload\n        /* \"#utility.yul\":2680:2722   */\n      swap3\n      pop\n        /* \"#utility.yul\":2773:2775   */\n      0x60\n        /* \"#utility.yul\":2762:2771   */\n      dup7\n        /* \"#utility.yul\":2758:2776   */\n      add\n        /* \"#utility.yul\":2745:2777   */\n      calldataload\n        /* \"#utility.yul\":2796:2814   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2837:2839   */\n      dup1\n        /* \"#utility.yul\":2829:2835   */\n      dup3\n        /* \"#utility.yul\":2826:2840   */\n      gt\n        /* \"#utility.yul\":2823:2857   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":2853:2854   */\n      0x00\n        /* \"#utility.yul\":2850:2851   */\n      dup1\n        /* \"#utility.yul\":2843:2855   */\n      revert\n        /* \"#utility.yul\":2823:2857   */\n    tag_404:\n        /* \"#utility.yul\":2891:2897   */\n      dup2\n        /* \"#utility.yul\":2880:2889   */\n      dup9\n        /* \"#utility.yul\":2876:2898   */\n      add\n        /* \"#utility.yul\":2866:2898   */\n      swap2\n      pop\n        /* \"#utility.yul\":2936:2943   */\n      dup9\n        /* \"#utility.yul\":2929:2933   */\n      0x1f\n        /* \"#utility.yul\":2925:2927   */\n      dup4\n        /* \"#utility.yul\":2921:2934   */\n      add\n        /* \"#utility.yul\":2917:2944   */\n      slt\n        /* \"#utility.yul\":2907:2962   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2955:2956   */\n      dup1\n        /* \"#utility.yul\":2948:2960   */\n      revert\n        /* \"#utility.yul\":2907:2962   */\n    tag_405:\n        /* \"#utility.yul\":2998:3000   */\n      dup2\n        /* \"#utility.yul\":2985:3001   */\n      calldataload\n        /* \"#utility.yul\":3024:3026   */\n      dup2\n        /* \"#utility.yul\":3016:3022   */\n      dup2\n        /* \"#utility.yul\":3013:3027   */\n      gt\n        /* \"#utility.yul\":3010:3044   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":3040:3041   */\n      0x00\n        /* \"#utility.yul\":3037:3038   */\n      dup1\n        /* \"#utility.yul\":3030:3042   */\n      revert\n        /* \"#utility.yul\":3010:3044   */\n    tag_406:\n        /* \"#utility.yul\":3085:3092   */\n      dup10\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3071:3077   */\n      dup3\n        /* \"#utility.yul\":3067:3069   */\n      dup6\n        /* \"#utility.yul\":3063:3078   */\n      add\n        /* \"#utility.yul\":3059:3083   */\n      add\n        /* \"#utility.yul\":3056:3093   */\n      gt\n        /* \"#utility.yul\":3053:3110   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":3106:3107   */\n      0x00\n        /* \"#utility.yul\":3103:3104   */\n      dup1\n        /* \"#utility.yul\":3096:3108   */\n      revert\n        /* \"#utility.yul\":3053:3110   */\n    tag_407:\n        /* \"#utility.yul\":2363:3171   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":3137:3139   */\n      0x20\n        /* \"#utility.yul\":3129:3140   */\n      add\n      swap5\n        /* \"#utility.yul\":3159:3165   */\n      swap4\n        /* \"#utility.yul\":2363:3171   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3637   */\n    tag_48:\n        /* \"#utility.yul\":3451:3457   */\n      0x00\n        /* \"#utility.yul\":3459:3465   */\n      dup1\n        /* \"#utility.yul\":3512:3514   */\n      0x40\n        /* \"#utility.yul\":3500:3509   */\n      dup4\n        /* \"#utility.yul\":3491:3498   */\n      dup6\n        /* \"#utility.yul\":3487:3510   */\n      sub\n        /* \"#utility.yul\":3483:3515   */\n      slt\n        /* \"#utility.yul\":3480:3532   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":3528:3529   */\n      0x00\n        /* \"#utility.yul\":3525:3526   */\n      dup1\n        /* \"#utility.yul\":3518:3530   */\n      revert\n        /* \"#utility.yul\":3480:3532   */\n    tag_410:\n        /* \"#utility.yul\":3551:3580   */\n      tag_411\n        /* \"#utility.yul\":3570:3579   */\n      dup4\n        /* \"#utility.yul\":3551:3580   */\n      tag_376\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3541:3580   */\n      swap5\n        /* \"#utility.yul\":3627:3629   */\n      0x20\n        /* \"#utility.yul\":3612:3630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3599:3631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3383:3637   */\n      jump\t// out\n        /* \"#utility.yul\":3824:4004   */\n    tag_60:\n        /* \"#utility.yul\":3883:3889   */\n      0x00\n        /* \"#utility.yul\":3936:3938   */\n      0x20\n        /* \"#utility.yul\":3924:3933   */\n      dup3\n        /* \"#utility.yul\":3915:3922   */\n      dup5\n        /* \"#utility.yul\":3911:3934   */\n      sub\n        /* \"#utility.yul\":3907:3939   */\n      slt\n        /* \"#utility.yul\":3904:3956   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3952:3953   */\n      0x00\n        /* \"#utility.yul\":3949:3950   */\n      dup1\n        /* \"#utility.yul\":3942:3954   */\n      revert\n        /* \"#utility.yul\":3904:3956   */\n    tag_414:\n      pop\n        /* \"#utility.yul\":3975:3998   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3824:4004   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4009:4624   */\n    tag_72:\n        /* \"#utility.yul\":4095:4101   */\n      0x00\n        /* \"#utility.yul\":4103:4109   */\n      dup1\n        /* \"#utility.yul\":4156:4158   */\n      0x20\n        /* \"#utility.yul\":4144:4153   */\n      dup4\n        /* \"#utility.yul\":4135:4142   */\n      dup6\n        /* \"#utility.yul\":4131:4154   */\n      sub\n        /* \"#utility.yul\":4127:4159   */\n      slt\n        /* \"#utility.yul\":4124:4176   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":4172:4173   */\n      0x00\n        /* \"#utility.yul\":4169:4170   */\n      dup1\n        /* \"#utility.yul\":4162:4174   */\n      revert\n        /* \"#utility.yul\":4124:4176   */\n    tag_416:\n        /* \"#utility.yul\":4212:4221   */\n      dup3\n        /* \"#utility.yul\":4199:4222   */\n      calldataload\n        /* \"#utility.yul\":4241:4259   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4282:4284   */\n      dup1\n        /* \"#utility.yul\":4274:4280   */\n      dup3\n        /* \"#utility.yul\":4271:4285   */\n      gt\n        /* \"#utility.yul\":4268:4302   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4298:4299   */\n      0x00\n        /* \"#utility.yul\":4295:4296   */\n      dup1\n        /* \"#utility.yul\":4288:4300   */\n      revert\n        /* \"#utility.yul\":4268:4302   */\n    tag_417:\n        /* \"#utility.yul\":4336:4342   */\n      dup2\n        /* \"#utility.yul\":4325:4334   */\n      dup6\n        /* \"#utility.yul\":4321:4343   */\n      add\n        /* \"#utility.yul\":4311:4343   */\n      swap2\n      pop\n        /* \"#utility.yul\":4381:4388   */\n      dup6\n        /* \"#utility.yul\":4374:4378   */\n      0x1f\n        /* \"#utility.yul\":4370:4372   */\n      dup4\n        /* \"#utility.yul\":4366:4379   */\n      add\n        /* \"#utility.yul\":4362:4389   */\n      slt\n        /* \"#utility.yul\":4352:4407   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":4403:4404   */\n      0x00\n        /* \"#utility.yul\":4400:4401   */\n      dup1\n        /* \"#utility.yul\":4393:4405   */\n      revert\n        /* \"#utility.yul\":4352:4407   */\n    tag_418:\n        /* \"#utility.yul\":4443:4445   */\n      dup2\n        /* \"#utility.yul\":4430:4446   */\n      calldataload\n        /* \"#utility.yul\":4469:4471   */\n      dup2\n        /* \"#utility.yul\":4461:4467   */\n      dup2\n        /* \"#utility.yul\":4458:4472   */\n      gt\n        /* \"#utility.yul\":4455:4489   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":4485:4486   */\n      0x00\n        /* \"#utility.yul\":4482:4483   */\n      dup1\n        /* \"#utility.yul\":4475:4487   */\n      revert\n        /* \"#utility.yul\":4455:4489   */\n    tag_419:\n        /* \"#utility.yul\":4538:4545   */\n      dup7\n        /* \"#utility.yul\":4533:4535   */\n      0x20\n        /* \"#utility.yul\":4523:4529   */\n      dup3\n        /* \"#utility.yul\":4520:4521   */\n      0x05\n        /* \"#utility.yul\":4516:4530   */\n      shl\n        /* \"#utility.yul\":4512:4514   */\n      dup6\n        /* \"#utility.yul\":4508:4531   */\n      add\n        /* \"#utility.yul\":4504:4536   */\n      add\n        /* \"#utility.yul\":4501:4546   */\n      gt\n        /* \"#utility.yul\":4498:4563   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4559:4560   */\n      0x00\n        /* \"#utility.yul\":4556:4557   */\n      dup1\n        /* \"#utility.yul\":4549:4561   */\n      revert\n        /* \"#utility.yul\":4498:4563   */\n    tag_420:\n        /* \"#utility.yul\":4590:4592   */\n      0x20\n        /* \"#utility.yul\":4582:4593   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":4612:4618   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":4009:4624   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5007   */\n    tag_104:\n        /* \"#utility.yul\":4880:4886   */\n      0x00\n        /* \"#utility.yul\":4933:4935   */\n      0x20\n        /* \"#utility.yul\":4921:4930   */\n      dup3\n        /* \"#utility.yul\":4912:4919   */\n      dup5\n        /* \"#utility.yul\":4908:4931   */\n      sub\n        /* \"#utility.yul\":4904:4936   */\n      slt\n        /* \"#utility.yul\":4901:4953   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":4949:4950   */\n      0x00\n        /* \"#utility.yul\":4946:4947   */\n      dup1\n        /* \"#utility.yul\":4939:4951   */\n      revert\n        /* \"#utility.yul\":4901:4953   */\n    tag_423:\n        /* \"#utility.yul\":4972:5001   */\n      tag_152\n        /* \"#utility.yul\":4991:5000   */\n      dup3\n        /* \"#utility.yul\":4972:5001   */\n      tag_376\n      jump\t// in\n        /* \"#utility.yul\":5012:5139   */\n    tag_124:\n        /* \"#utility.yul\":5073:5083   */\n      0x4e487b71\n        /* \"#utility.yul\":5068:5071   */\n      0xe0\n        /* \"#utility.yul\":5064:5084   */\n      shl\n        /* \"#utility.yul\":5061:5062   */\n      0x00\n        /* \"#utility.yul\":5054:5085   */\n      mstore\n        /* \"#utility.yul\":5104:5108   */\n      0x32\n        /* \"#utility.yul\":5101:5102   */\n      0x04\n        /* \"#utility.yul\":5094:5109   */\n      mstore\n        /* \"#utility.yul\":5128:5132   */\n      0x24\n        /* \"#utility.yul\":5125:5126   */\n      0x00\n        /* \"#utility.yul\":5118:5133   */\n      revert\n        /* \"#utility.yul\":5144:5271   */\n    tag_377:\n        /* \"#utility.yul\":5205:5215   */\n      0x4e487b71\n        /* \"#utility.yul\":5200:5203   */\n      0xe0\n        /* \"#utility.yul\":5196:5216   */\n      shl\n        /* \"#utility.yul\":5193:5194   */\n      0x00\n        /* \"#utility.yul\":5186:5217   */\n      mstore\n        /* \"#utility.yul\":5236:5240   */\n      0x11\n        /* \"#utility.yul\":5233:5234   */\n      0x04\n        /* \"#utility.yul\":5226:5241   */\n      mstore\n        /* \"#utility.yul\":5260:5264   */\n      0x24\n        /* \"#utility.yul\":5257:5258   */\n      0x00\n        /* \"#utility.yul\":5250:5265   */\n      revert\n        /* \"#utility.yul\":5276:5401   */\n    tag_128:\n        /* \"#utility.yul\":5316:5320   */\n      0x00\n        /* \"#utility.yul\":5344:5345   */\n      dup3\n        /* \"#utility.yul\":5341:5342   */\n      dup3\n        /* \"#utility.yul\":5338:5346   */\n      lt\n        /* \"#utility.yul\":5335:5369   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5349:5367   */\n      tag_429\n      tag_377\n      jump\t// in\n    tag_429:\n      pop\n        /* \"#utility.yul\":5386:5395   */\n      sub\n      swap1\n        /* \"#utility.yul\":5276:5401   */\n      jump\t// out\n        /* \"#utility.yul\":5406:5574   */\n    tag_134:\n        /* \"#utility.yul\":5446:5453   */\n      0x00\n        /* \"#utility.yul\":5512:5513   */\n      dup2\n        /* \"#utility.yul\":5508:5509   */\n      0x00\n        /* \"#utility.yul\":5504:5510   */\n      not\n        /* \"#utility.yul\":5500:5514   */\n      div\n        /* \"#utility.yul\":5497:5498   */\n      dup4\n        /* \"#utility.yul\":5494:5515   */\n      gt\n        /* \"#utility.yul\":5489:5490   */\n      dup3\n        /* \"#utility.yul\":5482:5491   */\n      iszero\n        /* \"#utility.yul\":5475:5492   */\n      iszero\n        /* \"#utility.yul\":5471:5516   */\n      and\n        /* \"#utility.yul\":5468:5539   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":5519:5537   */\n      tag_432\n      tag_377\n      jump\t// in\n    tag_432:\n      pop\n        /* \"#utility.yul\":5559:5568   */\n      mul\n      swap1\n        /* \"#utility.yul\":5406:5574   */\n      jump\t// out\n        /* \"#utility.yul\":5579:5714   */\n    tag_139:\n        /* \"#utility.yul\":5618:5621   */\n      0x00\n        /* \"#utility.yul\":5639:5656   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5636:5679   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":5659:5677   */\n      tag_435\n      tag_377\n      jump\t// in\n    tag_435:\n      pop\n        /* \"#utility.yul\":5706:5707   */\n      0x01\n        /* \"#utility.yul\":5695:5708   */\n      add\n      swap1\n        /* \"#utility.yul\":5579:5714   */\n      jump\t// out\n        /* \"#utility.yul\":6062:6190   */\n    tag_166:\n        /* \"#utility.yul\":6102:6105   */\n      0x00\n        /* \"#utility.yul\":6133:6134   */\n      dup3\n        /* \"#utility.yul\":6129:6135   */\n      not\n        /* \"#utility.yul\":6126:6127   */\n      dup3\n        /* \"#utility.yul\":6123:6136   */\n      gt\n        /* \"#utility.yul\":6120:6159   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":6139:6157   */\n      tag_439\n      tag_377\n      jump\t// in\n    tag_439:\n      pop\n        /* \"#utility.yul\":6175:6184   */\n      add\n      swap1\n        /* \"#utility.yul\":6062:6190   */\n      jump\t// out\n        /* \"#utility.yul\":7378:7655   */\n    tag_215:\n        /* \"#utility.yul\":7445:7451   */\n      0x00\n        /* \"#utility.yul\":7498:7500   */\n      0x20\n        /* \"#utility.yul\":7486:7495   */\n      dup3\n        /* \"#utility.yul\":7477:7484   */\n      dup5\n        /* \"#utility.yul\":7473:7496   */\n      sub\n        /* \"#utility.yul\":7469:7501   */\n      slt\n        /* \"#utility.yul\":7466:7518   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":7514:7515   */\n      0x00\n        /* \"#utility.yul\":7511:7512   */\n      dup1\n        /* \"#utility.yul\":7504:7516   */\n      revert\n        /* \"#utility.yul\":7466:7518   */\n    tag_444:\n        /* \"#utility.yul\":7546:7555   */\n      dup2\n        /* \"#utility.yul\":7540:7556   */\n      mload\n        /* \"#utility.yul\":7599:7604   */\n      dup1\n        /* \"#utility.yul\":7592:7605   */\n      iszero\n        /* \"#utility.yul\":7585:7606   */\n      iszero\n        /* \"#utility.yul\":7578:7583   */\n      dup2\n        /* \"#utility.yul\":7575:7607   */\n      eq\n        /* \"#utility.yul\":7565:7625   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":7621:7622   */\n      0x00\n        /* \"#utility.yul\":7618:7619   */\n      dup1\n        /* \"#utility.yul\":7611:7623   */\n      revert\n        /* \"#utility.yul\":7660:7844   */\n    tag_233:\n        /* \"#utility.yul\":7730:7736   */\n      0x00\n        /* \"#utility.yul\":7783:7785   */\n      0x20\n        /* \"#utility.yul\":7771:7780   */\n      dup3\n        /* \"#utility.yul\":7762:7769   */\n      dup5\n        /* \"#utility.yul\":7758:7781   */\n      sub\n        /* \"#utility.yul\":7754:7786   */\n      slt\n        /* \"#utility.yul\":7751:7803   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":7799:7800   */\n      0x00\n        /* \"#utility.yul\":7796:7797   */\n      dup1\n        /* \"#utility.yul\":7789:7801   */\n      revert\n        /* \"#utility.yul\":7751:7803   */\n    tag_447:\n      pop\n        /* \"#utility.yul\":7822:7838   */\n      mload\n      swap2\n        /* \"#utility.yul\":7660:7844   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10028:10155   */\n    tag_368:\n        /* \"#utility.yul\":10089:10099   */\n      0x4e487b71\n        /* \"#utility.yul\":10084:10087   */\n      0xe0\n        /* \"#utility.yul\":10080:10100   */\n      shl\n        /* \"#utility.yul\":10077:10078   */\n      0x00\n        /* \"#utility.yul\":10070:10101   */\n      mstore\n        /* \"#utility.yul\":10120:10124   */\n      0x31\n        /* \"#utility.yul\":10117:10118   */\n      0x04\n        /* \"#utility.yul\":10110:10125   */\n      mstore\n        /* \"#utility.yul\":10144:10148   */\n      0x24\n        /* \"#utility.yul\":10141:10142   */\n      0x00\n        /* \"#utility.yul\":10134:10149   */\n      revert\n\n    auxdata: 0xa2646970667358221220b8e4ab78c31c0e2aef7d2a8fb4a0fec9212d1acbc21c9474ca2942bdb96c70e064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2761": {
									"entryPoint": null,
									"id": 2761,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 279,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 372,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 199,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1397:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:14"
															},
															"nodeType": "YulIf",
															"src": "115:70:14"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:14",
														"type": ""
													}
												],
												"src": "14:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:284:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "375:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "384:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "387:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:33:14"
															},
															"nodeType": "YulIf",
															"src": "338:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "400:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:40:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "459:35:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "479:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "490:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "475:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "475:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "469:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:25:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "503:35:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "534:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "519:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "519:18:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:25:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "503:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "547:59:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "591:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "602:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "587:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "587:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "557:29:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:49:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "270:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "281:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "293:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "301:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "309:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "317:6:14",
														"type": ""
													}
												],
												"src": "196:416:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:177:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "700:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "721:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "728:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "733:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "724:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "724:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "714:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "714:31:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "714:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "765:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "768:4:14",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "758:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "758:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "758:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "793:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "796:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "786:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "786:15:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "786:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "681:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "688:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "684:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "684:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "678:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "678:13:14"
															},
															"nodeType": "YulIf",
															"src": "675:136:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "820:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "831:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "834:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "820:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "648:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "651:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "657:3:14",
														"type": ""
													}
												],
												"src": "617:225:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "948:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "958:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "970:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "966:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "966:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "958:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1000:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1015:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1031:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1036:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1027:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1027:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1040:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1023:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1023:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "993:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "917:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "928:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "939:4:14",
														"type": ""
													}
												],
												"src": "847:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1246:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1257:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1280:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1291:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1276:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1296:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1269:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1269:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1319:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1330:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1315:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:18:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1335:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1308:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1363:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1386:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1371:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1363:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1206:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1220:4:14",
														"type": ""
													}
												],
												"src": "1055:340:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16E2 CODESIZE SUB DUP1 PUSH3 0x16E2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x45 SWAP2 PUSH3 0x1DE JUMP JUMPDEST PUSH3 0x50 CALLER PUSH3 0xC7 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x6 DUP4 SWAP1 SSTORE PUSH3 0x8A DUP3 NUMBER PUSH3 0x229 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0xB2 PUSH3 0x117 JUMP JUMPDEST POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x250 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x121 PUSH3 0x174 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH3 0x157 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x1BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x200 DUP6 PUSH3 0x1C1 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP6 ADD MLOAD SWAP2 POP PUSH3 0x21E PUSH1 0x60 DUP7 ADD PUSH3 0x1C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x24B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0x1482 DUP1 PUSH3 0x260 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EAC6239 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x983D95CE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xB343AE14 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCA1C2019 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xDEEC7EFF EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EAC6239 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34FCF437 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x515A20BA EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x222A2C4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x68C526F EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x276184AE EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x219 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x235 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x275 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x376 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3C2 JUMPI PUSH2 0x3C2 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x40F NUMBER PUSH1 0x5 SLOAD PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x43B SWAP1 DUP4 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x446 JUMPI PUSH1 0x0 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x6 SLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x475 JUMPI PUSH2 0x475 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x48B DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A5 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x4CD SWAP1 NUMBER SWAP1 PUSH2 0xCCA JUMP JUMPDEST GT PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420626C6F636B73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x542 SWAP1 NUMBER SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x579 JUMPI PUSH1 0x0 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x6 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xD52 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5CE DUP2 NUMBER PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x761 JUMPI PUSH2 0x655 CALLER DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x49B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x674 SWAP1 DUP5 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x69E JUMPI PUSH2 0x69E PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x74E DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xDEA JUMP JUMPDEST POP DUP1 PUSH2 0x759 DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x62B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x76E PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x791 NUMBER PUSH1 0x5 SLOAD PUSH2 0xCCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH2 0x7B4 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST PUSH2 0x7BE SWAP1 DUP5 PUSH2 0x13E3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP DUP4 SWAP2 SWAP1 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x7E5 JUMPI PUSH2 0x7E5 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x809 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x796 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x890 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x141D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x989 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x9C1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB6F JUMPI PUSH2 0x9FF DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20746F6B656E206E6F74206465706F736974656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xA61 CALLER DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA80 SWAP1 DUP5 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAB9 SWAP1 POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xA9B JUMPI PUSH2 0xA9B PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xEDC JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xB67 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C4 JUMP JUMPDEST POP PUSH2 0x9AD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xB81 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xBB9 DUP3 PUSH2 0xEE8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xC09 DUP4 PUSH2 0xEE8 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC1A DUP4 DUP3 PUSH2 0xEF2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC2C JUMPI PUSH2 0xC2C PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xC41 DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC00 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC59 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xCC7 DUP2 PUSH2 0xDF6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xCD9 JUMPI DUP2 PUSH2 0x596 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x596 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xD5A PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE4E PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD87 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF8E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x495 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 PUSH2 0xFBA PUSH1 0x1 DUP4 PUSH2 0x1394 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1033 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFEE JUMPI PUSH2 0xFEE PUSH2 0x1368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1044 JUMPI PUSH2 0x1044 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A0 JUMPI PUSH2 0x10A0 PUSH2 0x1368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1101 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1145 PUSH2 0x10CF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x11A6 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x118D JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11EE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11D2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x121B DUP7 PUSH2 0x10B3 JUMP JUMPDEST SWAP5 POP PUSH2 0x1229 PUSH1 0x20 DUP8 ADD PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B1 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH2 0x137E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x137E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DC JUMPI PUSH2 0x13DC PUSH2 0x137E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F6 JUMPI PUSH2 0x13F6 PUSH2 0x137E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xE4 0xAB PUSH25 0xC31C0E2AEF7D2A8FB4A0FEC9212D1ACBC21C9474CA2942BDB9 PUSH13 0x70E064736F6C634300080D0033 ",
							"sourceMap": "665:4787:13:-:0;;;821:64;;;-1:-1:-1;;;;;;821:64:13;;;1330:334;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:8;936:18:0;:32::i;:::-;1716:1:2;1821:22;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;1447:25:13;:54;;-1:-1:-1;;;;;;1447:54:13;-1:-1:-1;;;;;1447:54:13;;;;;1511:4;:12;;;1546:26;1561:11;1546:12;:26;:::i;:::-;1533:10;:39;1582:12;:28;;-1:-1:-1;;;;;;1582:28:13;-1:-1:-1;;;;;1582:28:13;;;;;1620:8;:6;:8::i;:::-;-1:-1:-1;;1638:11:13;:19;;-1:-1:-1;;1638:19:13;;;-1:-1:-1;665:4787:13;;-1:-1:-1;665:4787:13;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:8::0;;640:96;2281:12:1::1;2274:20;::::0;-1:-1:-1;;;;;1011:32:14;;;993:51;;981:2;966:18;2274:20:1::1;;;;;;;2186:115::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;1257:2:14;1828:38:1;;;1239:21:14;1296:2;1276:18;;;1269:30;-1:-1:-1;;;1315:18:14;;;1308:46;1371:18;;1828:38:1;;;;;;;;1767:106::o;14:177:14:-;93:13;;-1:-1:-1;;;;;135:31:14;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:416::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;490:2;479:9;475:18;469:25;459:35;;534:2;523:9;519:18;513:25;503:35;;557:49;602:2;591:9;587:18;557:49;:::i;:::-;547:59;;196:416;;;;;;;:::o;617:225::-;657:3;688:1;684:6;681:1;678:13;675:136;;;733:10;728:3;724:20;721:1;714:31;768:4;765:1;758:15;796:4;793:1;786:15;675:136;-1:-1:-1;827:9:14;;617:225::o;1055:340::-;665:4787:13;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_add_2111": {
									"entryPoint": 3911,
									"id": 2111,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_at_2245": {
									"entryPoint": 4233,
									"id": 2245,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_checkOwner_54": {
									"entryPoint": 3320,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_contains_2214": {
									"entryPoint": null,
									"id": 2214,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_depositBlocks_2719": {
									"entryPoint": null,
									"id": 2719,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_length_2228": {
									"entryPoint": null,
									"id": 2228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_273": {
									"entryPoint": null,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_265": {
									"entryPoint": 3715,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_203": {
									"entryPoint": 3654,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_remove_2195": {
									"entryPoint": 3990,
									"id": 2195,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_requireNotPaused_176": {
									"entryPoint": 3492,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 3838,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3574,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 3410,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@accumulatedTokens_2723": {
									"entryPoint": null,
									"id": 2723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_2562": {
									"entryPoint": 3562,
									"id": 2562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@at_2640": {
									"entryPoint": 3826,
									"id": 2640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateReward_2986": {
									"entryPoint": 1179,
									"id": 2986,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@calculateRewards_2933": {
									"entryPoint": 858,
									"id": 2933,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimRewards_3060": {
									"entryPoint": 1894,
									"id": 3060,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@contains_2604": {
									"entryPoint": 3296,
									"id": 2604,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_3128": {
									"entryPoint": 1492,
									"id": 3128,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositsOf_2861": {
									"entryPoint": 2965,
									"id": 2861,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@erc20Address_2702": {
									"entryPoint": null,
									"id": 2702,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@expiration_2704": {
									"entryPoint": null,
									"id": 2704,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@flipIsClaimable_3241": {
									"entryPoint": 2937,
									"id": 3241,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isClaimable_2708": {
									"entryPoint": null,
									"id": 2708,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@length_2619": {
									"entryPoint": 3816,
									"id": 2619,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@min_924": {
									"entryPoint": 3274,
									"id": 924,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@onERC721Received_3260": {
									"entryPoint": null,
									"id": 3260,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2770": {
									"entryPoint": 2216,
									"id": 2770,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rate_2706": {
									"entryPoint": null,
									"id": 2706,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@remove_2583": {
									"entryPoint": 3804,
									"id": 2583,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2198,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setExpiration_2806": {
									"entryPoint": 1468,
									"id": 2806,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setRate_2791": {
									"entryPoint": 1437,
									"id": 2791,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingDestinationAddress_2700": {
									"entryPoint": null,
									"id": 2700,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 3153,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2779": {
									"entryPoint": 1450,
									"id": 2779,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_3230": {
									"entryPoint": 2232,
									"id": 3230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_3203": {
									"entryPoint": 2481,
									"id": 3203,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0c0d8dc2cc595a878b228cd7f620f947248bac0bb713fcd18b5d435f7b402e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ecb5ff9c37c5415ef4092716733c93f4c75ec083165e466c8cebaba6929837f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10157:14",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:14",
														"type": ""
													}
												],
												"src": "14:203:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "271:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "281:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "303:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "290:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "290:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "281:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "373:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "385:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "332:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "343:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "358:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "363:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "354:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "354:11:14"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "367:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "350:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "350:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "339:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "339:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "329:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "329:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "322:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "322:50:14"
															},
															"nodeType": "YulIf",
															"src": "319:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "250:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "261:5:14",
														"type": ""
													}
												],
												"src": "222:173:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "432:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "456:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "461:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "452:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "452:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "442:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "489:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "482:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "482:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "482:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "516:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "506:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "506:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "400:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "644:1077:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "690:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "699:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "702:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "692:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "692:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "665:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "674:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "657:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:32:14"
															},
															"nodeType": "YulIf",
															"src": "654:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "715:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "744:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "725:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "715:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "763:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "773:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "767:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "784:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "815:9:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "826:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "798:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "798:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "788:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "839:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "849:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "843:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "894:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "903:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "906:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "896:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "896:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "890:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "879:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "879:14:14"
															},
															"nodeType": "YulIf",
															"src": "876:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "919:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "933:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "944:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:22:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "923:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "999:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1008:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1011:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1001:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1001:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1001:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "978:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "982:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "974:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "974:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "970:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "970:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:35:14"
															},
															"nodeType": "YulIf",
															"src": "960:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1024:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1047:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1034:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:16:14"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1028:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1073:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1075:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1075:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1075:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1065:2:14"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1062:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:10:14"
															},
															"nodeType": "YulIf",
															"src": "1059:36:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1104:20:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1118:1:14",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1121:2:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1114:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1114:10:14"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "1108:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1133:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1147:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1147:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1137:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1165:56:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1187:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "1203:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1207:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1199:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1199:11:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1216:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1212:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1212:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1195:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:25:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1183:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:38:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1169:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1280:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1282:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1282:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1282:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1239:10:14"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1251:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1236:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1236:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1259:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1271:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1256:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1256:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1233:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1233:46:14"
															},
															"nodeType": "YulIf",
															"src": "1230:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1318:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1322:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1311:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1311:22:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1342:17:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1353:6:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1346:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1375:6:14"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1383:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1368:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1368:18:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1368:18:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1395:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1406:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1414:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1402:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:15:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1395:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1426:34:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1448:2:14"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "1452:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1444:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:11:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1457:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1440:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:20:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1430:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1492:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1501:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1504:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1494:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1494:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1494:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1483:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1472:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:19:14"
															},
															"nodeType": "YulIf",
															"src": "1469:39:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1517:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1532:2:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1536:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1528:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1528:11:14"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1521:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1604:86:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1625:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1643:3:14"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1630:12:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1630:17:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1618:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1618:30:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1618:30:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1661:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1672:3:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1677:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1668:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1668:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1661:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1559:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1564:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1556:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1556:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1572:23:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1574:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1585:3:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1590:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1581:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1574:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1552:3:14",
																"statements": []
															},
															"src": "1548:142:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1699:16:14",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1709:6:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "602:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "613:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "625:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "633:6:14",
														"type": ""
													}
												],
												"src": "532:1189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1877:481:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1887:12:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1897:2:14",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1891:2:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1908:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1926:9:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1937:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1922:18:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1912:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1956:9:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1967:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1949:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1949:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1949:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1979:17:14",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1990:6:14"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1983:3:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2005:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2025:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2019:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:13:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2009:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "2048:6:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2056:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2041:22:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2083:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2094:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2079:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:18:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2072:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2106:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2132:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2120:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:15:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2110:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2144:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2153:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2148:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2212:120:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2233:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2244:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2238:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2238:13:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:26:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:26:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2265:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2281:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2272:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2272:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2265:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2297:25:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2311:6:14"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2319:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2307:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2307:15:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2297:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2174:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2171:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2185:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2187:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2196:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2199:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2192:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2192:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2187:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2167:3:14",
																"statements": []
															},
															"src": "2163:169:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2341:11:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2349:3:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2341:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1846:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1857:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1868:4:14",
														"type": ""
													}
												],
												"src": "1726:632:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2503:668:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2550:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2559:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2562:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2552:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2552:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2552:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2524:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2533:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:33:14"
															},
															"nodeType": "YulIf",
															"src": "2513:53:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2575:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2604:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2585:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2585:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2623:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2656:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2667:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2652:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2652:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2633:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2633:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2680:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2707:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2718:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2703:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2703:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2690:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2690:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2731:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2762:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2773:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2745:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2745:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2735:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2786:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2796:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2790:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2841:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2853:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2843:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2837:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2826:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2826:14:14"
															},
															"nodeType": "YulIf",
															"src": "2823:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2866:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2880:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2891:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2870:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2946:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2958:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2948:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2948:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2948:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2925:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2929:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2921:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2921:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2936:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:35:14"
															},
															"nodeType": "YulIf",
															"src": "2907:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2971:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2985:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2985:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2975:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3028:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3037:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3040:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3030:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3030:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3030:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3016:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3024:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3013:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3013:14:14"
															},
															"nodeType": "YulIf",
															"src": "3010:34:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3094:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3106:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3096:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3096:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3096:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3067:2:14"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3071:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3063:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3063:15:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3080:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3085:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3056:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:37:14"
															},
															"nodeType": "YulIf",
															"src": "3053:57:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3119:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3133:2:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3137:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3129:11:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3119:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3149:16:14",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "3159:6:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2437:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2448:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2460:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2468:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2476:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2484:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2492:6:14",
														"type": ""
													}
												],
												"src": "2363:808:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:103:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3285:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3293:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3285:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3327:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3342:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3354:3:14",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3359:10:14",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3350:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3350:20:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3338:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3338:33:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:52:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:52:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3244:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3255:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3266:4:14",
														"type": ""
													}
												],
												"src": "3176:202:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3470:167:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3516:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3525:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3528:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3518:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3518:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3518:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3491:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3500:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:32:14"
															},
															"nodeType": "YulIf",
															"src": "3480:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3541:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3570:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3551:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3589:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3616:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3627:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3612:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3599:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3428:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3439:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3451:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3459:6:14",
														"type": ""
													}
												],
												"src": "3383:254:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3743:76:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3753:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3765:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3776:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3761:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3761:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3753:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3795:9:14"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:25:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3788:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3712:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3723:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3734:4:14",
														"type": ""
													}
												],
												"src": "3642:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3894:110:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3940:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3949:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3952:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3942:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3942:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3915:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3924:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3911:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3911:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3936:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3907:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3907:32:14"
															},
															"nodeType": "YulIf",
															"src": "3904:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3965:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3988:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3975:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3860:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3871:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3883:6:14",
														"type": ""
													}
												],
												"src": "3824:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4114:510:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4160:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4169:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4172:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4162:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4162:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4162:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4135:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4144:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4131:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4131:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4156:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4127:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:32:14"
															},
															"nodeType": "YulIf",
															"src": "4124:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4185:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4199:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4199:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4189:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4231:28:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4241:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4235:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4286:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4295:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4298:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4288:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4288:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4288:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4274:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4282:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4271:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:14:14"
															},
															"nodeType": "YulIf",
															"src": "4268:34:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4311:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4325:9:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4336:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4321:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4315:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4391:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4400:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4403:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4393:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4393:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4393:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4370:2:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4374:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4366:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4366:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4362:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4362:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4355:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4355:35:14"
															},
															"nodeType": "YulIf",
															"src": "4352:55:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4416:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4443:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4430:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4430:16:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4420:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4473:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4482:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4485:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4475:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4475:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4461:6:14"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4469:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4458:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:14:14"
															},
															"nodeType": "YulIf",
															"src": "4455:34:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4547:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4556:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4559:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4549:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4549:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4549:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4512:2:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4520:1:14",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4523:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4516:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4516:14:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4508:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4508:23:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4533:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4504:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4504:32:14"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4538:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4501:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4501:45:14"
															},
															"nodeType": "YulIf",
															"src": "4498:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:21:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4586:2:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4582:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4582:11:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4572:6:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4602:16:14",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "4612:6:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4072:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4083:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4095:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4103:6:14",
														"type": ""
													}
												],
												"src": "4009:615:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4724:92:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4734:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4776:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4801:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4794:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4794:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4787:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4787:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4769:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4769:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4693:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4704:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4715:4:14",
														"type": ""
													}
												],
												"src": "4629:187:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4891:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4937:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4946:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4949:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4939:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4939:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4939:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4912:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4921:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4908:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4933:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4904:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:32:14"
															},
															"nodeType": "YulIf",
															"src": "4901:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4962:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4991:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4972:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4972:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4962:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4857:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4868:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4880:6:14",
														"type": ""
													}
												],
												"src": "4821:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5044:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5068:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5073:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5064:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5064:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5054:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5054:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5101:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5104:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5094:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5094:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5094:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5125:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5128:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5118:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5118:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5012:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5176:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5193:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5200:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5205:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5196:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5196:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5186:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5186:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5233:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5236:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5226:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5226:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5226:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5257:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5260:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5250:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5250:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5144:127:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5325:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5347:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5349:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5349:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5349:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5341:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5344:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5338:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5338:8:14"
															},
															"nodeType": "YulIf",
															"src": "5335:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5378:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5390:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5393:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5386:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5386:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5378:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5307:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5310:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5316:4:14",
														"type": ""
													}
												],
												"src": "5276:125:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5458:116:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5517:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5519:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5519:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5519:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5489:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5482:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5482:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5497:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5508:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5504:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5504:6:14"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5512:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5500:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5500:14:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5494:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5494:21:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5471:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5471:45:14"
															},
															"nodeType": "YulIf",
															"src": "5468:71:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5548:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5563:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5566:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5559:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5559:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5548:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5437:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5440:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5446:7:14",
														"type": ""
													}
												],
												"src": "5406:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5626:88:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5657:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5659:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5659:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5642:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5653:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:6:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5639:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5639:17:14"
															},
															"nodeType": "YulIf",
															"src": "5636:43:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5688:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5699:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5608:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5618:3:14",
														"type": ""
													}
												],
												"src": "5579:135:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5893:164:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5910:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5921:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5944:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5955:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5940:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5940:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5960:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5933:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5933:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5933:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5983:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5994:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5979:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:18:14"
																	},
																	{
																		"hexValue": "496e76616c696420626c6f636b73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5999:16:14",
																		"type": "",
																		"value": "Invalid blocks"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5972:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5972:44:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5972:44:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6025:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ecb5ff9c37c5415ef4092716733c93f4c75ec083165e466c8cebaba6929837f3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5870:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5884:4:14",
														"type": ""
													}
												],
												"src": "5719:338:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6110:80:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6137:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6139:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6139:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6139:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6126:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6133:1:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6129:6:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:13:14"
															},
															"nodeType": "YulIf",
															"src": "6120:39:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6168:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6179:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6182:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6175:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6093:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6096:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6102:3:14",
														"type": ""
													}
												],
												"src": "6062:128:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6369:165:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6386:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6379:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6379:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6379:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6420:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6431:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6416:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6416:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6436:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6409:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6409:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6409:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6470:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6455:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6455:18:14"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6475:17:14",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6448:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:45:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6448:45:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6502:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6514:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6525:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6510:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6510:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6502:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6346:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6360:4:14",
														"type": ""
													}
												],
												"src": "6195:339:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6796:298:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6806:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6824:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6829:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6820:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:11:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6833:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6816:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6816:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6810:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6851:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6866:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6874:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6862:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6862:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6844:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6844:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6844:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6898:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6909:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6894:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6894:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6918:6:14"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6926:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6914:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6914:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6887:43:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6887:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6950:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6961:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6946:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6946:18:14"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6966:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6939:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6939:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6993:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7004:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6989:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6989:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7009:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6982:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6982:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6982:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7033:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7044:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7029:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7029:19:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7022:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7022:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7022:30:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7061:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7073:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7084:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7069:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7061:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6749:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6760:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6768:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6776:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6787:4:14",
														"type": ""
													}
												],
												"src": "6539:555:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7228:145:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7238:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7250:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7261:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7246:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7246:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7238:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7280:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7295:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7311:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7316:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7307:3:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7307:11:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7320:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7303:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7303:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7291:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7291:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7273:51:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7273:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7344:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7355:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7340:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7340:18:14"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7360:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7333:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7333:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7333:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7189:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7200:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7208:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7219:4:14",
														"type": ""
													}
												],
												"src": "7099:274:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7456:199:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7502:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7511:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7514:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7504:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7504:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7504:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7477:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7486:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7473:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7473:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7498:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7469:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:32:14"
															},
															"nodeType": "YulIf",
															"src": "7466:52:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7527:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7546:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7540:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7540:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7531:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7609:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7618:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7621:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7611:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7611:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7611:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7578:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7599:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7592:6:14"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7592:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7585:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7585:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7575:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7575:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7568:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7568:40:14"
															},
															"nodeType": "YulIf",
															"src": "7565:60:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7634:15:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7644:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7634:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7422:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7433:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7445:6:14",
														"type": ""
													}
												],
												"src": "7378:277:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7741:103:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7787:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7796:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7799:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7789:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7789:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7789:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7762:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7771:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7758:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7783:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7754:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7754:32:14"
															},
															"nodeType": "YulIf",
															"src": "7751:52:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7812:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7822:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7822:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7707:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7718:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7730:6:14",
														"type": ""
													}
												],
												"src": "7660:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8023:178:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8040:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8051:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8033:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8033:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8033:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8074:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8085:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8070:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8070:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8063:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8063:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8124:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:18:14"
																	},
																	{
																		"hexValue": "5374616b696e673a20746f6b656e206e6f74206465706f7369746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8129:30:14",
																		"type": "",
																		"value": "Staking: token not deposited"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8102:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8102:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8102:58:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8169:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8181:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8192:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8177:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8177:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8169:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0c0d8dc2cc595a878b228cd7f620f947248bac0bb713fcd18b5d435f7b402e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8000:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8014:4:14",
														"type": ""
													}
												],
												"src": "7849:352:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8380:228:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8397:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8408:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8390:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8390:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8390:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8431:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8442:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8427:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8447:2:14",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8420:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8420:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8470:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8481:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8466:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8466:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8486:34:14",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8459:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8459:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8459:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8541:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8552:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8537:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8537:18:14"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8557:8:14",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8530:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8530:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8530:36:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8575:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8587:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8598:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8583:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8583:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8575:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8357:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8371:4:14",
														"type": ""
													}
												],
												"src": "8206:402:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8787:182:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8804:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8815:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8797:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8797:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8797:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8838:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8849:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8834:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8834:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8854:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8827:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8827:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8827:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8877:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8888:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8873:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8873:18:14"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8893:34:14",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:62:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8866:62:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8937:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8949:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8960:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8945:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8945:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8937:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8764:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8778:4:14",
														"type": ""
													}
												],
												"src": "8613:356:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9148:166:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9165:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9176:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9158:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9158:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9158:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9199:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9210:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9195:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9195:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:2:14",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9188:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9188:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9238:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9249:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9234:18:14"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9254:18:14",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9227:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9227:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9227:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9282:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9294:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9305:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9290:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9282:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9125:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9139:4:14",
														"type": ""
													}
												],
												"src": "8974:340:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9493:181:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9510:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9521:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9503:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9503:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9544:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9555:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9540:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9540:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9560:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9533:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9533:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9583:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9594:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9579:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9579:18:14"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9599:33:14",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9572:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:61:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9572:61:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9642:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9654:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9665:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9650:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9650:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9642:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9470:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9484:4:14",
														"type": ""
													}
												],
												"src": "9319:355:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9853:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9870:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9881:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9863:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9863:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9863:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9904:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9915:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9900:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9900:18:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9920:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9893:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9893:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9893:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9943:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9954:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9939:18:14"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9959:22:14",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9932:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:50:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9932:50:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9991:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10003:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10014:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9999:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9999:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9991:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9830:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9844:4:14",
														"type": ""
													}
												],
												"src": "9679:344:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10077:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10084:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10089:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10080:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10080:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10070:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:31:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10070:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10117:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10120:4:14",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10110:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10110:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10110:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10141:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10144:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10134:15:14"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "10028:127:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ecb5ff9c37c5415ef4092716733c93f4c75ec083165e466c8cebaba6929837f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid blocks\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), 0)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b0c0d8dc2cc595a878b228cd7f620f947248bac0bb713fcd18b5d435f7b402e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Staking: token not deposited\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101585760003560e01c80635eac6239116100c3578063983d95ce1161007c578063983d95ce146102ce578063b343ae14146102e1578063ca1c20191461030c578063deec7eff14610314578063e3a9db1a14610334578063f2fde38b1461034757600080fd5b80635eac623914610285578063715018a61461029857806374478bb3146102a05780638456cb59146102ad5780638d8f2adb146102b55780638da5cb5b146102bd57600080fd5b806334fcf4371161011557806334fcf437146102225780633f4ba83a146102375780634665096d1461023f578063515a20ba14610248578063598b8e711461025b5780635c975abb1461026e57600080fd5b80630222a2c41461015d578063068c526f1461018d578063150b7a02146101ad5780631852e8d9146101e5578063276184ae146102065780632c4e722e14610219575b600080fd5b600354610170906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101a061019b3660046110e5565b61035a565b60405161018491906111b6565b6101cc6101bb3660046111fa565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610184565b6101f86101f3366004611295565b61049b565b604051908152602001610184565b600454610170906001600160a01b031681565b6101f860065481565b6102356102303660046112bf565b61059d565b005b6102356105aa565b6101f860055481565b6102356102563660046112bf565b6105bc565b6102356102693660046112d8565b6105d4565b60025460ff165b6040519015158152602001610184565b6102356102933660046112d8565b610766565b610235610896565b6007546102759060ff1681565b6102356108a8565b6102356108b8565b6000546001600160a01b0316610170565b6102356102dc3660046112d8565b6109b1565b6101f86102ef366004611295565b600960209081526000928352604080842090915290825290205481565b610235610b79565b6101f861032236600461134d565b600a6020526000908152604090205481565b6101a061034236600461134d565b610b95565b61023561035536600461134d565b610c51565b6060815167ffffffffffffffff811115610376576103766110cf565b60405190808252806020026020018201604052801561039f578160200160208202803683370190505b50905060005b82518110156104935760008382815181106103c2576103c2611368565b6020026020010151905060096000866001600160a01b03166001600160a01b0316815260200190815260200160002060008281526020019081526020016000205461040f43600554610cca565b6104199190611394565b6001600160a01b038616600090815260086020526040902061043b9083610ce0565b610446576000610449565b60015b60ff1660065461045991906113ab565b61046391906113ab565b83838151811061047557610475611368565b6020908102919091010152508061048b816113ca565b9150506103a5565b505b92915050565b6001600160a01b03821660009081526009602090815260408083208484529091528120546005546104cd904390610cca565b116105105760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420626c6f636b7360901b60448201526064015b60405180910390fd5b6001600160a01b0383166000908152600960209081526040808320858452909152902054600554610542904390610cca565b61054c9190611394565b6001600160a01b038416600090815260086020526040902061056e9084610ce0565b61057957600061057c565b60015b60ff1660065461058c91906113ab565b61059691906113ab565b9392505050565b6105a5610cf8565b600655565b6105b2610cf8565b6105ba610d52565b565b6105c4610cf8565b6105ce81436113e3565b60055550565b6105dc610da4565b6003546001600160a01b031633036106285760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610507565b60005b81811015610761576106553384848481811061064957610649611368565b9050602002013561049b565b336000908152600a6020526040812080549091906106749084906113e3565b90915550506003546001600160a01b031663b88d4fde333086868681811061069e5761069e611368565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152608060648201526000608482015260a401600060405180830381600087803b15801561070357600080fd5b505af1158015610717573d6000803e3d6000fd5b5050505061074e83838381811061073057610730611368565b33600090815260086020908152604090912093910201359050610dea565b5080610759816113ca565b91505061062b565b505050565b61076e610da4565b60075460ff16151560011461078257600080fd5b60008061079143600554610cca565b905060005b83811015610811576107b43386868481811061064957610649611368565b6107be90846113e3565b3360009081526009602052604081209194508391908787858181106107e5576107e5611368565b905060200201358152602001908152602001600020819055508080610809906113ca565b915050610796565b508115610890576004805460405163a9059cbb60e01b81523392810192909252602482018490526001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561086a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088e91906113fb565b505b50505050565b61089e610cf8565b6105ba6000610df6565b6108b0610cf8565b6105ba610e46565b6108c0610cf8565b600480546040516370a0823160e01b815230928101929092526000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610932919061141d565b6004805460405163a9059cbb60e01b81523392810192909252602482018390529192506001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ad91906113fb565b5050565b6109b9610da4565b6109c1610e83565b60005b81811015610b6f576109ff8383838181106109e1576109e1611368565b33600090815260086020908152604090912093910201359050610ce0565b610a4b5760405162461bcd60e51b815260206004820152601c60248201527f5374616b696e673a20746f6b656e206e6f74206465706f7369746564000000006044820152606401610507565b610a613384848481811061064957610649611368565b336000908152600a602052604081208054909190610a809084906113e3565b90915550610ab99050838383818110610a9b57610a9b611368565b33600090815260086020908152604090912093910201359050610edc565b506003546001600160a01b031663b88d4fde3033868686818110610adf57610adf611368565b6040516001600160e01b031960e088901b1681526001600160a01b03958616600482015294909316602485015250602090910201356044820152608060648201526000608482015260a401600060405180830381600087803b158015610b4457600080fd5b505af1158015610b58573d6000803e3d6000fd5b505050508080610b67906113ca565b9150506109c4565b506109ad60018055565b610b81610cf8565b6007805460ff19811660ff90911615179055565b6001600160a01b0381166000908152600860205260408120606091610bb982610ee8565b67ffffffffffffffff811115610bd157610bd16110cf565b604051908082528060200260200182016040528015610bfa578160200160208202803683370190505b50905060005b610c0983610ee8565b811015610c4957610c1a8382610ef2565b828281518110610c2c57610c2c611368565b602090810291909101015280610c41816113ca565b915050610c00565b509392505050565b610c59610cf8565b6001600160a01b038116610cbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610507565b610cc781610df6565b50565b6000818310610cd95781610596565b5090919050565b60008181526001830160205260408120541515610596565b6000546001600160a01b031633146105ba5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610507565b610d5a610efe565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60025460ff16156105ba5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610507565b60006105968383610f47565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e4e610da4565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d873390565b600260015403610ed55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610507565b6002600155565b60006105968383610f96565b6000610495825490565b60006105968383611089565b60025460ff166105ba5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610507565b6000818152600183016020526040812054610f8e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610495565b506000610495565b6000818152600183016020526040812054801561107f576000610fba600183611394565b8554909150600090610fce90600190611394565b9050818114611033576000866000018281548110610fee57610fee611368565b906000526020600020015490508087600001848154811061101157611011611368565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061104457611044611436565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610495565b6000915050610495565b60008260000182815481106110a0576110a0611368565b9060005260206000200154905092915050565b80356001600160a01b03811681146110ca57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156110f857600080fd5b611101836110b3565b915060208084013567ffffffffffffffff8082111561111f57600080fd5b818601915086601f83011261113357600080fd5b813581811115611145576111456110cf565b8060051b604051601f19603f8301168101818110858211171561116a5761116a6110cf565b60405291825284820192508381018501918983111561118857600080fd5b938501935b828510156111a65784358452938501939285019261118d565b8096505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b818110156111ee578351835292840192918401916001016111d2565b50909695505050505050565b60008060008060006080868803121561121257600080fd5b61121b866110b3565b9450611229602087016110b3565b935060408601359250606086013567ffffffffffffffff8082111561124d57600080fd5b818801915088601f83011261126157600080fd5b81358181111561127057600080fd5b89602082850101111561128257600080fd5b9699959850939650602001949392505050565b600080604083850312156112a857600080fd5b6112b1836110b3565b946020939093013593505050565b6000602082840312156112d157600080fd5b5035919050565b600080602083850312156112eb57600080fd5b823567ffffffffffffffff8082111561130357600080fd5b818501915085601f83011261131757600080fd5b81358181111561132657600080fd5b8660208260051b850101111561133b57600080fd5b60209290920196919550909350505050565b60006020828403121561135f57600080fd5b610596826110b3565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156113a6576113a661137e565b500390565b60008160001904831182151516156113c5576113c561137e565b500290565b6000600182016113dc576113dc61137e565b5060010190565b600082198211156113f6576113f661137e565b500190565b60006020828403121561140d57600080fd5b8151801515811461059657600080fd5b60006020828403121561142f57600080fd5b5051919050565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b8e4ab78c31c0e2aef7d2a8fb4a0fec9212d1acbc21c9474ca2942bdb96c70e064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x158 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EAC6239 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x983D95CE GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x983D95CE EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xB343AE14 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCA1C2019 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0xDEEC7EFF EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xE3A9DB1A EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EAC6239 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x74478BB3 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34FCF437 GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x4665096D EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x515A20BA EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x598B8E71 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x222A2C4 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x68C526F EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x276184AE EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x219 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x1CC PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x170 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x235 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x766 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x275 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x8B8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x170 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x2DC CALLDATASIZE PUSH1 0x4 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x235 PUSH2 0xB79 JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x322 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x235 PUSH2 0x355 CALLDATASIZE PUSH1 0x4 PUSH2 0x134D JUMP JUMPDEST PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x376 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x39F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x493 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3C2 JUMPI PUSH2 0x3C2 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x40F NUMBER PUSH1 0x5 SLOAD PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x43B SWAP1 DUP4 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x446 JUMPI PUSH1 0x0 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x6 SLOAD PUSH2 0x459 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x475 JUMPI PUSH2 0x475 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP DUP1 PUSH2 0x48B DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3A5 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x4CD SWAP1 NUMBER SWAP1 PUSH2 0xCCA JUMP JUMPDEST GT PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420626C6F636B73 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x5 SLOAD PUSH2 0x542 SWAP1 NUMBER SWAP1 PUSH2 0xCCA JUMP JUMPDEST PUSH2 0x54C SWAP2 SWAP1 PUSH2 0x1394 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x56E SWAP1 DUP5 PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0x579 JUMPI PUSH1 0x0 PUSH2 0x57C JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND PUSH1 0x6 SLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH2 0x596 SWAP2 SWAP1 PUSH2 0x13AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5A5 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0x5B2 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xD52 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5CE DUP2 NUMBER PUSH2 0x13E3 JUMP JUMPDEST PUSH1 0x5 SSTORE POP JUMP JUMPDEST PUSH2 0x5DC PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x761 JUMPI PUSH2 0x655 CALLER DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x49B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x674 SWAP1 DUP5 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0x69E JUMPI PUSH2 0x69E PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x717 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x74E DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x730 JUMPI PUSH2 0x730 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xDEA JUMP JUMPDEST POP DUP1 PUSH2 0x759 DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x62B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x76E PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x791 NUMBER PUSH1 0x5 SLOAD PUSH2 0xCCA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x811 JUMPI PUSH2 0x7B4 CALLER DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST PUSH2 0x7BE SWAP1 DUP5 PUSH2 0x13E3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP5 POP DUP4 SWAP2 SWAP1 DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0x7E5 JUMPI PUSH2 0x7E5 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x809 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x796 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x890 JUMPI PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88E SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x89E PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH1 0x0 PUSH2 0xDF6 JUMP JUMPDEST PUSH2 0x8B0 PUSH2 0xCF8 JUMP JUMPDEST PUSH2 0x5BA PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x8C0 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x932 SWAP2 SWAP1 PUSH2 0x141D JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x989 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9AD SWAP2 SWAP1 PUSH2 0x13FB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x9C1 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB6F JUMPI PUSH2 0x9FF DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xCE0 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E673A20746F6B656E206E6F74206465706F736974656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xA61 CALLER DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x649 JUMPI PUSH2 0x649 PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xA80 SWAP1 DUP5 SWAP1 PUSH2 0x13E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xAB9 SWAP1 POP DUP4 DUP4 DUP4 DUP2 DUP2 LT PUSH2 0xA9B JUMPI PUSH2 0xA9B PUSH2 0x1368 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP4 SWAP2 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0xEDC JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB88D4FDE ADDRESS CALLER DUP7 DUP7 DUP7 DUP2 DUP2 LT PUSH2 0xADF JUMPI PUSH2 0xADF PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP9 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x24 DUP6 ADD MSTORE POP PUSH1 0x20 SWAP1 SWAP2 MUL ADD CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xB67 SWAP1 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C4 JUMP JUMPDEST POP PUSH2 0x9AD PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0xB81 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP1 SWAP2 AND ISZERO OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x60 SWAP2 PUSH2 0xBB9 DUP3 PUSH2 0xEE8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD1 JUMPI PUSH2 0xBD1 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBFA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0xC09 DUP4 PUSH2 0xEE8 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC1A DUP4 DUP3 PUSH2 0xEF2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC2C JUMPI PUSH2 0xC2C PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xC41 DUP2 PUSH2 0x13CA JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC00 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xC59 PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xCC7 DUP2 PUSH2 0xDF6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xCD9 JUMPI DUP2 PUSH2 0x596 JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x596 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH2 0xD5A PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xE4E PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD87 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xED5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x495 DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x596 DUP4 DUP4 PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF AND PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xF8E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x495 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 PUSH2 0xFBA PUSH1 0x1 DUP4 PUSH2 0x1394 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xFCE SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1394 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1033 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFEE JUMPI PUSH2 0xFEE PUSH2 0x1368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1011 JUMPI PUSH2 0x1011 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1044 JUMPI PUSH2 0x1044 PUSH2 0x1436 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x495 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A0 JUMPI PUSH2 0x10A0 PUSH2 0x1368 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1101 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1145 JUMPI PUSH2 0x1145 PUSH2 0x10CF JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x1188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x11A6 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x118D JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11EE JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11D2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x121B DUP7 PUSH2 0x10B3 JUMP JUMPDEST SWAP5 POP PUSH2 0x1229 PUSH1 0x20 DUP8 ADD PUSH2 0x10B3 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x124D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B1 DUP4 PUSH2 0x10B3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x133B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x596 DUP3 PUSH2 0x10B3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A6 PUSH2 0x137E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x137E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13DC JUMPI PUSH2 0x13DC PUSH2 0x137E JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13F6 JUMPI PUSH2 0x13F6 PUSH2 0x137E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xE4 0xAB PUSH25 0xC31C0E2AEF7D2A8FB4A0FEC9212D1ACBC21C9474CA2942BDB9 PUSH13 0x70E064736F6C634300080D0033 ",
							"sourceMap": "665:4787:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:40;;;;;-1:-1:-1;;;;;891:40:13;;;;;;-1:-1:-1;;;;;178:32:14;;;160:51;;148:2;133:18;891:40:13;;;;;;;;2687:459;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5274:171::-;;;;;;:::i;:::-;-1:-1:-1;;;5274:171:13;;;;;;;;;;;-1:-1:-1;;;;;;3338:33:14;;;3320:52;;3308:2;3293:18;5274:171:13;3176:202:14;3152:346:13;;;;;;:::i;:::-;;:::i;:::-;;;3788:25:14;;;3776:2;3761:18;3152:346:13;3642:177:14;937:27:13;;;;;-1:-1:-1;;;;;937:27:13;;;1055:19;;;;;;1993:78;;;;;;:::i;:::-;;:::i;:::-;;1735:63;;;:::i;971:25::-;;;;;;2179:117;;;;;;:::i;:::-;;:::i;4007:460::-;;;;;;:::i;:::-;;:::i;1615:84:1:-;1685:7;;;;1615:84;;;4794:14:14;;4787:22;4769:41;;4757:2;4742:18;1615:84:1;4629:187:14;3504:497:13;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1082:23:13:-;;;;;;;;;1670:59;;;:::i;4980:193::-;;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;4473:501:13;;;;;;:::i;:::-;;:::i;1196:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5179:89;;;:::i;1271:52::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2329:352;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;2687:459:13:-;2778:24;2838:8;:15;2824:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2824:30:13;;2814:40;;2870:9;2865:250;2885:8;:15;2881:1;:19;2865:250;;;2921:15;2939:8;2948:1;2939:11;;;;;;;;:::i;:::-;;;;;;;2921:29;;3071:14;:23;3086:7;-1:-1:-1;;;;;3071:23:13;-1:-1:-1;;;;;3071:23:13;;;;;;;;;;;;:32;3095:7;3071:32;;;;;;;;;;;;3034:34;3043:12;3057:10;;3034:8;:34::i;:::-;:69;;;;:::i;:::-;-1:-1:-1;;;;;2985:18:13;;;;;;:9;:18;;;;;:36;;3013:7;2985:27;:36::i;:::-;:44;;3028:1;2985:44;;;3024:1;2985:44;2977:53;;:4;;:53;;;;:::i;:::-;:127;;;;:::i;:::-;2964:7;2972:1;2964:10;;;;;;;;:::i;:::-;;;;;;;;;;:140;-1:-1:-1;2902:3:13;;;;:::i;:::-;;;;2865:250;;;;2687:459;;;;;:::o;3152:346::-;-1:-1:-1;;;;;3296:23:13;;3232:7;3296:23;;;:14;:23;;;;;;;;:32;;;;;;;;;3282:10;;3259:34;;3268:12;;3259:8;:34::i;:::-;:69;3251:96;;;;-1:-1:-1;;;3251:96:13;;5921:2:14;3251:96:13;;;5903:21:14;5960:2;5940:18;;;5933:30;-1:-1:-1;;;5979:18:14;;;5972:44;6033:18;;3251:96:13;;;;;;;;;-1:-1:-1;;;;;3458:23:13;;;;;;:14;:23;;;;;;;;:32;;;;;;;;;3444:10;;3421:34;;3430:12;;3421:8;:34::i;:::-;:69;;;;:::i;:::-;-1:-1:-1;;;;;3372:18:13;;;;;;:9;:18;;;;;:36;;3400:7;3372:27;:36::i;:::-;:44;;3415:1;3372:44;;;3411:1;3372:44;3364:53;;:4;;:53;;;;:::i;:::-;:127;;;;:::i;:::-;3357:134;3152:346;-1:-1:-1;;;3152:346:13:o;1993:78::-;1094:13:0;:11;:13::i;:::-;2052:4:13::1;:12:::0;1993:78::o;1735:63::-;1094:13:0;:11;:13::i;:::-;1781:10:13::1;:8;:10::i;:::-;1735:63::o:0;2179:117::-;1094:13:0;:11;:13::i;:::-;2263:26:13::1;2278:11:::0;2263:12:::1;:26;:::i;:::-;2250:10;:39:::0;-1:-1:-1;2179:117:13:o;4007:460::-;1239:19:1;:17;:19::i;:::-;4108:25:13::1;::::0;-1:-1:-1;;;;;4108:25:13::1;4094:10;:39:::0;4086:67:::1;;;::::0;-1:-1:-1;;;4086:67:13;;6397:2:14;4086:67:13::1;::::0;::::1;6379:21:14::0;6436:2;6416:18;;;6409:30;-1:-1:-1;;;6455:18:14;;;6448:45;6510:18;;4086:67:13::1;6195:339:14::0;4086:67:13::1;4168:9;4163:298;4179:19:::0;;::::1;4163:298;;;4252:40;4268:10;4280:8;;4289:1;4280:11;;;;;;;:::i;:::-;;;;;;;4252:15;:40::i;:::-;4237:10;4219:29;::::0;;;:17:::1;:29;::::0;;;;:73;;:29;;;:73:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4314:25:13::1;::::0;-1:-1:-1;;;;;4314:25:13::1;4306:51;4358:10;4377:4;4383:8:::0;;4392:1;4383:11;;::::1;;;;;:::i;:::-;4306:92;::::0;-1:-1:-1;;;;;;4306:92:13::1;::::0;;;;;;-1:-1:-1;;;;;6862:15:14;;;4306:92:13::1;::::0;::::1;6844:34:14::0;6914:15;;;;6894:18;;;6887:43;-1:-1:-1;4383:11:13::1;::::0;;::::1;;;6946:18:14::0;;;6939:34;7009:3;6989:18;;;6982:31;-1:-1:-1;7029:19:14;;;7022:30;7069:19;;4306:92:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4412:38;4438:8;;4447:1;4438:11;;;;;;;:::i;:::-;4422:10;4412:21;::::0;;;:9:::1;4438:11;4412:21:::0;;;;;;;;4438:11;::::1;;;::::0;-1:-1:-1;4412:25:13::1;:38::i;:::-;-1:-1:-1::0;4200:3:13;::::1;::::0;::::1;:::i;:::-;;;;4163:298;;;;4007:460:::0;;:::o;3504:497::-;1239:19:1;:17;:19::i;:::-;3594:11:13::1;::::0;::::1;;:19;;:11:::0;:19:::1;3586:28;;;::::0;::::1;;3624:14;3649:16:::0;3668:34:::1;3677:12;3691:10;;3668:8;:34::i;:::-;3649:53;;3718:9;3713:181;3729:19:::0;;::::1;3713:181;;;3779:40;3795:10;3807:8;;3816:1;3807:11;;;;;;;:::i;3779:40::-;3769:50;::::0;;::::1;:::i;:::-;3848:10;3833:26;::::0;;;:14:::1;:26;::::0;;;;3769:50;;-1:-1:-1;3875:8:13;;3833:26;3860:8;;3869:1;3860:11;;::::1;;;;;:::i;:::-;;;;;;;3833:39;;;;;;;;;;;:50;;;;3750:3;;;;;:::i;:::-;;;;3713:181;;;-1:-1:-1::0;3908:10:13;;3904:90:::1;;3941:12;::::0;;3934:49:::1;::::0;-1:-1:-1;;;3934:49:13;;3964:10:::1;3934:49:::0;;::::1;7273:51:14::0;;;;7340:18;;;7333:34;;;-1:-1:-1;;;;;3941:12:13::1;::::0;3934:29:::1;::::0;7246:18:14;;3934:49:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3904:90;3576:425;;3504:497:::0;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1670:59:13:-:0;1094:13:0;:11;:13::i;:::-;1714:8:13::1;:6;:8::i;4980:193::-:0;1094:13:0;:11;:13::i;:::-;5064:12:13::1;::::0;;5057:45:::1;::::0;-1:-1:-1;;;5057:45:13;;5096:4:::1;5057:45:::0;;::::1;160:51:14::0;;;;5035:19:13::1;::::0;-1:-1:-1;;;;;5064:12:13;;::::1;::::0;5057:30:::1;::::0;133:18:14;;5057:45:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5119:12;::::0;;5112:54:::1;::::0;-1:-1:-1;;;5112:54:13;;5142:10:::1;5112:54:::0;;::::1;7273:51:14::0;;;;7340:18;;;7333:34;;;5035:67:13;;-1:-1:-1;;;;;;5119:12:13;;::::1;::::0;5112:29:::1;::::0;7246:18:14;;5112:54:13::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5025:148;4980:193::o:0;4473:501::-;1239:19:1;:17;:19::i;:::-;2261:21:2::1;:19;:21::i;:::-;4573:9:13::2;4568:400;4584:19:::0;;::::2;4568:400;;;4633:43;4664:8;;4673:1;4664:11;;;;;;;:::i;:::-;4643:10;4633:21;::::0;;;:9:::2;4664:11;4633:21:::0;;;;;;;;4664:11;::::2;;;::::0;-1:-1:-1;4633:30:13::2;:43::i;:::-;4624:84;;;::::0;-1:-1:-1;;;4624:84:13;;8051:2:14;4624:84:13::2;::::0;::::2;8033:21:14::0;8090:2;8070:18;;;8063:30;8129;8109:18;;;8102:58;8177:18;;4624:84:13::2;7849:352:14::0;4624:84:13::2;4755:40;4771:10;4783:8;;4792:1;4783:11;;;;;;;:::i;4755:40::-;4740:10;4722:29;::::0;;;:17:::2;:29;::::0;;;;:73;;:29;;;:73:::2;::::0;;;::::2;:::i;:::-;::::0;;;-1:-1:-1;4809:41:13::2;::::0;-1:-1:-1;4838:8:13;;4847:1;4838:11;;::::2;;;;;:::i;:::-;4819:10;4809:21;::::0;;;:9:::2;4838:11;4809:21:::0;;;;;;;;4838:11;::::2;;;::::0;-1:-1:-1;4809:28:13::2;:41::i;:::-;-1:-1:-1::0;4872:25:13::2;::::0;-1:-1:-1;;;;;4872:25:13::2;4864:51;4924:4;4931:10;4942:8:::0;;4951:1;4942:11;;::::2;;;;;:::i;:::-;4864:93;::::0;-1:-1:-1;;;;;;4864:93:13::2;::::0;;;;;;-1:-1:-1;;;;;6862:15:14;;;4864:93:13::2;::::0;::::2;6844:34:14::0;6914:15;;;;6894:18;;;6887:43;-1:-1:-1;4942:11:13::2;::::0;;::::2;;;6946:18:14::0;;;6939:34;7009:3;6989:18;;;6982:31;-1:-1:-1;7029:19:14;;;7022:30;7069:19;;4864:93:13::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4605:3;;;;;:::i;:::-;;;;4568:400;;;;2303:20:2::1;1716:1:::0;2809:22;;2629:209;5179:89:13;1094:13:0;:11;:13::i;:::-;5250:11:13::1;::::0;;-1:-1:-1;;5235:26:13;::::1;5250:11;::::0;;::::1;5249:12;5235:26;::::0;;5179:89::o;2329:352::-;-1:-1:-1;;;;;2458:18:13;;2415:40;2458:18;;;:9;:18;;;;;2389:16;;2527:19;2458:18;2527:17;:19::i;:::-;2512:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2512:35:13;;2484:63;;2561:9;2556:95;2576:19;:10;:17;:19::i;:::-;2572:1;:23;2556:95;;;2626:16;:10;2640:1;2626:13;:16::i;:::-;2612:8;2621:1;2612:11;;;;;;;;:::i;:::-;;;;;;;;;;:30;2597:3;;;;:::i;:::-;;;;2556:95;;;-1:-1:-1;2666:8:13;2329:352;-1:-1:-1;;;2329:352:13:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8408:2:14;2161:73:0::1;::::0;::::1;8390:21:14::0;8447:2;8427:18;;;8420:30;8486:34;8466:18;;;8459:62;-1:-1:-1;;;8537:18:14;;;8530:36;8583:19;;2161:73:0::1;8206:402:14::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;588:104:10:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:10;;588:104;-1:-1:-1;588:104:10:o;11298:144:12:-;11375:4;4343:19;;;:12;;;:19;;;;;;:24;;11398:37;4247:127;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;8815:2:14;1414:68:0;;;8797:21:14;;;8834:18;;;8827:30;8893:34;8873:18;;;8866:62;8945:18;;1414:68:0;8613:356:14;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:8::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;178:32:14;;;160:51;;148:2;133:18;2521:22:1::1;;;;;;;2433:117::o:0;1767:106::-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;9176:2:14;1828:38:1;;;9158:21:14;9215:2;9195:18;;;9188:30;-1:-1:-1;;;9234:18:14;;;9227:46;9290:18;;1828:38:1;8974:340:14;10785:129:12;10852:4;10875:32;10880:3;10900:5;10875:4;:32::i;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:8::0;;640:96;2336:287:2;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;9521:2:14;2460:63:2;;;9503:21:14;9560:2;9540:18;;;9533:30;9599:33;9579:18;;;9572:61;9650:18;;2460:63:2;9319:355:14;2460:63:2;1759:1;2598:7;:18;2336:287::o;11082:135:12:-;11152:4;11175:35;11183:3;11203:5;11175:7;:35::i;11523:112::-;11583:7;11609:19;11617:3;4537:18;;4455:107;11977:135;12048:7;12082:22;12086:3;12098:5;12082:3;:22::i;1945:106:1:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;9881:2:14;2003:41:1;;;9863:21:14;9920:2;9900:18;;;9893:30;-1:-1:-1;;;9939:18:14;;;9932:50;9999:18;;2003:41:1;9679:344:14;2206:404:12;2269:4;4343:19;;;:12;;;:19;;;;;;2285:319;;-1:-1:-1;2327:23:12;;;;;;;;:11;:23;;;;;;;;;;;;;2507:18;;2485:19;;;:12;;;:19;;;;;;:40;;;;2539:11;;2285:319;-1:-1:-1;2588:5:12;2581:12;;2778:1388;2844:4;2981:19;;;:12;;;:19;;;;;;3015:15;;3011:1149;;3384:21;3408:14;3421:1;3408:10;:14;:::i;:::-;3456:18;;3384:38;;-1:-1:-1;3436:17:12;;3456:22;;3477:1;;3456:22;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3797:23;;;:12;;;:23;;;;;:36;;;3493:398;3969:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;;;4904:118;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;4990:25;;4904:118;;;;:::o;222:173:14:-;290:20;;-1:-1:-1;;;;;339:31:14;;329:42;;319:70;;385:1;382;375:12;319:70;222:173;;;:::o;400:127::-;461:10;456:3;452:20;449:1;442:31;492:4;489:1;482:15;516:4;513:1;506:15;532:1189;625:6;633;686:2;674:9;665:7;661:23;657:32;654:52;;;702:1;699;692:12;654:52;725:29;744:9;725:29;:::i;:::-;715:39;;773:2;826;815:9;811:18;798:32;849:18;890:2;882:6;879:14;876:34;;;906:1;903;896:12;876:34;944:6;933:9;929:22;919:32;;989:7;982:4;978:2;974:13;970:27;960:55;;1011:1;1008;1001:12;960:55;1047:2;1034:16;1069:2;1065;1062:10;1059:36;;;1075:18;;:::i;:::-;1121:2;1118:1;1114:10;1153:2;1147:9;1216:2;1212:7;1207:2;1203;1199:11;1195:25;1187:6;1183:38;1271:6;1259:10;1256:22;1251:2;1239:10;1236:18;1233:46;1230:72;;;1282:18;;:::i;:::-;1318:2;1311:22;1368:18;;;1402:15;;;;-1:-1:-1;1444:11:14;;;1440:20;;;1472:19;;;1469:39;;;1504:1;1501;1494:12;1469:39;1528:11;;;;1548:142;1564:6;1559:3;1556:15;1548:142;;;1630:17;;1618:30;;1581:12;;;;1668;;;;1548:142;;;1709:6;1699:16;;;;;;;;532:1189;;;;;:::o;1726:632::-;1897:2;1949:21;;;2019:13;;1922:18;;;2041:22;;;1868:4;;1897:2;2120:15;;;;2094:2;2079:18;;;1868:4;2163:169;2177:6;2174:1;2171:13;2163:169;;;2238:13;;2226:26;;2307:15;;;;2272:12;;;;2199:1;2192:9;2163:169;;;-1:-1:-1;2349:3:14;;1726:632;-1:-1:-1;;;;;;1726:632:14:o;2363:808::-;2460:6;2468;2476;2484;2492;2545:3;2533:9;2524:7;2520:23;2516:33;2513:53;;;2562:1;2559;2552:12;2513:53;2585:29;2604:9;2585:29;:::i;:::-;2575:39;;2633:38;2667:2;2656:9;2652:18;2633:38;:::i;:::-;2623:48;;2718:2;2707:9;2703:18;2690:32;2680:42;;2773:2;2762:9;2758:18;2745:32;2796:18;2837:2;2829:6;2826:14;2823:34;;;2853:1;2850;2843:12;2823:34;2891:6;2880:9;2876:22;2866:32;;2936:7;2929:4;2925:2;2921:13;2917:27;2907:55;;2958:1;2955;2948:12;2907:55;2998:2;2985:16;3024:2;3016:6;3013:14;3010:34;;;3040:1;3037;3030:12;3010:34;3085:7;3080:2;3071:6;3067:2;3063:15;3059:24;3056:37;3053:57;;;3106:1;3103;3096:12;3053:57;2363:808;;;;-1:-1:-1;2363:808:14;;-1:-1:-1;3137:2:14;3129:11;;3159:6;2363:808;-1:-1:-1;;;2363:808:14:o;3383:254::-;3451:6;3459;3512:2;3500:9;3491:7;3487:23;3483:32;3480:52;;;3528:1;3525;3518:12;3480:52;3551:29;3570:9;3551:29;:::i;:::-;3541:39;3627:2;3612:18;;;;3599:32;;-1:-1:-1;;;3383:254:14:o;3824:180::-;3883:6;3936:2;3924:9;3915:7;3911:23;3907:32;3904:52;;;3952:1;3949;3942:12;3904:52;-1:-1:-1;3975:23:14;;3824:180;-1:-1:-1;3824:180:14:o;4009:615::-;4095:6;4103;4156:2;4144:9;4135:7;4131:23;4127:32;4124:52;;;4172:1;4169;4162:12;4124:52;4212:9;4199:23;4241:18;4282:2;4274:6;4271:14;4268:34;;;4298:1;4295;4288:12;4268:34;4336:6;4325:9;4321:22;4311:32;;4381:7;4374:4;4370:2;4366:13;4362:27;4352:55;;4403:1;4400;4393:12;4352:55;4443:2;4430:16;4469:2;4461:6;4458:14;4455:34;;;4485:1;4482;4475:12;4455:34;4538:7;4533:2;4523:6;4520:1;4516:14;4512:2;4508:23;4504:32;4501:45;4498:65;;;4559:1;4556;4549:12;4498:65;4590:2;4582:11;;;;;4612:6;;-1:-1:-1;4009:615:14;;-1:-1:-1;;;;4009:615:14:o;4821:186::-;4880:6;4933:2;4921:9;4912:7;4908:23;4904:32;4901:52;;;4949:1;4946;4939:12;4901:52;4972:29;4991:9;4972:29;:::i;5012:127::-;5073:10;5068:3;5064:20;5061:1;5054:31;5104:4;5101:1;5094:15;5128:4;5125:1;5118:15;5144:127;5205:10;5200:3;5196:20;5193:1;5186:31;5236:4;5233:1;5226:15;5260:4;5257:1;5250:15;5276:125;5316:4;5344:1;5341;5338:8;5335:34;;;5349:18;;:::i;:::-;-1:-1:-1;5386:9:14;;5276:125::o;5406:168::-;5446:7;5512:1;5508;5504:6;5500:14;5497:1;5494:21;5489:1;5482:9;5475:17;5471:45;5468:71;;;5519:18;;:::i;:::-;-1:-1:-1;5559:9:14;;5406:168::o;5579:135::-;5618:3;5639:17;;;5636:43;;5659:18;;:::i;:::-;-1:-1:-1;5706:1:14;5695:13;;5579:135::o;6062:128::-;6102:3;6133:1;6129:6;6126:1;6123:13;6120:39;;;6139:18;;:::i;:::-;-1:-1:-1;6175:9:14;;6062:128::o;7378:277::-;7445:6;7498:2;7486:9;7477:7;7473:23;7469:32;7466:52;;;7514:1;7511;7504:12;7466:52;7546:9;7540:16;7599:5;7592:13;7585:21;7578:5;7575:32;7565:60;;7621:1;7618;7611:12;7660:184;7730:6;7783:2;7771:9;7762:7;7758:23;7754:32;7751:52;;;7799:1;7796;7789:12;7751:52;-1:-1:-1;7822:16:14;;7660:184;-1:-1:-1;7660:184:14:o;10028:127::-;10089:10;10084:3;10080:20;10077:1;10070:31;10120:4;10117:1;10110:15;10144:4;10141:1;10134:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1050000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_depositBlocks(address,uint256)": "2656",
								"accumulatedTokens(address)": "2607",
								"calculateReward(address,uint256)": "infinite",
								"calculateRewards(address,uint256[])": "infinite",
								"claimRewards(uint256[])": "infinite",
								"deposit(uint256[])": "infinite",
								"depositsOf(address)": "infinite",
								"erc20Address()": "2438",
								"expiration()": "2362",
								"flipIsClaimable()": "26613",
								"isClaimable()": "2377",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2453",
								"pause()": "infinite",
								"paused()": "2426",
								"rate()": "2429",
								"renounceOwnership()": "infinite",
								"setExpiration(uint256)": "24648",
								"setRate(uint256)": "24511",
								"stakingDestinationAddress()": "2350",
								"transferOwnership(address)": "28465",
								"unpause()": "infinite",
								"withdraw(uint256[])": "infinite",
								"withdrawTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 821,
									"end": 885,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 821,
									"end": 885,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 821,
									"end": 885,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 821,
									"end": 885,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 821,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 821,
									"end": 885,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 1330,
									"end": 1664,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1472,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1447,
									"end": 1501,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1561,
									"end": 1572,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "NUMBER",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 1546,
									"end": 1572,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1546,
									"end": 1572,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 1546,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1543,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 1533,
									"end": 1572,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1594,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1610,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1620,
									"end": 1628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1620,
									"end": 1626,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1620,
									"end": 1628,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 1620,
									"end": 1628,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1620,
									"end": 1628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1638,
									"end": 1649,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 1638,
									"end": 1657,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1657,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1638,
									"end": 1657,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1657,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1638,
									"end": 1657,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2252,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2255,
									"end": 2259,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "PUSH",
									"source": 1,
									"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 719,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2281,
									"end": 2293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1011,
									"end": 1043,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1043,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1043,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 993,
									"end": 1044,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 993,
									"end": 1044,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 966,
									"end": 984,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1257,
									"end": 1259,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1260,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1298,
									"name": "PUSH",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1294,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1269,
									"end": 1299,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1308,
									"end": 1354,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "PUSH",
									"source": 14,
									"value": "64"
								},
								{
									"begin": 1371,
									"end": 1389,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 14,
									"value": "43"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 490,
									"end": 492,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 475,
									"end": 493,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 469,
									"end": 494,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 459,
									"end": 494,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 459,
									"end": 494,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 534,
									"end": 536,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 523,
									"end": 532,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 519,
									"end": 537,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 513,
									"end": 538,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 503,
									"end": 538,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 503,
									"end": 538,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 557,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 602,
									"end": 604,
									"name": "PUSH",
									"source": 14,
									"value": "60"
								},
								{
									"begin": 591,
									"end": 600,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 587,
									"end": 605,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 557,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 557,
									"end": 606,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 557,
									"end": 606,
									"name": "tag",
									"source": 14,
									"value": "44"
								},
								{
									"begin": 557,
									"end": 606,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 547,
									"end": 606,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 547,
									"end": 606,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 196,
									"end": 612,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 617,
									"end": 842,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 617,
									"end": 842,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 657,
									"end": 660,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 689,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 684,
									"end": 690,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 681,
									"end": 682,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 678,
									"end": 691,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 675,
									"end": 811,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 675,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 675,
									"end": 811,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 733,
									"end": 743,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 728,
									"end": 731,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 724,
									"end": 744,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 721,
									"end": 722,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 714,
									"end": 745,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 768,
									"end": 772,
									"name": "PUSH",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 765,
									"end": 766,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 758,
									"end": 773,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 796,
									"end": 800,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 793,
									"end": 794,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 801,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 675,
									"end": 811,
									"name": "tag",
									"source": 14,
									"value": "46"
								},
								{
									"begin": 675,
									"end": 811,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 827,
									"end": 836,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 827,
									"end": 836,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 617,
									"end": 842,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1055,
									"end": 1395,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1055,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 5452,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b8e4ab78c31c0e2aef7d2a8fb4a0fec9212d1acbc21c9474ca2942bdb96c70e064736f6c634300080d0033",
									".code": [
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "5EAC6239"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "983D95CE"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "983D95CE"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "B343AE14"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "CA1C2019"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "DEEC7EFF"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "E3A9DB1A"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "5EAC6239"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "74478BB3"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "8D8F2ADB"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "34FCF437"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "34FCF437"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "4665096D"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "515A20BA"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "598B8E71"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "222A2C4"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "68C526F"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "150B7A02"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "1852E8D9"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "276184AE"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "2C4E722E"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 665,
											"end": 5452,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 891,
											"end": 931,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 891,
											"end": 931,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 891,
											"end": 931,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 891,
											"end": 931,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3338,
											"end": 3371,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3320,
											"end": 3372,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3320,
											"end": 3372,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5274,
											"end": 5445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3176,
											"end": 3378,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3788,
											"end": 3813,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3788,
											"end": 3813,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3788,
											"end": 3813,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3776,
											"end": 3778,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3642,
											"end": 3819,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 937,
											"end": 964,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 937,
											"end": 964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 937,
											"end": 964,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 964,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 937,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 964,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 937,
											"end": 964,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 937,
											"end": 964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 937,
											"end": 964,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 971,
											"end": 996,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 971,
											"end": 996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 971,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 971,
											"end": 996,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 971,
											"end": 996,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 971,
											"end": 996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 971,
											"end": 996,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4794,
											"end": 4808,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4809,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4810,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4810,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4629,
											"end": 4816,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1082,
											"end": 1105,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1196,
											"end": 1265,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1271,
											"end": 1323,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2802,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2838,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2853,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2814,
											"end": 2854,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2814,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2882,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2881,
											"end": 2900,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 2936,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2947,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2950,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 2950,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2921,
											"end": 2950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3085,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3094,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3043,
											"end": 3055,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 3057,
											"end": 3067,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3057,
											"end": 3067,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3034,
											"end": 3068,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3068,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 3034,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 3034,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 2994,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3003,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3020,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3029,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 2985,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2977,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2977,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3104,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 3115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2687,
											"end": 3146,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3239,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3310,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3296,
											"end": 3328,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3259,
											"end": 3293,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3259,
											"end": 3293,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3259,
											"end": 3293,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 3259,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3328,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5921,
											"end": 5923,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5903,
											"end": 5924,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5960,
											"end": 5962,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5940,
											"end": 5958,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5933,
											"end": 5963,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420626C6F636B73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5979,
											"end": 5997,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5972,
											"end": 6016,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3251,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3472,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 3490,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3454,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3444,
											"end": 3454,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3421,
											"end": 3455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 3430,
											"end": 3442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3421,
											"end": 3455,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3421,
											"end": 3455,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 3421,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 3421,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3372,
											"end": 3408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3372,
											"end": 3408,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3372,
											"end": 3408,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 3372,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 3372,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 3364,
											"end": 3417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 3364,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3357,
											"end": 3491,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3152,
											"end": 3498,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2052,
											"end": 2056,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2052,
											"end": 2064,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 1993,
											"end": 2071,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1781,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1781,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2263,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2278,
											"end": 2289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2263,
											"end": 2275,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 2263,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2263,
											"end": 2289,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2289,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 2263,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2260,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2250,
											"end": 2289,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4108,
											"end": 4133,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4108,
											"end": 4133,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4108,
											"end": 4133,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4104,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4133,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6400,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6436,
											"end": 6438,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6416,
											"end": 6434,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6409,
											"end": 6439,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6455,
											"end": 6473,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6448,
											"end": 6493,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 6195,
											"end": 6534,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 4086,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4168,
											"end": 4177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4179,
											"end": 4198,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 4268,
											"end": 4278,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4288,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4288,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4289,
											"end": 4290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4291,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4252,
											"end": 4292,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4252,
											"end": 4292,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 4252,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4247,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4248,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4292,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4314,
											"end": 4339,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4357,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 4358,
											"end": 4368,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4391,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4391,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4392,
											"end": 4393,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6887,
											"end": 6930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 6973,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7013,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7022,
											"end": 7052,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "PUSH",
											"source": 14,
											"value": "A4"
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4438,
											"end": 4446,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4446,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4422,
											"end": 4432,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4421,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4412,
											"end": 4433,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4438,
											"end": 4449,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4412,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4412,
											"end": 4450,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4412,
											"end": 4450,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4412,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4467,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3605,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3594,
											"end": 3605,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3605,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3594,
											"end": 3605,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3594,
											"end": 3605,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3594,
											"end": 3613,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3586,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3665,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3668,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3677,
											"end": 3689,
											"name": "NUMBER",
											"source": 13
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3691,
											"end": 3701,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3668,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 3668,
											"end": 3702,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 3702,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3668,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3702,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3702,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3729,
											"end": 3748,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3795,
											"end": 3805,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3815,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3815,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3807,
											"end": 3818,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3779,
											"end": 3819,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3779,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3848,
											"end": 3858,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3847,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3819,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3868,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3868,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3872,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3750,
											"end": 3753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3713,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 3904,
											"end": 3994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3953,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 3953,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3953,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3964,
											"end": 3974,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3953,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3941,
											"end": 3953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3963,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 3934,
											"end": 3963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3994,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 3904,
											"end": 3994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 4001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 4001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3504,
											"end": 4001,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1670,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1714,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 1714,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1714,
											"end": 1722,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5035,
											"end": 5054,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5035,
											"end": 5054,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5087,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 5057,
											"end": 5087,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 5057,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5152,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7273,
											"end": 7324,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7340,
											"end": 7358,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7333,
											"end": 7367,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5035,
											"end": 5102,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5035,
											"end": 5102,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5119,
											"end": 5131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5141,
											"name": "PUSH",
											"source": 13,
											"value": "A9059CBB"
										},
										{
											"begin": 5112,
											"end": 5141,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5025,
											"end": 5173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4980,
											"end": 5173,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4473,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4573,
											"end": 4582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4584,
											"end": 4603,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4664,
											"end": 4672,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4672,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4643,
											"end": 4653,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4642,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4633,
											"end": 4654,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4664,
											"end": 4675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 4633,
											"end": 4676,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4633,
											"end": 4676,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 4633,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8053,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8033,
											"end": 8054,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8092,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8063,
											"end": 8093,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8129,
											"end": 8159,
											"name": "PUSH",
											"source": 14,
											"value": "5374616B696E673A20746F6B656E206E6F74206465706F736974656400000000"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8102,
											"end": 8160,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8177,
											"end": 8195,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7849,
											"end": 8201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 4624,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4771,
											"end": 4781,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4793,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4755,
											"end": 4795,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4755,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4740,
											"end": 4750,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4739,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4795,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4838,
											"end": 4846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4846,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4829,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4818,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4809,
											"end": 4830,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4809,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 4809,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4897,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4872,
											"end": 4897,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4872,
											"end": 4897,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4915,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 4931,
											"end": 4941,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4950,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4950,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6862,
											"end": 6877,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6914,
											"end": 6929,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6894,
											"end": 6912,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6887,
											"end": 6930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6946,
											"end": 6964,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 6973,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7009,
											"end": 7012,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6989,
											"end": 7007,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6982,
											"end": 7013,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7022,
											"end": 7052,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "PUSH",
											"source": 14,
											"value": "A4"
										},
										{
											"begin": 7069,
											"end": 7088,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4864,
											"end": 4957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4568,
											"end": 4968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5250,
											"end": 5261,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5261,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5179,
											"end": 5268,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2405,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2389,
											"end": 2405,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 2527,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2547,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2484,
											"end": 2547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2576,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2576,
											"end": 2586,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2576,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2576,
											"end": 2595,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2576,
											"end": 2595,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2576,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2572,
											"end": 2595,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 2626,
											"end": 2636,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 2626,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2642,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2556,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2666,
											"end": 2674,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2681,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8408,
											"end": 8410,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8390,
											"end": 8411,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8447,
											"end": 8449,
											"name": "PUSH",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8420,
											"end": 8450,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8486,
											"end": 8520,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8466,
											"end": 8484,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8459,
											"end": 8521,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8530,
											"end": 8566,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8583,
											"end": 8602,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 8583,
											"end": 8602,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8206,
											"end": 8608,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 646,
											"end": 653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 672,
											"end": 673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 672,
											"end": 677,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 684,
											"end": 685,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 672,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 672,
											"end": 685,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 672,
											"end": 685,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 588,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 588,
											"end": 692,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 11298,
											"end": 11442,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 11298,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11375,
											"end": 11379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4367,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11398,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 4247,
											"end": 4374,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8815,
											"end": 8817,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8797,
											"end": 8818,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8827,
											"end": 8857,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8927,
											"name": "PUSH",
											"source": 14,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8866,
											"end": 8928,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8945,
											"end": 8963,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8945,
											"end": 8963,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8613,
											"end": 8969,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 2530,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9176,
											"end": 9178,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9158,
											"end": 9179,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9217,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9213,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9188,
											"end": 9218,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9234,
											"end": 9252,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9227,
											"end": 9273,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9290,
											"end": 9308,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9290,
											"end": 9308,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 8974,
											"end": 9314,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10785,
											"end": 10914,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 10785,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10852,
											"end": 10856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10875,
											"end": 10907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 10880,
											"end": 10883,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10900,
											"end": 10905,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 10875,
											"end": 10907,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9521,
											"end": 9523,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9503,
											"end": 9524,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9560,
											"end": 9562,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9540,
											"end": 9558,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9533,
											"end": 9563,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH",
											"source": 14,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9579,
											"end": 9597,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9572,
											"end": 9633,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9650,
											"end": 9668,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9319,
											"end": 9674,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11082,
											"end": 11217,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 11082,
											"end": 11217,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11175,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 11183,
											"end": 11186,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11203,
											"end": 11208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11175,
											"end": 11182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 11175,
											"end": 11210,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 11523,
											"end": 11635,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 11523,
											"end": 11635,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11583,
											"end": 11590,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 11617,
											"end": 11620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4555,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4455,
											"end": 4562,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11977,
											"end": 12112,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11977,
											"end": 12112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 12086,
											"end": 12089,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 12082,
											"end": 12104,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 9883,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9920,
											"end": 9922,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9900,
											"end": 9918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9893,
											"end": 9923,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9939,
											"end": 9957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9932,
											"end": 9982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9999,
											"end": 10017,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 9679,
											"end": 10023,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 2206,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2269,
											"end": 2273,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4343,
											"end": 4362,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2350,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2507,
											"end": 2525,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2497,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2504,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2485,
											"end": 2525,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2539,
											"end": 2550,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 2285,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2581,
											"end": 2593,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2778,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2844,
											"end": 2848,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2981,
											"end": 3000,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3015,
											"end": 3030,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3405,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3408,
											"end": 3418,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 3408,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3474,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 3456,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3497,
											"end": 3523,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3566,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3575,
											"end": 3584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3563,
											"end": 3585,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3688,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3697,
											"end": 3710,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3711,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3723,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3820,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3797,
											"end": 3833,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 3493,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3969,
											"end": 3986,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4061,
											"end": 4073,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4080,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4106,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4095,
											"end": 4106,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 3011,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4144,
											"end": 4149,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4137,
											"end": 4149,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4971,
											"end": 4978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5008,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5009,
											"end": 5014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4997,
											"end": 5015,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4990,
											"end": 5015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5022,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 290,
											"end": 310,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 339,
											"end": 370,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 339,
											"end": 370,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 329,
											"end": 371,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 329,
											"end": 371,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 319,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 385,
											"end": 386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 383,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 375,
											"end": 387,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 319,
											"end": 389,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 319,
											"end": 389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 222,
											"end": 395,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 527,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 400,
											"end": 527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 461,
											"end": 471,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 456,
											"end": 459,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 449,
											"end": 450,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 473,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 492,
											"end": 496,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 489,
											"end": 490,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 497,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 516,
											"end": 520,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 521,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 625,
											"end": 631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 686,
											"end": 688,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 683,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 665,
											"end": 672,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 661,
											"end": 684,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 657,
											"end": 689,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 654,
											"end": 706,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 654,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 654,
											"end": 706,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 700,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 692,
											"end": 704,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 654,
											"end": 706,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 654,
											"end": 706,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 725,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 744,
											"end": 753,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 725,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 725,
											"end": 754,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 754,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 725,
											"end": 754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 715,
											"end": 754,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 715,
											"end": 754,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 828,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 815,
											"end": 824,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 811,
											"end": 829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 798,
											"end": 830,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 849,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 890,
											"end": 892,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 879,
											"end": 893,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 876,
											"end": 910,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 876,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 876,
											"end": 910,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 904,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 908,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 876,
											"end": 910,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 876,
											"end": 910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 919,
											"end": 951,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 919,
											"end": 951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 982,
											"end": 986,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 978,
											"end": 980,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 974,
											"end": 987,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 970,
											"end": 997,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 960,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 960,
											"end": 1015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1011,
											"end": 1012,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1009,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1001,
											"end": 1013,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 960,
											"end": 1015,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 960,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1047,
											"end": 1049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1034,
											"end": 1050,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1069,
											"end": 1071,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1065,
											"end": 1067,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1062,
											"end": 1072,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1059,
											"end": 1095,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 1075,
											"end": 1093,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1123,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 1153,
											"end": 1155,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1156,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1218,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1212,
											"end": 1219,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 1207,
											"end": 1209,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 1203,
											"end": 1205,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1199,
											"end": 1210,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1195,
											"end": 1220,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1183,
											"end": 1221,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1256,
											"end": 1278,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1251,
											"end": 1253,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1239,
											"end": 1249,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1236,
											"end": 1254,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1233,
											"end": 1279,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 1230,
											"end": 1302,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 1282,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1318,
											"end": 1320,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1368,
											"end": 1386,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1402,
											"end": 1417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1440,
											"end": 1460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1472,
											"end": 1491,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 1472,
											"end": 1491,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1472,
											"end": 1491,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1505,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1494,
											"end": 1506,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1528,
											"end": 1539,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1559,
											"end": 1562,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1647,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1630,
											"end": 1647,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1618,
											"end": 1648,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1618,
											"end": 1648,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1581,
											"end": 1593,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 1548,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1709,
											"end": 1715,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1699,
											"end": 1715,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 1721,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1726,
											"end": 2358,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 1726,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1970,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1970,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1949,
											"end": 1970,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2032,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2019,
											"end": 2032,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1922,
											"end": 1940,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2063,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2063,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2041,
											"end": 2063,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1868,
											"end": 1872,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1872,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1897,
											"end": 1899,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2120,
											"end": 2135,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2094,
											"end": 2096,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2097,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1868,
											"end": 1872,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2171,
											"end": 2184,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2251,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2238,
											"end": 2251,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2226,
											"end": 2252,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2307,
											"end": 2322,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2272,
											"end": 2284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2199,
											"end": 2200,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 2163,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 1726,
											"end": 2358,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1726,
											"end": 2358,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2474,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2490,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2548,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2533,
											"end": 2542,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2524,
											"end": 2531,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2520,
											"end": 2543,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2516,
											"end": 2549,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2552,
											"end": 2564,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 2604,
											"end": 2613,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 2585,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2575,
											"end": 2614,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2575,
											"end": 2614,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 2633,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2623,
											"end": 2671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2718,
											"end": 2720,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2703,
											"end": 2721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2690,
											"end": 2722,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2722,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2758,
											"end": 2776,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2745,
											"end": 2777,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2796,
											"end": 2814,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2826,
											"end": 2840,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 2823,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2891,
											"end": 2897,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 2898,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2866,
											"end": 2898,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2929,
											"end": 2933,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2921,
											"end": 2934,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2917,
											"end": 2944,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2948,
											"end": 2960,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 2907,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3013,
											"end": 3027,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3044,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3010,
											"end": 3044,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3040,
											"end": 3041,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3030,
											"end": 3042,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3010,
											"end": 3044,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 3010,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3085,
											"end": 3092,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3077,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3063,
											"end": 3078,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3056,
											"end": 3093,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3110,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3053,
											"end": 3110,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3106,
											"end": 3107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3096,
											"end": 3108,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3053,
											"end": 3110,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 3053,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP10",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3137,
											"end": 3139,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3140,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3129,
											"end": 3140,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3159,
											"end": 3165,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2363,
											"end": 3171,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3383,
											"end": 3637,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 3383,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3491,
											"end": 3498,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3487,
											"end": 3510,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3515,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3518,
											"end": 3530,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 3480,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 3570,
											"end": 3579,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3551,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 3551,
											"end": 3580,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3551,
											"end": 3580,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 3551,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3541,
											"end": 3580,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3631,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3383,
											"end": 3637,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 4004,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3824,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3938,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3924,
											"end": 3933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3915,
											"end": 3922,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3911,
											"end": 3934,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3907,
											"end": 3939,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 3904,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3975,
											"end": 3998,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 4004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3824,
											"end": 4004,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4009,
											"end": 4624,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 4009,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4095,
											"end": 4101,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4131,
											"end": 4154,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4127,
											"end": 4159,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4172,
											"end": 4173,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4162,
											"end": 4174,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 4124,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4212,
											"end": 4221,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4199,
											"end": 4222,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4282,
											"end": 4284,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4274,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4271,
											"end": 4285,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4268,
											"end": 4302,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4268,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4268,
											"end": 4302,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4298,
											"end": 4299,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4288,
											"end": 4300,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4268,
											"end": 4302,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 4268,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4336,
											"end": 4342,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4321,
											"end": 4343,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4311,
											"end": 4343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4374,
											"end": 4378,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4370,
											"end": 4372,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4366,
											"end": 4379,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4362,
											"end": 4389,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 4352,
											"end": 4407,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4393,
											"end": 4405,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4407,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 4352,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4443,
											"end": 4445,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4430,
											"end": 4446,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4461,
											"end": 4467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4458,
											"end": 4472,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4486,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4483,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 4455,
											"end": 4489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4533,
											"end": 4535,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4523,
											"end": 4529,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 4516,
											"end": 4530,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4508,
											"end": 4531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4504,
											"end": 4536,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4501,
											"end": 4546,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4498,
											"end": 4563,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4498,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4498,
											"end": 4563,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4557,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4549,
											"end": 4561,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4498,
											"end": 4563,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 4498,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4593,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4624,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4009,
											"end": 4624,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4009,
											"end": 4624,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4821,
											"end": 5007,
											"name": "tag",
											"source": 14,
											"value": "104"
										},
										{
											"begin": 4821,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4880,
											"end": 4886,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4935,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4921,
											"end": 4930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4912,
											"end": 4919,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4904,
											"end": 4936,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 4953,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 4901,
											"end": 4953,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4947,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4901,
											"end": 4953,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 4901,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 4991,
											"end": 5000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4972,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 4972,
											"end": 5001,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5012,
											"end": 5139,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 5012,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5073,
											"end": 5083,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 5068,
											"end": 5071,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5064,
											"end": 5084,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5085,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5104,
											"end": 5108,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5094,
											"end": 5109,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5128,
											"end": 5132,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5125,
											"end": 5126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5118,
											"end": 5133,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5144,
											"end": 5271,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 5144,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5205,
											"end": 5215,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 5200,
											"end": 5203,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 5196,
											"end": 5216,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5193,
											"end": 5194,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5217,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 5233,
											"end": 5234,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5226,
											"end": 5241,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5260,
											"end": 5264,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5257,
											"end": 5258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5265,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5276,
											"end": 5401,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 5276,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5341,
											"end": 5342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5338,
											"end": 5346,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5335,
											"end": 5369,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5276,
											"end": 5401,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5406,
											"end": 5574,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 5406,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5446,
											"end": 5453,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5504,
											"end": 5510,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 5500,
											"end": 5514,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5494,
											"end": 5515,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5482,
											"end": 5491,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5475,
											"end": 5492,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5471,
											"end": 5516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5468,
											"end": 5539,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 5519,
											"end": 5537,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5406,
											"end": 5574,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5579,
											"end": 5714,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 5579,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5618,
											"end": 5621,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5656,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5639,
											"end": 5656,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5639,
											"end": 5656,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 5636,
											"end": 5679,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 5695,
											"end": 5708,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5708,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5579,
											"end": 5714,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6062,
											"end": 6190,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 6062,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6134,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6129,
											"end": 6135,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6123,
											"end": 6136,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6120,
											"end": 6159,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6120,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 6120,
											"end": 6159,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6062,
											"end": 6190,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7378,
											"end": 7655,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 7378,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7445,
											"end": 7451,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7500,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7486,
											"end": 7495,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7484,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7473,
											"end": 7496,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7469,
											"end": 7501,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7466,
											"end": 7518,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7466,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 7466,
											"end": 7518,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7511,
											"end": 7512,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7504,
											"end": 7516,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7466,
											"end": 7518,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 7466,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7546,
											"end": 7555,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7540,
											"end": 7556,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7599,
											"end": 7604,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7592,
											"end": 7605,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7585,
											"end": 7606,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7578,
											"end": 7583,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7575,
											"end": 7607,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7565,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 7565,
											"end": 7625,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7619,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7611,
											"end": 7623,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7660,
											"end": 7844,
											"name": "tag",
											"source": 14,
											"value": "233"
										},
										{
											"begin": 7660,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7771,
											"end": 7780,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7758,
											"end": 7781,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7754,
											"end": 7786,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7751,
											"end": 7803,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7751,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 7751,
											"end": 7803,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7799,
											"end": 7800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7796,
											"end": 7797,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7789,
											"end": 7801,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7751,
											"end": 7803,
											"name": "tag",
											"source": 14,
											"value": "447"
										},
										{
											"begin": 7751,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7660,
											"end": 7844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7660,
											"end": 7844,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10028,
											"end": 10155,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 10028,
											"end": 10155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10089,
											"end": 10099,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 10084,
											"end": 10087,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 10080,
											"end": 10100,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10070,
											"end": 10101,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10120,
											"end": 10124,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 10117,
											"end": 10118,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10110,
											"end": 10125,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10144,
											"end": 10148,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10149,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_depositBlocks(address,uint256)": "b343ae14",
							"accumulatedTokens(address)": "deec7eff",
							"calculateReward(address,uint256)": "1852e8d9",
							"calculateRewards(address,uint256[])": "068c526f",
							"claimRewards(uint256[])": "5eac6239",
							"deposit(uint256[])": "598b8e71",
							"depositsOf(address)": "e3a9db1a",
							"erc20Address()": "276184ae",
							"expiration()": "4665096d",
							"flipIsClaimable()": "ca1c2019",
							"isClaimable()": "74478bb3",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"rate()": "2c4e722e",
							"renounceOwnership()": "715018a6",
							"setExpiration(uint256)": "515a20ba",
							"setRate(uint256)": "34fcf437",
							"stakingDestinationAddress()": "0222a2c4",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw(uint256[])": "983d95ce",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingDestinationAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_erc20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_depositBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accumulatedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flipIsClaimable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isClaimable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"setExpiration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingDestinationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrenStaking.sol\":\"FrenStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/FrenStaking.sol\":{\"keccak256\":\"0xccf89ff6acec57e7f844892ce4f1edab46f20631673f81bf9299b1f113dd536c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d24fd13067a64289cd4a66044c2a25922bd54e1448734fb896ccfb9f9b450ee8\",\"dweb:/ipfs/QmZADP8E8bUGcvSZPp1o5VbW3U82kFT9Kaf7gxMHp1GQkf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 231,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 2698,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "nullAddress",
								"offset": 1,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 2700,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "stakingDestinationAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 2702,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "erc20Address",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 2704,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "expiration",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2706,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "rate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2708,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "isClaimable",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 2713,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "_deposits",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(UintSet)2541_storage)"
							},
							{
								"astId": 2719,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "_depositBlocks",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 2723,
								"contract": "contracts/FrenStaking.sol:FrenStaking",
								"label": "accumulatedTokens",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UintSet)2541_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct EnumerableSet.UintSet)",
								"numberOfBytes": "32",
								"value": "t_struct(UintSet)2541_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Set)2069_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 2064,
										"contract": "contracts/FrenStaking.sol:FrenStaking",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 2068,
										"contract": "contracts/FrenStaking.sol:FrenStaking",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintSet)2541_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.UintSet",
								"members": [
									{
										"astId": 2540,
										"contract": "contracts/FrenStaking.sol:FrenStaking",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)2069_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							869
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 870,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 869,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								869
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 859,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							869
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 870,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 869,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								869
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 274,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 274,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 242,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 246,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 250,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 255,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 274,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 274,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 275,
							"src": "888:1952:2",
							"usedErrors": []
						}
					],
					"src": "112:2729:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 286,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 295,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 352,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 352,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 352,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 352,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 352,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2677:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2699:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2719:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2758:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:3"
									},
									"scope": 352,
									"src": "2646:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 353,
							"src": "202:2564:3",
							"usedErrors": []
						}
					],
					"src": "106:2661:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							881
						],
						"IERC721": [
							468
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 355,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 882,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 357,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 881,
										"src": "271:7:4"
									},
									"id": 358,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 356,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 468,
							"linearizedBaseContracts": [
								468,
								881
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 367,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 376,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 385,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 468,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 468,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 468,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2679:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2701:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "2721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:4"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:4"
									},
									"scope": 468,
									"src": "2644:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3526:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "3568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:4"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:4"
									},
									"scope": 468,
									"src": "3495:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4079:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "4091:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:4"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:4"
									},
									"scope": 468,
									"src": "4062:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 449,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4464:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4482:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 445,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:4"
									},
									"scope": 468,
									"src": "4437:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "4678:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "4718:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:4"
									},
									"scope": 468,
									"src": "4657:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4926:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4967:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:4"
									},
									"scope": 468,
									"src": "4885:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 469,
							"src": "250:4725:4",
							"usedErrors": []
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							486
						]
					},
					"id": 487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 486,
							"linearizedBaseContracts": [
								486
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "859:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "932:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "976:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 482,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:5"
									},
									"scope": 486,
									"src": "824:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 487,
							"src": "294:692:5",
							"usedErrors": []
						}
					],
					"src": "116:871:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							881
						],
						"IERC721": [
							468
						],
						"IERC721Enumerable": [
							517
						]
					},
					"id": 518,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 489,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 518,
							"sourceUnit": 469,
							"src": "154:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 491,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 468,
										"src": "348:7:6"
									},
									"id": 492,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 490,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 517,
							"linearizedBaseContracts": [
								517,
								468,
								881
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:6"
									},
									"scope": 517,
									"src": "449:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "715:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:6"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:6"
									},
									"scope": 517,
									"src": "686:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:6"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "1012:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:6"
									},
									"scope": 517,
									"src": "952:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 518,
							"src": "317:706:6",
							"usedErrors": []
						}
					],
					"src": "129:895:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							847
						]
					},
					"id": 848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 847,
							"linearizedBaseContracts": [
								847
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 528,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 527,
												"id": 533,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 847,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 546,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$847",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$847",
																				"typeString": "library Address"
																			}
																		],
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 544,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 549,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													555,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 555,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 554,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 562,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 556,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 558,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 847,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 581,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 579,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															671
														],
														"referencedDeclaration": 671,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 578,
												"id": 585,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 847,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 603,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 599,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															671
														],
														"referencedDeclaration": 671,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 598,
												"id": 605,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 591,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 847,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 620,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 622,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 619,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															627,
															671
														],
														"referencedDeclaration": 671,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 618,
												"id": 625,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 611,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 847,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 644,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$847",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$847",
																				"typeString": "library Address"
																			}
																		],
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 642,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 647,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													653,
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 652,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 654,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 662,
												"initialValue": {
													"arguments": [
														{
															"id": 660,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 656,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 658,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 664,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 666,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 667,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 663,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 640,
												"id": 669,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 631,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 635,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 847,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 681,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															688,
															717
														],
														"referencedDeclaration": 717,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 686,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 847,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													701,
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 700,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"id": 706,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 704,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 710,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 711,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 712,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 713,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 709,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 699,
												"id": 715,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 847,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 728,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 727,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															734,
															763
														],
														"referencedDeclaration": 763,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 726,
												"id": 732,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 847,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													747,
													749
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 746,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 749,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 762,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 748,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [
														{
															"id": 752,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 750,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 756,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 758,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 759,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 755,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 745,
												"id": 761,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 740,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 743,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 847,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 777,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 768,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 795,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 796,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 772,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 794,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 798,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 793,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 778,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 790,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 789,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 784,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 783,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 786,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 782,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 788,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 791,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 776,
															"id": 792,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 771,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 847,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 814,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 820,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 809,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 818,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 815,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 813,
															"id": 816,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 808,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 847,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 833,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 843,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 840,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 839,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 842,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 844,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 828,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 828,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 837,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 847,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 848,
							"src": "194:8964:7",
							"usedErrors": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							869
						]
					},
					"id": 870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 850,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 869,
							"linearizedBaseContracts": [
								869
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 855,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 854,
												"id": 857,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 869,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 864,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 863,
												"id": 866,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 869,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 870,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 872,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "IERC165",
							"nameLocation": "415:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 880,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "801:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 874,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:9"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "844:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:9"
									},
									"scope": 881,
									"src": "774:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "405:447:9",
							"usedErrors": []
						}
					],
					"src": "100:753:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1746
						]
					},
					"id": 1747,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:10",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1746,
							"linearizedBaseContracts": [
								1746
							],
							"name": "Math",
							"nameLocation": "210:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 888,
									"members": [
										{
											"id": 885,
											"name": "Down",
											"nameLocation": "245:4:10",
											"nodeType": "EnumValue",
											"src": "245:4:10"
										},
										{
											"id": 886,
											"name": "Up",
											"nameLocation": "287:2:10",
											"nodeType": "EnumValue",
											"src": "287:2:10"
										},
										{
											"id": 887,
											"name": "Zero",
											"nameLocation": "318:4:10",
											"nodeType": "EnumValue",
											"src": "318:4:10"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:10",
									"nodeType": "EnumDefinition",
									"src": "221:122:10"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "480:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 898,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "497:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 899,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "501:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 902,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "509:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:10",
													"trueExpression": {
														"id": 901,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "505:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 904,
												"nodeType": "Return",
												"src": "490:20:10"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:10",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "426:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "437:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:10"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "471:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:10"
									},
									"scope": 1746,
									"src": "413:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "655:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 916,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "672:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 917,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "676:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 920,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "684:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:10",
													"trueExpression": {
														"id": 919,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "680:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 922,
												"nodeType": "Return",
												"src": "665:20:10"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:10",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "601:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "612:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:10"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "646:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:10"
									},
									"scope": 1746,
									"src": "588:104:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "876:82:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 934,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "931:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 935,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "935:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 937,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 938,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "941:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 939,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 929,
																		"src": "945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 941,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 933,
												"id": 945,
												"nodeType": "Return",
												"src": "923:28:10"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:10",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "822:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "833:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:10"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "867:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:10"
									},
									"scope": 1746,
									"src": "805:153:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1228:123:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 957,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "1316:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 961,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 950,
																			"src": "1330:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 965,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1339:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:10",
													"trueExpression": {
														"hexValue": "30",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 956,
												"id": 970,
												"nodeType": "Return",
												"src": "1309:35:10"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:10",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1174:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1185:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:10"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "1219:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:10"
									},
									"scope": 1746,
									"src": "1157:194:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "1795:3797:10",
										"statements": [
											{
												"id": 1092,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:10",
												"statements": [
													{
														"assignments": [
															985
														],
														"declarations": [
															{
																"constant": false,
																"id": 985,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1092,
																"src": "2126:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 984,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 986,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:10"
													},
													{
														"assignments": [
															988
														],
														"declarations": [
															{
																"constant": false,
																"id": 988,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:10",
																"nodeType": "VariableDeclaration",
																"scope": 1092,
																"src": "2198:13:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 987,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 989,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:10"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:10"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:10",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:10",
																"valueSize": 1
															},
															{
																"declaration": 975,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:10",
																"valueSize": 1
															},
															{
																"declaration": 975,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:10",
																"valueSize": 1
															},
															{
																"declaration": 977,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:10",
																"valueSize": 1
															},
															{
																"declaration": 977,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:10",
																"valueSize": 1
															}
														],
														"id": 990,
														"nodeType": "InlineAssembly",
														"src": "2269:166:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 991,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "2516:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 999,
														"nodeType": "IfStatement",
														"src": "2512:75:10",
														"trueBody": {
															"id": 998,
															"nodeType": "Block",
															"src": "2528:59:10",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 994,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "2553:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 995,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "2561:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 983,
																	"id": 997,
																	"nodeType": "Return",
																	"src": "2546:26:10"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1001,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "2697:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1002,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "2711:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1000,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1005,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:10"
													},
													{
														"assignments": [
															1007
														],
														"declarations": [
															{
																"constant": false,
																"id": 1007,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:10",
																"nodeType": "VariableDeclaration",
																"scope": 1092,
																"src": "2973:17:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1006,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1008,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:10"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:10"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:10"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:10"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:10"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:10"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:10"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 979,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:10",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:10",
																"valueSize": 1
															},
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:10",
																"valueSize": 1
															},
															{
																"declaration": 1007,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:10",
																"valueSize": 1
															},
															{
																"declaration": 975,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:10",
																"valueSize": 1
															},
															{
																"declaration": 977,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:10",
																"valueSize": 1
															}
														],
														"id": 1009,
														"nodeType": "InlineAssembly",
														"src": "3004:300:10"
													},
													{
														"assignments": [
															1011
														],
														"declarations": [
															{
																"constant": false,
																"id": 1011,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:10",
																"nodeType": "VariableDeclaration",
																"scope": 1092,
																"src": "3611:12:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1010,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1019,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "3626:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:10",
																			"subExpression": {
																				"id": 1013,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 979,
																				"src": "3642:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:10"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:10",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:10"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:10"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:10"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:10"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:10",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:10"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:10"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:10"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:10",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:10"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:10"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 979,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:10",
																"valueSize": 1
															},
															{
																"declaration": 979,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:10",
																"valueSize": 1
															},
															{
																"declaration": 985,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:10",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:10",
																"valueSize": 1
															},
															{
																"declaration": 1011,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:10",
																"valueSize": 1
															}
														],
														"id": 1020,
														"nodeType": "InlineAssembly",
														"src": "3672:371:10"
													},
													{
														"expression": {
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1021,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "4109:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1022,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "4118:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1023,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "4126:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1026,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:10"
													},
													{
														"assignments": [
															1028
														],
														"declarations": [
															{
																"constant": false,
																"id": 1028,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:10",
																"nodeType": "VariableDeclaration",
																"scope": 1092,
																"src": "4448:15:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1027,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1035,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1030,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "4471:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1032,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:10"
													},
													{
														"expression": {
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1036,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4704:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1038,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4719:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1039,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4733:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1043,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:10"
													},
													{
														"expression": {
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1044,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1046,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4788:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1047,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4802:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1051,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:10"
													},
													{
														"expression": {
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1052,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4843:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1054,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4858:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1055,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4872:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1059,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:10"
													},
													{
														"expression": {
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1060,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4913:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1062,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4928:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1063,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4942:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1067,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:10"
													},
													{
														"expression": {
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1068,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "4983:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1070,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "4998:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1071,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "5012:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1075,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:10"
													},
													{
														"expression": {
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1076,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "5054:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1078,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "5069:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1079,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "5083:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1083,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:10"
													},
													{
														"expression": {
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1084,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 982,
																"src": "5524:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1085,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 985,
																	"src": "5533:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1086,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5541:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1089,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:10"
													},
													{
														"expression": {
															"id": 1090,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "5569:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 983,
														"id": 1091,
														"nodeType": "Return",
														"src": "5562:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:10",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1692:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1711:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1730:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:10"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1094,
												"src": "1779:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:10"
									},
									"scope": 1746,
									"src": "1667:3925:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "5872:189:10",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "5882:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "5906:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1113,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1099,
															"src": "5909:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1114,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "5912:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1111,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1094,
															1138
														],
														"referencedDeclaration": 1094,
														"src": "5899:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$888",
															"typeString": "enum Math.Rounding"
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1117,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "5938:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$888",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1118,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5950:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$888_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 886,
															"src": "5950:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$888",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1122,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1097,
																	"src": "5972:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1123,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "5975:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1124,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1101,
																	"src": "5978:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1121,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "5934:98:10",
												"trueBody": {
													"id": 1133,
													"nodeType": "Block",
													"src": "5996:36:10",
													"statements": [
														{
															"expression": {
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1129,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1110,
																	"src": "6010:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1132,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1135,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "6048:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1136,
												"nodeType": "Return",
												"src": "6041:13:10"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:10",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5749:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5787:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5816:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$888",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1102,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "5816:8:10"
													},
													"referencedDeclaration": 888,
													"src": "5816:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$888",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:10"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "5863:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:10"
									},
									"scope": 1746,
									"src": "5724:337:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "6337:1585:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6351:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1152,
												"nodeType": "IfStatement",
												"src": "6347:45:10",
												"trueBody": {
													"id": 1151,
													"nodeType": "Block",
													"src": "6359:33:10",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1145,
															"id": 1150,
															"nodeType": "Return",
															"src": "6373:8:10"
														}
													]
												}
											},
											{
												"assignments": [
													1154
												],
												"declarations": [
													{
														"constant": false,
														"id": 1154,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "7071:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1153,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1157,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1141,
																			"src": "7099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1156,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1418,
																			1454
																		],
																		"referencedDeclaration": 1418,
																		"src": "7094:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1161,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:10"
											},
											{
												"id": 1248,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:10",
												"statements": [
													{
														"expression": {
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1164,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7532:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1165,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7542:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1166,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7551:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1167,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7555:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1170,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1174,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:10"
													},
													{
														"expression": {
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1175,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7581:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1176,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7591:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1177,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7600:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1178,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7604:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1181,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1185,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:10"
													},
													{
														"expression": {
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1186,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7630:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1187,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7640:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1188,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7649:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1189,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7653:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1192,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1196,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:10"
													},
													{
														"expression": {
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1197,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7679:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1198,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7689:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1199,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7698:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1200,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7702:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1207,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:10"
													},
													{
														"expression": {
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1208,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7728:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1209,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7738:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1210,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7747:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1211,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7751:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1214,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1218,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:10"
													},
													{
														"expression": {
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1219,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7777:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1220,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7787:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1221,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7796:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1222,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7800:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1225,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1229,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:10"
													},
													{
														"expression": {
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1230,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "7826:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1231,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1154,
																				"src": "7836:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1232,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "7845:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1233,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1154,
																					"src": "7849:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1236,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1240,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:10"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1242,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "7886:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1243,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1141,
																		"src": "7894:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1244,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "7898:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1241,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "7882:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1145,
														"id": 1247,
														"nodeType": "Return",
														"src": "7875:30:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1139,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:10",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6294:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:10"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "6328:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:10"
									},
									"scope": 1746,
									"src": "6280:1642:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "8098:161:10",
										"statements": [
											{
												"id": 1284,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:10",
												"statements": [
													{
														"assignments": [
															1262
														],
														"declarations": [
															{
																"constant": false,
																"id": 1262,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1284,
																"src": "8132:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1266,
														"initialValue": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "8154:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1263,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1250,
																	1286
																],
																"referencedDeclaration": 1250,
																"src": "8149:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1267,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "8177:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$888",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1268,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "8187:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1269,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "8199:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$888_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1270,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 886,
																					"src": "8199:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1276,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1274,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1272,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "8214:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1273,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "8223:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1275,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1253,
																					"src": "8232:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1260,
														"id": 1283,
														"nodeType": "Return",
														"src": "8170:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:10",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8036:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8047:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$888",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1254,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "8047:8:10"
													},
													"referencedDeclaration": 888,
													"src": "8047:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$888",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:10"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "8089:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:10"
									},
									"scope": 1746,
									"src": "8022:237:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "8444:922:10",
										"statements": [
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "8454:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1294,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"initialValue": {
													"hexValue": "30",
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:10"
											},
											{
												"id": 1414,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8510:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1312,
														"nodeType": "IfStatement",
														"src": "8506:99:10",
														"trueBody": {
															"id": 1311,
															"nodeType": "Block",
															"src": "8528:77:10",
															"statements": [
																{
																	"expression": {
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1303,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8546:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1306,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:10"
																},
																{
																	"expression": {
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1307,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "8577:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1310,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1313,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8622:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1327,
														"nodeType": "IfStatement",
														"src": "8618:96:10",
														"trueBody": {
															"id": 1326,
															"nodeType": "Block",
															"src": "8639:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8657:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:10"
																},
																{
																	"expression": {
																		"id": 1324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "8687:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1325,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8731:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1342,
														"nodeType": "IfStatement",
														"src": "8727:96:10",
														"trueBody": {
															"id": 1341,
															"nodeType": "Block",
															"src": "8748:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1333,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8766:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1334,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1336,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:10"
																},
																{
																	"expression": {
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1337,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "8796:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1340,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1343,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8840:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1357,
														"nodeType": "IfStatement",
														"src": "8836:96:10",
														"trueBody": {
															"id": 1356,
															"nodeType": "Block",
															"src": "8857:75:10",
															"statements": [
																{
																	"expression": {
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1348,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8875:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1351,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:10"
																},
																{
																	"expression": {
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1352,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "8905:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1355,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "8949:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1372,
														"nodeType": "IfStatement",
														"src": "8945:93:10",
														"trueBody": {
															"id": 1371,
															"nodeType": "Block",
															"src": "8965:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1363,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8983:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1366,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:10"
																},
																{
																	"expression": {
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1367,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "9012:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1370,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1373,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "9055:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1387,
														"nodeType": "IfStatement",
														"src": "9051:93:10",
														"trueBody": {
															"id": 1386,
															"nodeType": "Block",
															"src": "9071:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1378,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9089:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1381,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:10"
																},
																{
																	"expression": {
																		"id": 1384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1382,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "9118:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1385,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "9161:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1402,
														"nodeType": "IfStatement",
														"src": "9157:93:10",
														"trueBody": {
															"id": 1401,
															"nodeType": "Block",
															"src": "9177:73:10",
															"statements": [
																{
																	"expression": {
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1393,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9195:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1396,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:10"
																},
																{
																	"expression": {
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "9224:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1400,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1403,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "9267:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1413,
														"nodeType": "IfStatement",
														"src": "9263:64:10",
														"trueBody": {
															"id": 1412,
															"nodeType": "Block",
															"src": "9283:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "9301:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1411,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1415,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1295,
													"src": "9353:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1293,
												"id": 1416,
												"nodeType": "Return",
												"src": "9346:13:10"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:10",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "8397:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:10"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "8435:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:10"
									},
									"scope": 1746,
									"src": "8383:983:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "9599:165:10",
										"statements": [
											{
												"id": 1452,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:10",
												"statements": [
													{
														"assignments": [
															1430
														],
														"declarations": [
															{
																"constant": false,
																"id": 1430,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1452,
																"src": "9633:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1434,
														"initialValue": {
															"arguments": [
																{
																	"id": 1432,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "9655:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1431,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1418,
																	1454
																],
																"referencedDeclaration": 1418,
																"src": "9650:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1435,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "9682:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$888",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1436,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1424,
																					"src": "9692:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1437,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "9704:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$888_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 886,
																					"src": "9704:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1442,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1440,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1441,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1430,
																						"src": "9724:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1443,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1421,
																					"src": "9733:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1428,
														"id": 1451,
														"nodeType": "Return",
														"src": "9675:72:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:10",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "9533:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "9548:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$888",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "9548:8:10"
													},
													"referencedDeclaration": 888,
													"src": "9548:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$888",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:10"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "9590:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:10"
									},
									"scope": 1746,
									"src": "9519:245:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "9951:828:10",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1582,
														"src": "9961:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"hexValue": "30",
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:10"
											},
											{
												"id": 1579,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1466,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10017:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "10013:99:10",
														"trueBody": {
															"id": 1481,
															"nodeType": "Block",
															"src": "10034:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10052:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:10"
																},
																{
																	"expression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10085:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1480,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1483,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10129:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1499,
														"nodeType": "IfStatement",
														"src": "10125:99:10",
														"trueBody": {
															"id": 1498,
															"nodeType": "Block",
															"src": "10146:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10164:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1493,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:10"
																},
																{
																	"expression": {
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1494,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10197:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1495,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1497,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1500,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10241:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1516,
														"nodeType": "IfStatement",
														"src": "10237:99:10",
														"trueBody": {
															"id": 1515,
															"nodeType": "Block",
															"src": "10258:78:10",
															"statements": [
																{
																	"expression": {
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10276:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1510,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:10"
																},
																{
																	"expression": {
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1511,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10309:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1514,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1517,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10353:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1533,
														"nodeType": "IfStatement",
														"src": "10349:96:10",
														"trueBody": {
															"id": 1532,
															"nodeType": "Block",
															"src": "10369:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1522,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10387:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1527,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:10"
																},
																{
																	"expression": {
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1528,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10419:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1531,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1534,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10462:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1550,
														"nodeType": "IfStatement",
														"src": "10458:96:10",
														"trueBody": {
															"id": 1549,
															"nodeType": "Block",
															"src": "10478:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10496:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1544,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:10"
																},
																{
																	"expression": {
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1545,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10528:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1548,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10571:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1567,
														"nodeType": "IfStatement",
														"src": "10567:96:10",
														"trueBody": {
															"id": 1566,
															"nodeType": "Block",
															"src": "10587:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1556,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10605:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1559,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1557,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1561,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:10"
																},
																{
																	"expression": {
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1562,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10637:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1565,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1568,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "10680:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1578,
														"nodeType": "IfStatement",
														"src": "10676:64:10",
														"trueBody": {
															"id": 1577,
															"nodeType": "Block",
															"src": "10696:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1573,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "10714:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1576,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1580,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1463,
													"src": "10766:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1581,
												"nodeType": "Return",
												"src": "10759:13:10"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:10",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "9904:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:10"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "9942:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:10"
									},
									"scope": 1746,
									"src": "9889:890:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "11014:165:10",
										"statements": [
											{
												"id": 1617,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:10",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1617,
																"src": "11048:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1599,
														"initialValue": {
															"arguments": [
																{
																	"id": 1597,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "11071:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1596,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1583,
																	1619
																],
																"referencedDeclaration": 1583,
																"src": "11065:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1600,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "11098:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$888",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1604,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1601,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1589,
																					"src": "11108:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1602,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "11120:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$888_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 886,
																					"src": "11120:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1607,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1605,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1606,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "11139:6:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1608,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1586,
																					"src": "11148:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1614,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1616,
														"nodeType": "Return",
														"src": "11091:71:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10948:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "10963:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$888",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "10963:8:10"
													},
													"referencedDeclaration": 888,
													"src": "10963:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$888",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:10"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "11005:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:10"
									},
									"scope": 1746,
									"src": "10933:246:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "11493:600:10",
										"statements": [
											{
												"assignments": [
													1628
												],
												"declarations": [
													{
														"constant": false,
														"id": 1628,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1705,
														"src": "11503:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"hexValue": "30",
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:10"
											},
											{
												"id": 1702,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1631,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11559:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1645,
														"nodeType": "IfStatement",
														"src": "11555:98:10",
														"trueBody": {
															"id": 1644,
															"nodeType": "Block",
															"src": "11577:76:10",
															"statements": [
																{
																	"expression": {
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1636,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "11595:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1639,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:10"
																},
																{
																	"expression": {
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "11626:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1643,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1646,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11670:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1660,
														"nodeType": "IfStatement",
														"src": "11666:95:10",
														"trueBody": {
															"id": 1659,
															"nodeType": "Block",
															"src": "11687:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1651,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "11705:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1654,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:10"
																},
																{
																	"expression": {
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1655,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "11735:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1658,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1661,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11778:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1675,
														"nodeType": "IfStatement",
														"src": "11774:95:10",
														"trueBody": {
															"id": 1674,
															"nodeType": "Block",
															"src": "11795:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "11813:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1669,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:10"
																},
																{
																	"expression": {
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1670,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "11843:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1673,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1676,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11886:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1690,
														"nodeType": "IfStatement",
														"src": "11882:95:10",
														"trueBody": {
															"id": 1689,
															"nodeType": "Block",
															"src": "11903:74:10",
															"statements": [
																{
																	"expression": {
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1681,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "11921:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1684,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:10"
																},
																{
																	"expression": {
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1685,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "11951:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1688,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:10"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "11994:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1701,
														"nodeType": "IfStatement",
														"src": "11990:64:10",
														"trueBody": {
															"id": 1700,
															"nodeType": "Block",
															"src": "12010:44:10",
															"statements": [
																{
																	"expression": {
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1696,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1628,
																			"src": "12028:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1699,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:10"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1703,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1628,
													"src": "12080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1626,
												"id": 1704,
												"nodeType": "Return",
												"src": "12073:13:10"
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:10",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "11446:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:10"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "11484:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:10"
									},
									"scope": 1746,
									"src": "11430:663:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "12329:173:10",
										"statements": [
											{
												"id": 1743,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:10",
												"statements": [
													{
														"assignments": [
															1718
														],
														"declarations": [
															{
																"constant": false,
																"id": 1718,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1743,
																"src": "12363:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1717,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1722,
														"initialValue": {
															"arguments": [
																{
																	"id": 1720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "12387:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1719,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1706,
																	1745
																],
																"referencedDeclaration": 1706,
																"src": "12380:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1723,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1718,
																"src": "12414:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$888",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1724,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1712,
																					"src": "12424:8:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1725,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 888,
																						"src": "12436:8:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$888_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 886,
																					"src": "12436:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$888",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1735,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1733,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1731,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1729,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1718,
																									"src": "12457:6:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1730,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1732,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1734,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1709,
																					"src": "12471:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:10",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1740,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1716,
														"id": 1742,
														"nodeType": "Return",
														"src": "12407:78:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1707,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:10",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "12263:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "12278:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$888",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1710,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 888,
														"src": "12278:8:10"
													},
													"referencedDeclaration": 888,
													"src": "12278:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$888",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:10"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "12320:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:10"
									},
									"scope": 1746,
									"src": "12247:255:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1747,
							"src": "202:12302:10",
							"usedErrors": []
						}
					],
					"src": "103:12402:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2058
						]
					},
					"id": 2059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1748,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1749,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:11",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2058,
							"linearizedBaseContracts": [
								2058
							],
							"name": "SafeMath",
							"nameLocation": "490:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "717:140:11",
										"statements": [
											{
												"id": 1779,
												"nodeType": "UncheckedBlock",
												"src": "727:124:11",
												"statements": [
													{
														"assignments": [
															1762
														],
														"declarations": [
															{
																"constant": false,
																"id": 1762,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1779,
																"src": "751:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1766,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1763,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "763:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1764,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1754,
																"src": "767:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "786:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1768,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "790:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1774,
														"nodeType": "IfStatement",
														"src": "782:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1772,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1760,
															"id": 1773,
															"nodeType": "Return",
															"src": "793:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1776,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "838:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1777,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1760,
														"id": 1778,
														"nodeType": "Return",
														"src": "824:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:11",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "657:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "668:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:11"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "702:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "708:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:11"
									},
									"scope": 2058,
									"src": "641:216:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "1078:113:11",
										"statements": [
											{
												"id": 1807,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1793,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "1116:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1794,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1784,
																"src": "1120:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1800,
														"nodeType": "IfStatement",
														"src": "1112:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1798,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1792,
															"id": 1799,
															"nodeType": "Return",
															"src": "1123:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1802,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "1168:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1803,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "1172:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1805,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1792,
														"id": 1806,
														"nodeType": "Return",
														"src": "1154:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1782,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:11",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1018:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1029:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:11"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1063:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1069:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:11"
									},
									"scope": 2058,
									"src": "1002:189:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "1415:417:11",
										"statements": [
											{
												"id": 1849,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1821,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "1683:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1828,
														"nodeType": "IfStatement",
														"src": "1679:28:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1826,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1820,
															"id": 1827,
															"nodeType": "Return",
															"src": "1691:16:11"
														}
													},
													{
														"assignments": [
															1830
														],
														"declarations": [
															{
																"constant": false,
																"id": 1830,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1849,
																"src": "1721:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1829,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1834,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "1733:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1832,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "1737:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:11"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1835,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "1756:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1836,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "1760:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1838,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "1765:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1844,
														"nodeType": "IfStatement",
														"src": "1752:33:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1842,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1820,
															"id": 1843,
															"nodeType": "Return",
															"src": "1768:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1846,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "1813:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1847,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1820,
														"id": 1848,
														"nodeType": "Return",
														"src": "1799:16:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:11",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1355:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1366:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:11"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1400:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1816,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "1406:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:11"
									},
									"scope": 2058,
									"src": "1339:493:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "2057:114:11",
										"statements": [
											{
												"id": 1877,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "2095:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1870,
														"nodeType": "IfStatement",
														"src": "2091:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1868,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1862,
															"id": 1869,
															"nodeType": "Return",
															"src": "2103:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1872,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "2148:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1873,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "2152:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1875,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1862,
														"id": 1876,
														"nodeType": "Return",
														"src": "2134:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:11",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "1997:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2008:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:11"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2042:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "2048:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:11"
									},
									"scope": 2058,
									"src": "1981:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "2406:114:11",
										"statements": [
											{
												"id": 1905,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:11",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1891,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "2444:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "2440:29:11",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1896,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1890,
															"id": 1897,
															"nodeType": "Return",
															"src": "2452:17:11"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1900,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "2497:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1901,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "2501:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1903,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1890,
														"id": 1904,
														"nodeType": "Return",
														"src": "2483:20:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2346:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2357:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:11"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2391:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "2397:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:11"
									},
									"scope": 2058,
									"src": "2330:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1921,
										"nodeType": "Block",
										"src": "2822:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1917,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1910,
														"src": "2839:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1918,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "2843:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1916,
												"id": 1920,
												"nodeType": "Return",
												"src": "2832:12:11"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:11",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2768:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2779:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:11"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "2813:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:11"
									},
									"scope": 2058,
									"src": "2755:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1936,
										"nodeType": "Block",
										"src": "3189:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1932,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "3206:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1933,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1927,
														"src": "3210:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1931,
												"id": 1935,
												"nodeType": "Return",
												"src": "3199:12:11"
											}
										]
									},
									"documentation": {
										"id": 1923,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "3135:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "3146:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:11"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "3180:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:11"
									},
									"scope": 2058,
									"src": "3122:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "3532:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1940,
														"src": "3549:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1948,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "3553:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1950,
												"nodeType": "Return",
												"src": "3542:12:11"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:11",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3478:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3489:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:11"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "3523:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:11"
									},
									"scope": 2058,
									"src": "3465:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "3917:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1962,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1955,
														"src": "3934:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1963,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "3938:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1961,
												"id": 1965,
												"nodeType": "Return",
												"src": "3927:12:11"
											}
										]
									},
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3863:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3874:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:11"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "3908:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:11"
									},
									"scope": 2058,
									"src": "3850:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "4466:29:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "4483:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1978,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1972,
														"src": "4487:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1976,
												"id": 1980,
												"nodeType": "Return",
												"src": "4476:12:11"
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4412:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4423:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:11"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "4457:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:11"
									},
									"scope": 2058,
									"src": "4399:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "5084:106:11",
										"statements": [
											{
												"id": 2005,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1995,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1987,
																		"src": "5126:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1996,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1985,
																		"src": "5131:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1998,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1989,
																	"src": "5134:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1994,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2000,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2001,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1985,
																"src": "5168:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2002,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1987,
																"src": "5172:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1993,
														"id": 2004,
														"nodeType": "Return",
														"src": "5161:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:11",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "4981:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "5000:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "5019:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:11"
									},
									"returnParameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "5075:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:11"
									},
									"scope": 2058,
									"src": "4959:231:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2031,
										"nodeType": "Block",
										"src": "5799:105:11",
										"statements": [
											{
												"id": 2030,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2022,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2020,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "5841:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2023,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "5848:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2019,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2025,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2026,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "5882:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2027,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2012,
																"src": "5886:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2018,
														"id": 2029,
														"nodeType": "Return",
														"src": "5875:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2008,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:11",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5696:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5715:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2014,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5734:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2013,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:11"
									},
									"returnParameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2032,
												"src": "5790:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:11"
									},
									"scope": 2058,
									"src": "5674:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "6675:105:11",
										"statements": [
											{
												"id": 2055,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2045,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2037,
																		"src": "6717:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2048,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2039,
																	"src": "6724:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2044,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2050,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:11"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2051,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "6758:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2052,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "6762:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2043,
														"id": 2054,
														"nodeType": "Return",
														"src": "6751:12:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2033,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:11",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "6572:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "6591:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "6610:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:11"
									},
									"returnParameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "6666:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:11"
									},
									"scope": 2058,
									"src": "6550:230:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2059,
							"src": "482:6300:11",
							"usedErrors": []
						}
					],
					"src": "107:6676:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							2671
						]
					},
					"id": 2672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "205:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2061,
								"nodeType": "StructuredDocumentation",
								"src": "230:1090:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 2671,
							"linearizedBaseContracts": [
								2671
							],
							"name": "EnumerableSet",
							"nameLocation": "1329:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 2069,
									"members": [
										{
											"constant": false,
											"id": 2064,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1853:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2069,
											"src": "1843:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 2062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1843:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2063,
												"nodeType": "ArrayTypeName",
												"src": "1843:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2068,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "2021:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2069,
											"src": "1993:36:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 2067,
												"keyType": {
													"id": 2065,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1993:27:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1796:3:12",
									"nodeType": "StructDefinition",
									"scope": 2671,
									"src": "1789:247:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2110,
										"nodeType": "Block",
										"src": "2275:335:12",
										"statements": [
											{
												"condition": {
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2289:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 2081,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2073,
																"src": "2300:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 2082,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2075,
																"src": "2305:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2080,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "2290:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 2083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2290:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2108,
													"nodeType": "Block",
													"src": "2567:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2588:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2079,
															"id": 2107,
															"nodeType": "Return",
															"src": "2581:12:12"
														}
													]
												},
												"id": 2109,
												"nodeType": "IfStatement",
												"src": "2285:319:12",
												"trueBody": {
													"id": 2105,
													"nodeType": "Block",
													"src": "2313:248:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2090,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "2344:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2085,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "2327:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2088,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2064,
																		"src": "2327:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2327:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 2091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2327:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2092,
															"nodeType": "ExpressionStatement",
															"src": "2327:23:12"
														},
														{
															"expression": {
																"id": 2101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 2093,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "2485:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2068,
																		"src": "2485:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2097,
																	"indexExpression": {
																		"id": 2095,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2075,
																		"src": "2498:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2485:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 2098,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2073,
																			"src": "2507:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2064,
																		"src": "2507:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2507:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2485:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2102,
															"nodeType": "ExpressionStatement",
															"src": "2485:40:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2079,
															"id": 2104,
															"nodeType": "Return",
															"src": "2539:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2070,
										"nodeType": "StructuredDocumentation",
										"src": "2042:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2215:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2232:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2220:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2072,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2071,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "2220:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "2220:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2245:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2237:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2074,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2237:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:32:12"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2111,
												"src": "2269:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2269:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:6:12"
									},
									"scope": 2671,
									"src": "2206:404:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2194,
										"nodeType": "Block",
										"src": "2850:1316:12",
										"statements": [
											{
												"assignments": [
													2123
												],
												"declarations": [
													{
														"constant": false,
														"id": 2123,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "2968:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2194,
														"src": "2960:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2960:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2128,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2124,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "2981:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2068,
														"src": "2981:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 2127,
													"indexExpression": {
														"id": 2126,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "2994:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2981:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2960:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2129,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2123,
														"src": "3015:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3029:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3015:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2192,
													"nodeType": "Block",
													"src": "4123:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4144:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2121,
															"id": 2191,
															"nodeType": "Return",
															"src": "4137:12:12"
														}
													]
												},
												"id": 2193,
												"nodeType": "IfStatement",
												"src": "3011:1149:12",
												"trueBody": {
													"id": 2189,
													"nodeType": "Block",
													"src": "3032:1085:12",
													"statements": [
														{
															"assignments": [
																2133
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2133,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "3392:13:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2189,
																	"src": "3384:21:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2132,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3384:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2137,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2134,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2123,
																	"src": "3408:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3421:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3408:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3384:38:12"
														},
														{
															"assignments": [
																2139
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2139,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3444:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2189,
																	"src": "3436:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2138,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3436:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2145,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 2140,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "3456:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2141,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2064,
																		"src": "3456:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3456:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3477:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3456:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3436:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2146,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "3497:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 2147,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2133,
																	"src": "3510:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3497:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2173,
															"nodeType": "IfStatement",
															"src": "3493:398:12",
															"trueBody": {
																"id": 2172,
																"nodeType": "Block",
																"src": "3525:366:12",
																"statements": [
																	{
																		"assignments": [
																			2150
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2150,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3551:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 2172,
																				"src": "3543:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 2149,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3543:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2155,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 2151,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2115,
																					"src": "3563:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 2152,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2064,
																				"src": "3563:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 2154,
																			"indexExpression": {
																				"id": 2153,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "3575:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3563:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3543:42:12"
																	},
																	{
																		"expression": {
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2156,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2115,
																						"src": "3685:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2159,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2064,
																					"src": "3685:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 2160,
																				"indexExpression": {
																					"id": 2158,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2133,
																					"src": "3697:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3685:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2161,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2150,
																				"src": "3714:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3685:38:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 2163,
																		"nodeType": "ExpressionStatement",
																		"src": "3685:38:12"
																	},
																	{
																		"expression": {
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 2164,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2115,
																						"src": "3797:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 2167,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2068,
																					"src": "3797:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 2168,
																				"indexExpression": {
																					"id": 2166,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2150,
																					"src": "3810:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3797:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2169,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2123,
																				"src": "3823:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3797:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2171,
																		"nodeType": "ExpressionStatement",
																		"src": "3797:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2174,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "3969:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2064,
																		"src": "3969:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 2178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3969:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 2179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3969:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2180,
															"nodeType": "ExpressionStatement",
															"src": "3969:17:12"
														},
														{
															"expression": {
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4054:26:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 2181,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "4061:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 2182,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2068,
																		"src": "4061:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 2184,
																	"indexExpression": {
																		"id": 2183,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2117,
																		"src": "4074:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4061:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2186,
															"nodeType": "ExpressionStatement",
															"src": "4054:26:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4102:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2121,
															"id": 2188,
															"nodeType": "Return",
															"src": "4095:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2112,
										"nodeType": "StructuredDocumentation",
										"src": "2616:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2787:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2807:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2795:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2114,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2113,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "2795:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "2795:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2820:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2812:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2812:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:32:12"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2195,
												"src": "2844:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2844:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:6:12"
									},
									"scope": 2671,
									"src": "2778:1388:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "4326:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 2206,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2199,
																"src": "4343:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 2207,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2068,
															"src": "4343:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 2209,
														"indexExpression": {
															"id": 2208,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "4356:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4343:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4366:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4343:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2205,
												"id": 2212,
												"nodeType": "Return",
												"src": "4336:31:12"
											}
										]
									},
									"documentation": {
										"id": 2196,
										"nodeType": "StructuredDocumentation",
										"src": "4172:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4256:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4278:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "4266:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2197,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "4266:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "4266:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4291:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "4283:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2200,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4283:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4265:32:12"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "4320:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4320:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4319:6:12"
									},
									"scope": 2671,
									"src": "4247:127:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "4520:42:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2223,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2218,
															"src": "4537:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2064,
														"src": "4537:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4537:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2222,
												"id": 2226,
												"nodeType": "Return",
												"src": "4530:25:12"
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "4380:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4464:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4484:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "4472:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2216,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "4472:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "4472:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4471:17:12"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "4511:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4511:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4510:9:12"
									},
									"scope": 2671,
									"src": "4455:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "4980:42:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 2239,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "4997:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 2240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2064,
														"src": "4997:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 2242,
													"indexExpression": {
														"id": 2241,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "5009:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4997:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2243,
												"nodeType": "Return",
												"src": "4990:25:12"
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "4568:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4913:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4929:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4917:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2230,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "4917:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "4917:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4942:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4934:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:32:12"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "4971:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4971:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4970:9:12"
									},
									"scope": 2671,
									"src": "4904:118:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "5636:35:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2255,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2249,
														"src": "5653:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2064,
													"src": "5653:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 2254,
												"id": 2257,
												"nodeType": "Return",
												"src": "5646:18:12"
											}
										]
									},
									"documentation": {
										"id": 2246,
										"nodeType": "StructuredDocumentation",
										"src": "5028:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5571:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5591:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "5579:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 2248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2247,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2069,
														"src": "5579:3:12"
													},
													"referencedDeclaration": 2069,
													"src": "5579:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5578:17:12"
									},
									"returnParameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "5618:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2251,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5618:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2252,
													"nodeType": "ArrayTypeName",
													"src": "5618:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:12"
									},
									"scope": 2671,
									"src": "5562:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 2263,
									"members": [
										{
											"constant": false,
											"id": 2262,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5728:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2263,
											"src": "5724:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2261,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2260,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2069,
													"src": "5724:3:12"
												},
												"referencedDeclaration": 2069,
												"src": "5724:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5703:10:12",
									"nodeType": "StructDefinition",
									"scope": 2671,
									"src": "5696:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "5987:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2275,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2267,
																"src": "6009:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "6009:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2277,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "6021:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2274,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "6004:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6004:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2273,
												"id": 2279,
												"nodeType": "Return",
												"src": "5997:30:12"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "5747:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5920:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5943:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "5924:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2265,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "5924:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "5924:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5956:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "5948:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5923:39:12"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "5981:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5981:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5980:6:12"
									},
									"scope": 2671,
									"src": "5911:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2298,
										"nodeType": "Block",
										"src": "6281:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2293,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2285,
																"src": "6306:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "6306:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "6318:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2292,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "6298:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6298:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2297,
												"nodeType": "Return",
												"src": "6291:33:12"
											}
										]
									},
									"documentation": {
										"id": 2282,
										"nodeType": "StructuredDocumentation",
										"src": "6040:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6211:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6237:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "6218:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2284,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2283,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "6218:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "6218:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6250:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "6242:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6242:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6217:39:12"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2299,
												"src": "6275:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6275:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:6:12"
									},
									"scope": 2671,
									"src": "6202:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2316,
										"nodeType": "Block",
										"src": "6498:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2311,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "6525:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2312,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "6525:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2313,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "6537:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2310,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "6515:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2309,
												"id": 2315,
												"nodeType": "Return",
												"src": "6508:35:12"
											}
										]
									},
									"documentation": {
										"id": 2300,
										"nodeType": "StructuredDocumentation",
										"src": "6337:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6421:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6449:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "6430:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2302,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2301,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "6430:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "6430:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6462:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "6454:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6454:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6429:39:12"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2317,
												"src": "6492:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6492:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:6:12"
									},
									"scope": 2671,
									"src": "6412:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "6703:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2327,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "6728:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "6728:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2326,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "6720:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6720:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2325,
												"id": 2330,
												"nodeType": "Return",
												"src": "6713:26:12"
											}
										]
									},
									"documentation": {
										"id": 2318,
										"nodeType": "StructuredDocumentation",
										"src": "6556:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6640:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6666:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6647:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2319,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "6647:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "6647:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6646:24:12"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "6694:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:9:12"
									},
									"scope": 2671,
									"src": "6631:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "7171:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2344,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2336,
																"src": "7192:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "7192:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 2346,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2338,
															"src": "7204:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2343,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "7188:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7188:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2342,
												"id": 2348,
												"nodeType": "Return",
												"src": "7181:29:12"
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "6752:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7097:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7119:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "7100:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "7100:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "7100:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7132:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "7124:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7124:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:39:12"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "7162:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2340,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7162:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7161:9:12"
									},
									"scope": 2671,
									"src": "7088:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "7838:219:12",
										"statements": [
											{
												"assignments": [
													2364
												],
												"declarations": [
													{
														"constant": false,
														"id": 2364,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7865:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2379,
														"src": "7848:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2362,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7848:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2363,
															"nodeType": "ArrayTypeName",
															"src": "7848:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2369,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2366,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "7881:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 2367,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2262,
															"src": "7881:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2365,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "7873:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7873:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7848:44:12"
											},
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7919:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2379,
														"src": "7902:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2372,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7902:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2373,
															"nodeType": "ArrayTypeName",
															"src": "7902:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"nodeType": "VariableDeclarationStatement",
												"src": "7902:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7988:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8002:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "8012:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2374,
														"isOffset": false,
														"isSlot": false,
														"src": "8002:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2364,
														"isOffset": false,
														"isSlot": false,
														"src": "8012:5:12",
														"valueSize": 1
													}
												],
												"id": 2376,
												"nodeType": "InlineAssembly",
												"src": "7979:48:12"
											},
											{
												"expression": {
													"id": 2377,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2374,
													"src": "8044:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2359,
												"id": 2378,
												"nodeType": "Return",
												"src": "8037:13:12"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "7223:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7766:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7792:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "7773:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 2353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2352,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2263,
														"src": "7773:10:12"
													},
													"referencedDeclaration": 2263,
													"src": "7773:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$2263_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7772:24:12"
									},
									"returnParameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "7820:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2356,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7820:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2357,
													"nodeType": "ArrayTypeName",
													"src": "7820:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7819:18:12"
									},
									"scope": 2671,
									"src": "7757:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 2384,
									"members": [
										{
											"constant": false,
											"id": 2383,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8114:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2384,
											"src": "8110:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2382,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2381,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2069,
													"src": "8110:3:12"
												},
												"referencedDeclaration": 2069,
												"src": "8110:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8089:10:12",
									"nodeType": "StructDefinition",
									"scope": 2671,
									"src": "8082:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "8373:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2396,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "8395:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "8395:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2404,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2390,
																					"src": "8431:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8423:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2402,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8423:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8423:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8415:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2400,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8415:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8415:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8407:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2398,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8407:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2395,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "8390:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8390:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2394,
												"id": 2409,
												"nodeType": "Return",
												"src": "8383:57:12"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "8133:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8306:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8329:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "8310:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2386,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "8310:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "8310:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8342:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "8334:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8334:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8309:39:12"
									},
									"returnParameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "8367:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8367:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8366:6:12"
									},
									"scope": 2671,
									"src": "8297:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2437,
										"nodeType": "Block",
										"src": "8694:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2423,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "8719:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "8719:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2431,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2417,
																					"src": "8755:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8747:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2429,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8747:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8747:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8739:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2427,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8739:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8739:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8731:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2425,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8731:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8731:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2422,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "8711:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2421,
												"id": 2436,
												"nodeType": "Return",
												"src": "8704:60:12"
											}
										]
									},
									"documentation": {
										"id": 2412,
										"nodeType": "StructuredDocumentation",
										"src": "8453:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8624:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8650:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "8631:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2413,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "8631:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "8631:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8663:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "8655:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8655:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8630:39:12"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2438,
												"src": "8688:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8688:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8687:6:12"
									},
									"scope": 2671,
									"src": "8615:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2464,
										"nodeType": "Block",
										"src": "8938:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2450,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2442,
																"src": "8965:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "8965:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2458,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2444,
																					"src": "9001:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8993:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2456,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8993:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8993:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8985:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2454,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8985:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8985:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8977:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2452,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8977:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8977:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2449,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "8955:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8955:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2448,
												"id": 2463,
												"nodeType": "Return",
												"src": "8948:62:12"
											}
										]
									},
									"documentation": {
										"id": 2439,
										"nodeType": "StructuredDocumentation",
										"src": "8777:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8861:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2442,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8889:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "8870:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2440,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "8870:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "8870:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8902:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "8894:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8894:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8869:39:12"
									},
									"returnParameters": {
										"id": 2448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2465,
												"src": "8932:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8932:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8931:6:12"
									},
									"scope": 2671,
									"src": "8852:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2479,
										"nodeType": "Block",
										"src": "9170:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2475,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2469,
																"src": "9195:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2476,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "9195:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2474,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "9187:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9187:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2473,
												"id": 2478,
												"nodeType": "Return",
												"src": "9180:26:12"
											}
										]
									},
									"documentation": {
										"id": 2466,
										"nodeType": "StructuredDocumentation",
										"src": "9023:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9107:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9133:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "9114:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2467,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "9114:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "9114:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9113:24:12"
									},
									"returnParameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "9161:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9161:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9160:9:12"
									},
									"scope": 2671,
									"src": "9098:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "9638:73:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 2498,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2484,
																						"src": "9683:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 2499,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2383,
																					"src": "9683:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$2069_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 2500,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2486,
																					"src": "9695:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$2069_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2497,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2245,
																				"src": "9679:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 2501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9679:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 2496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9671:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2495,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9671:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9671:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9663:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 2493,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9663:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9663:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9655:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 2491,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9655:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9655:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2490,
												"id": 2505,
												"nodeType": "Return",
												"src": "9648:56:12"
											}
										]
									},
									"documentation": {
										"id": 2481,
										"nodeType": "StructuredDocumentation",
										"src": "9219:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9564:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9586:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "9567:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2483,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2482,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "9567:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "9567:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2486,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9599:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "9591:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9591:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9566:39:12"
									},
									"returnParameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "9629:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9628:9:12"
									},
									"scope": 2671,
									"src": "9555:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "10332:219:12",
										"statements": [
											{
												"assignments": [
													2521
												],
												"declarations": [
													{
														"constant": false,
														"id": 2521,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10359:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "10342:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2519,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10342:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2520,
															"nodeType": "ArrayTypeName",
															"src": "10342:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2526,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2523,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "10375:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2383,
															"src": "10375:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2522,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "10367:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10367:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10342:44:12"
											},
											{
												"assignments": [
													2531
												],
												"declarations": [
													{
														"constant": false,
														"id": 2531,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10413:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2536,
														"src": "10396:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2529,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10396:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2530,
															"nodeType": "ArrayTypeName",
															"src": "10396:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2532,
												"nodeType": "VariableDeclarationStatement",
												"src": "10396:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "10482:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10496:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "10506:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10496:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2531,
														"isOffset": false,
														"isSlot": false,
														"src": "10496:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2521,
														"isOffset": false,
														"isSlot": false,
														"src": "10506:5:12",
														"valueSize": 1
													}
												],
												"id": 2533,
												"nodeType": "InlineAssembly",
												"src": "10473:48:12"
											},
											{
												"expression": {
													"id": 2534,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2531,
													"src": "10538:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 2516,
												"id": 2535,
												"nodeType": "Return",
												"src": "10531:13:12"
											}
										]
									},
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "9717:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10260:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10286:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "10267:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 2510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2509,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2384,
														"src": "10267:10:12"
													},
													"referencedDeclaration": 2384,
													"src": "10267:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$2384_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10266:24:12"
									},
									"returnParameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "10314:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2513,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10314:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2514,
													"nodeType": "ArrayTypeName",
													"src": "10314:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10313:18:12"
									},
									"scope": 2671,
									"src": "10251:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 2541,
									"members": [
										{
											"constant": false,
											"id": 2540,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10602:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2541,
											"src": "10598:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 2539,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2538,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2069,
													"src": "10598:3:12"
												},
												"referencedDeclaration": 2069,
												"src": "10598:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$2069_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10580:7:12",
									"nodeType": "StructDefinition",
									"scope": 2671,
									"src": "10573:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2561,
										"nodeType": "Block",
										"src": "10858:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2553,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2545,
																"src": "10880:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2540,
															"src": "10880:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "10900:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10892:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2555,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10892:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10892:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2552,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2111,
														"src": "10875:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10875:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2551,
												"id": 2560,
												"nodeType": "Return",
												"src": "10868:39:12"
											}
										]
									},
									"documentation": {
										"id": 2542,
										"nodeType": "StructuredDocumentation",
										"src": "10621:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 2562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10794:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2545,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10814:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "10798:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2543,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "10798:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "10798:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10827:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "10819:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10797:36:12"
									},
									"returnParameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2562,
												"src": "10852:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10852:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10851:6:12"
									},
									"scope": 2671,
									"src": "10785:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "11158:59:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2574,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "11183:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2575,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2540,
															"src": "11183:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2578,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2568,
																	"src": "11203:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11195:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2576,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11195:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11195:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2573,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "11175:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11175:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2572,
												"id": 2581,
												"nodeType": "Return",
												"src": "11168:42:12"
											}
										]
									},
									"documentation": {
										"id": 2563,
										"nodeType": "StructuredDocumentation",
										"src": "10920:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11091:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2566,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11114:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "11098:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2565,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2564,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "11098:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "11098:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11127:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "11119:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11119:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:36:12"
									},
									"returnParameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "11152:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11152:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11151:6:12"
									},
									"scope": 2671,
									"src": "11082:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2603,
										"nodeType": "Block",
										"src": "11381:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2595,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2587,
																"src": "11408:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2540,
															"src": "11408:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "11428:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11420:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2597,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11420:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11420:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2594,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "11398:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2593,
												"id": 2602,
												"nodeType": "Return",
												"src": "11391:44:12"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "11223:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 2604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11307:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11332:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "11316:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2586,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2585,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "11316:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "11316:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11345:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "11337:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11337:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11315:36:12"
									},
									"returnParameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "11375:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11375:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11374:6:12"
									},
									"scope": 2671,
									"src": "11298:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2618,
										"nodeType": "Block",
										"src": "11592:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2614,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2608,
																"src": "11617:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2540,
															"src": "11617:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2613,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "11609:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11609:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2612,
												"id": 2617,
												"nodeType": "Return",
												"src": "11602:26:12"
											}
										]
									},
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "11448:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 2619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11532:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11555:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "11539:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2607,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2606,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "11539:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "11539:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11538:21:12"
									},
									"returnParameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2619,
												"src": "11583:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11583:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11582:9:12"
									},
									"scope": 2671,
									"src": "11523:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "12057:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2633,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2623,
																		"src": "12086:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2540,
																	"src": "12086:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$2069_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 2635,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2625,
																	"src": "12098:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$2069_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2632,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "12082:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12082:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12074:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 2630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12074:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12074:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2638,
												"nodeType": "Return",
												"src": "12067:38:12"
											}
										]
									},
									"documentation": {
										"id": 2620,
										"nodeType": "StructuredDocumentation",
										"src": "11641:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "11986:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12005:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "11989:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2621,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "11989:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "11989:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12018:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "12010:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12010:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11988:36:12"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "12048:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12048:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12047:9:12"
									},
									"scope": 2671,
									"src": "11977:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2669,
										"nodeType": "Block",
										"src": "12730:219:12",
										"statements": [
											{
												"assignments": [
													2654
												],
												"declarations": [
													{
														"constant": false,
														"id": 2654,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12757:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2669,
														"src": "12740:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2652,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12740:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2653,
															"nodeType": "ArrayTypeName",
															"src": "12740:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2659,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2656,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2644,
																"src": "12773:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2657,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2540,
															"src": "12773:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$2069_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 2655,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "12765:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$2069_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 2658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12765:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12740:44:12"
											},
											{
												"assignments": [
													2664
												],
												"declarations": [
													{
														"constant": false,
														"id": 2664,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12811:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2669,
														"src": "12794:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2662,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12794:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2663,
															"nodeType": "ArrayTypeName",
															"src": "12794:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2665,
												"nodeType": "VariableDeclarationStatement",
												"src": "12794:23:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12880:39:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12894:15:12",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "12904:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12894:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2664,
														"isOffset": false,
														"isSlot": false,
														"src": "12894:6:12",
														"valueSize": 1
													},
													{
														"declaration": 2654,
														"isOffset": false,
														"isSlot": false,
														"src": "12904:5:12",
														"valueSize": 1
													}
												],
												"id": 2666,
												"nodeType": "InlineAssembly",
												"src": "12871:48:12"
											},
											{
												"expression": {
													"id": 2667,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "12936:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2649,
												"id": 2668,
												"nodeType": "Return",
												"src": "12929:13:12"
											}
										]
									},
									"documentation": {
										"id": 2641,
										"nodeType": "StructuredDocumentation",
										"src": "12118:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 2670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12661:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12684:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "12668:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 2643,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2642,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2541,
														"src": "12668:7:12"
													},
													"referencedDeclaration": 2541,
													"src": "12668:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12667:21:12"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "12712:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2646,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12712:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2647,
													"nodeType": "ArrayTypeName",
													"src": "12712:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12711:18:12"
									},
									"scope": 2671,
									"src": "12652:297:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2672,
							"src": "1321:11630:12",
							"usedErrors": []
						}
					],
					"src": "205:12747:12"
				},
				"id": 12
			},
			"contracts/FrenStaking.sol": {
				"ast": {
					"absolutePath": "contracts/FrenStaking.sol",
					"exportedSymbols": {
						"Address": [
							847
						],
						"Context": [
							869
						],
						"EnumerableSet": [
							2671
						],
						"FrenStaking": [
							3261
						],
						"IERC165": [
							881
						],
						"IERC20": [
							352
						],
						"IERC721": [
							468
						],
						"IERC721Enumerable": [
							517
						],
						"IERC721Receiver": [
							486
						],
						"Math": [
							1746
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						],
						"ReentrancyGuard": [
							274
						],
						"SafeMath": [
							2058
						]
					},
					"id": 3262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2674,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 113,
							"src": "57:52:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 2059,
							"src": "110:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 2676,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 518,
							"src": "168:79:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 2677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 487,
							"src": "248:66:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 2678,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 2672,
							"src": "315:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 2679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 275,
							"src": "381:62:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 2680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 1747,
							"src": "444:53:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2681,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 221,
							"src": "498:55:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 353,
							"src": "554:56:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 2683,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3262,
							"sourceUnit": 848,
							"src": "611:51:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2684,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "689:7:13"
									},
									"id": 2685,
									"nodeType": "InheritanceSpecifier",
									"src": "689:7:13"
								},
								{
									"baseName": {
										"id": 2686,
										"name": "IERC721Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "698:15:13"
									},
									"id": 2687,
									"nodeType": "InheritanceSpecifier",
									"src": "698:15:13"
								},
								{
									"baseName": {
										"id": 2688,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 274,
										"src": "715:15:13"
									},
									"id": 2689,
									"nodeType": "InheritanceSpecifier",
									"src": "715:15:13"
								},
								{
									"baseName": {
										"id": 2690,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "732:8:13"
									},
									"id": 2691,
									"nodeType": "InheritanceSpecifier",
									"src": "732:8:13"
								}
							],
							"canonicalName": "FrenStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3261,
							"linearizedBaseContracts": [
								3261,
								220,
								274,
								486,
								112,
								869
							],
							"name": "FrenStaking",
							"nameLocation": "674:11:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2695,
									"libraryName": {
										"id": 2692,
										"name": "EnumerableSet",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2671,
										"src": "753:13:13"
									},
									"nodeType": "UsingForDirective",
									"src": "747:46:13",
									"typeName": {
										"id": 2694,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2693,
											"name": "EnumerableSet.UintSet",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2541,
											"src": "771:21:13"
										},
										"referencedDeclaration": 2541,
										"src": "771:21:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
											"typeString": "struct EnumerableSet.UintSet"
										}
									}
								},
								{
									"constant": false,
									"id": 2698,
									"mutability": "mutable",
									"name": "nullAddress",
									"nameLocation": "829:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "821:64:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2696,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "821:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
										"id": 2697,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "843:42:13",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x0000000000000000000000000000000000000000"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0222a2c4",
									"id": 2700,
									"mutability": "mutable",
									"name": "stakingDestinationAddress",
									"nameLocation": "906:25:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "891:40:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2699,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "891:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "276184ae",
									"id": 2702,
									"mutability": "mutable",
									"name": "erc20Address",
									"nameLocation": "952:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "937:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2701,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "937:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4665096d",
									"id": 2704,
									"mutability": "mutable",
									"name": "expiration",
									"nameLocation": "986:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "971:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2703,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "971:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c4e722e",
									"id": 2706,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "1070:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "1055:19:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2705,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1055:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "74478bb3",
									"id": 2708,
									"mutability": "mutable",
									"name": "isClaimable",
									"nameLocation": "1094:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "1082:23:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2707,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1082:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2713,
									"mutability": "mutable",
									"name": "_deposits",
									"nameLocation": "1181:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "1131:59:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
										"typeString": "mapping(address => struct EnumerableSet.UintSet)"
									},
									"typeName": {
										"id": 2712,
										"keyType": {
											"id": 2709,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1139:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1131:41:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
											"typeString": "mapping(address => struct EnumerableSet.UintSet)"
										},
										"valueType": {
											"id": 2711,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2710,
												"name": "EnumerableSet.UintSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2541,
												"src": "1150:21:13"
											},
											"referencedDeclaration": 2541,
											"src": "1150:21:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
												"typeString": "struct EnumerableSet.UintSet"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b343ae14",
									"id": 2719,
									"mutability": "mutable",
									"name": "_depositBlocks",
									"nameLocation": "1251:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "1196:69:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 2718,
										"keyType": {
											"id": 2714,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1204:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1196:47:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 2717,
											"keyType": {
												"id": 2715,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1223:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1215:27:13",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 2716,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1234:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "deec7eff",
									"id": 2723,
									"mutability": "mutable",
									"name": "accumulatedTokens",
									"nameLocation": "1306:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 3261,
									"src": "1271:52:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2722,
										"keyType": {
											"id": 2720,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1279:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1271:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 2721,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1290:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2760,
										"nodeType": "Block",
										"src": "1437:227:13",
										"statements": [
											{
												"expression": {
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2734,
														"name": "stakingDestinationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2700,
														"src": "1447:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2735,
														"name": "_stakingDestinationAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2725,
														"src": "1475:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1447:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2737,
												"nodeType": "ExpressionStatement",
												"src": "1447:54:13"
											},
											{
												"expression": {
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2738,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "1511:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2739,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "1518:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1511:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2741,
												"nodeType": "ExpressionStatement",
												"src": "1511:12:13"
											},
											{
												"expression": {
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2742,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "1533:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2743,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1546:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "1546:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2745,
															"name": "_expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2729,
															"src": "1561:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1546:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1533:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2748,
												"nodeType": "ExpressionStatement",
												"src": "1533:39:13"
											},
											{
												"expression": {
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2749,
														"name": "erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2702,
														"src": "1582:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2750,
														"name": "_erc20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2731,
														"src": "1597:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1582:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2752,
												"nodeType": "ExpressionStatement",
												"src": "1582:28:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2753,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1620:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2755,
												"nodeType": "ExpressionStatement",
												"src": "1620:8:13"
											},
											{
												"expression": {
													"id": 2758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2756,
														"name": "isClaimable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "1638:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2757,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1652:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1638:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2759,
												"nodeType": "ExpressionStatement",
												"src": "1638:19:13"
											}
										]
									},
									"id": 2761,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "_stakingDestinationAddress",
												"nameLocation": "1350:26:13",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1342:34:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "1386:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1378:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "_expiration",
												"nameLocation": "1401:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1393:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1393:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "_erc20Address",
												"nameLocation": "1422:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 2761,
												"src": "1414:21:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1414:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:95:13"
									},
									"returnParameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:13"
									},
									"scope": 3261,
									"src": "1330:334:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "1704:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2766,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1714:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2768,
												"nodeType": "ExpressionStatement",
												"src": "1714:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2764,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2763,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1694:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1694:9:13"
										}
									],
									"name": "pause",
									"nameLocation": "1679:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1684:2:13"
									},
									"returnParameters": {
										"id": 2765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1704:0:13"
									},
									"scope": 3261,
									"src": "1670:59:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2778,
										"nodeType": "Block",
										"src": "1771:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2775,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1781:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1781:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2777,
												"nodeType": "ExpressionStatement",
												"src": "1781:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2779,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2773,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2772,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1761:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:13"
										}
									],
									"name": "unpause",
									"nameLocation": "1744:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1751:2:13"
									},
									"returnParameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:13"
									},
									"scope": 3261,
									"src": "1735:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2790,
										"nodeType": "Block",
										"src": "2044:27:13",
										"statements": [
											{
												"expression": {
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2786,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2706,
														"src": "2052:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2787,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2781,
														"src": "2059:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2052:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2789,
												"nodeType": "ExpressionStatement",
												"src": "2052:12:13"
											}
										]
									},
									"functionSelector": "34fcf437",
									"id": 2791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2784,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2783,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2032:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2032:11:13"
										}
									],
									"name": "setRate",
									"nameLocation": "2002:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "2018:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2791,
												"src": "2010:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2010:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2009:15:13"
									},
									"returnParameters": {
										"id": 2785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:0:13"
									},
									"scope": 3261,
									"src": "1993:78:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2805,
										"nodeType": "Block",
										"src": "2242:54:13",
										"statements": [
											{
												"expression": {
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2798,
														"name": "expiration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2704,
														"src": "2250:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2799,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2263:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "2263:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2801,
															"name": "_expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2793,
															"src": "2278:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2263:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2250:39:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2804,
												"nodeType": "ExpressionStatement",
												"src": "2250:39:13"
											}
										]
									},
									"functionSelector": "515a20ba",
									"id": 2806,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2796,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2795,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2230:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2230:11:13"
										}
									],
									"name": "setExpiration",
									"nameLocation": "2188:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2793,
												"mutability": "mutable",
												"name": "_expiration",
												"nameLocation": "2210:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2806,
												"src": "2202:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:21:13"
									},
									"returnParameters": {
										"id": 2797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2242:0:13"
									},
									"scope": 3261,
									"src": "2179:117:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2860,
										"nodeType": "Block",
										"src": "2407:274:13",
										"statements": [
											{
												"assignments": [
													2818
												],
												"declarations": [
													{
														"constant": false,
														"id": 2818,
														"mutability": "mutable",
														"name": "depositSet",
														"nameLocation": "2445:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 2860,
														"src": "2415:40:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
															"typeString": "struct EnumerableSet.UintSet"
														},
														"typeName": {
															"id": 2817,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2816,
																"name": "EnumerableSet.UintSet",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2541,
																"src": "2415:21:13"
															},
															"referencedDeclaration": 2541,
															"src": "2415:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																"typeString": "struct EnumerableSet.UintSet"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2822,
												"initialValue": {
													"baseExpression": {
														"id": 2819,
														"name": "_deposits",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2713,
														"src": "2458:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
															"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
														}
													},
													"id": 2821,
													"indexExpression": {
														"id": 2820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2808,
														"src": "2468:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2458:18:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$2541_storage",
														"typeString": "struct EnumerableSet.UintSet storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2415:61:13"
											},
											{
												"assignments": [
													2827
												],
												"declarations": [
													{
														"constant": false,
														"id": 2827,
														"mutability": "mutable",
														"name": "tokenIds",
														"nameLocation": "2501:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2860,
														"src": "2484:25:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2825,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2484:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2826,
															"nodeType": "ArrayTypeName",
															"src": "2484:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2835,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 2831,
																	"name": "depositSet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2818,
																	"src": "2527:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																		"typeString": "struct EnumerableSet.UintSet storage pointer"
																	}
																},
																"id": 2832,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2619,
																"src": "2527:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																	"typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2527:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2830,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2512:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2828,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2516:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2829,
															"nodeType": "ArrayTypeName",
															"src": "2516:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 2834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2512:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2484:63:13"
											},
											{
												"body": {
													"id": 2856,
													"nodeType": "Block",
													"src": "2602:49:13",
													"statements": [
														{
															"expression": {
																"id": 2854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2847,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2827,
																		"src": "2612:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2849,
																	"indexExpression": {
																		"id": 2848,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2837,
																		"src": "2621:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2612:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2852,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2837,
																			"src": "2640:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2850,
																			"name": "depositSet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2818,
																			"src": "2626:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																				"typeString": "struct EnumerableSet.UintSet storage pointer"
																			}
																		},
																		"id": 2851,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "at",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2640,
																		"src": "2626:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																			"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2626:16:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2612:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2855,
															"nodeType": "ExpressionStatement",
															"src": "2612:30:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2839,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2837,
														"src": "2572:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2840,
																"name": "depositSet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2818,
																"src": "2576:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$2541_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 2841,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2619,
															"src": "2576:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																"typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
															}
														},
														"id": 2842,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2576:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2572:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2857,
												"initializationExpression": {
													"assignments": [
														2837
													],
													"declarations": [
														{
															"constant": false,
															"id": 2837,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2569:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2857,
															"src": "2561:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2836,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2561:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2838,
													"nodeType": "VariableDeclarationStatement",
													"src": "2561:9:13"
												},
												"loopExpression": {
													"expression": {
														"id": 2845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2597:3:13",
														"subExpression": {
															"id": 2844,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2837,
															"src": "2597:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2846,
													"nodeType": "ExpressionStatement",
													"src": "2597:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2556:95:13"
											},
											{
												"expression": {
													"id": 2858,
													"name": "tokenIds",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2827,
													"src": "2666:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2813,
												"id": 2859,
												"nodeType": "Return",
												"src": "2659:15:13"
											}
										]
									},
									"functionSelector": "e3a9db1a",
									"id": 2861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositsOf",
									"nameLocation": "2338:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "2349:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:17:13"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2861,
												"src": "2389:16:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2810,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2389:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2811,
													"nodeType": "ArrayTypeName",
													"src": "2389:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2388:18:13"
									},
									"scope": 3261,
									"src": "2329:352:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2932,
										"nodeType": "Block",
										"src": "2804:342:13",
										"statements": [
											{
												"expression": {
													"id": 2879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2872,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2870,
														"src": "2814:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2876,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "2838:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2838:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2824:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2873,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2828:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2874,
																"nodeType": "ArrayTypeName",
																"src": "2828:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2824:30:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "2814:40:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2880,
												"nodeType": "ExpressionStatement",
												"src": "2814:40:13"
											},
											{
												"body": {
													"id": 2928,
													"nodeType": "Block",
													"src": "2907:208:13",
													"statements": [
														{
															"assignments": [
																2892
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2892,
																	"mutability": "mutable",
																	"name": "tokenId",
																	"nameLocation": "2929:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2928,
																	"src": "2921:15:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2891,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2921:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2896,
															"initialValue": {
																"baseExpression": {
																	"id": 2893,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2866,
																	"src": "2939:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2895,
																"indexExpression": {
																	"id": 2894,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2882,
																	"src": "2948:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2939:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2921:29:13"
														},
														{
															"expression": {
																"id": 2926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2897,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2870,
																		"src": "2964:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2899,
																	"indexExpression": {
																		"id": 2898,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2882,
																		"src": "2972:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2964:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2900,
																			"name": "rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "2977:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"components": [
																				{
																					"condition": {
																						"arguments": [
																							{
																								"id": 2905,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2892,
																								"src": "3013:7:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 2901,
																									"name": "_deposits",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2713,
																									"src": "2985:9:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
																										"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
																									}
																								},
																								"id": 2903,
																								"indexExpression": {
																									"id": 2902,
																									"name": "account",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2863,
																									"src": "2995:7:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "2985:18:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UintSet_$2541_storage",
																									"typeString": "struct EnumerableSet.UintSet storage ref"
																								}
																							},
																							"id": 2904,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "contains",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2604,
																							"src": "2985:27:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																								"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"
																							}
																						},
																						"id": 2906,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2985:36:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseExpression": {
																						"hexValue": "30",
																						"id": 2908,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3028:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"id": 2909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "Conditional",
																					"src": "2985:44:13",
																					"trueExpression": {
																						"hexValue": "31",
																						"id": 2907,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3024:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 2910,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "2984:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "2977:53:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 2914,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "3043:5:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 2915,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "number",
																							"nodeType": "MemberAccess",
																							"src": "3043:12:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 2916,
																							"name": "expiration",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2704,
																							"src": "3057:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 2912,
																							"name": "Math",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1746,
																							"src": "3034:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Math_$1746_$",
																								"typeString": "type(library Math)"
																							}
																						},
																						"id": 2913,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "min",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 924,
																						"src": "3034:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3034:34:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"baseExpression": {
																							"id": 2918,
																							"name": "_depositBlocks",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2719,
																							"src": "3071:14:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																								"typeString": "mapping(address => mapping(uint256 => uint256))"
																							}
																						},
																						"id": 2920,
																						"indexExpression": {
																							"id": 2919,
																							"name": "account",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2863,
																							"src": "3086:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3071:23:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																							"typeString": "mapping(uint256 => uint256)"
																						}
																					},
																					"id": 2922,
																					"indexExpression": {
																						"id": 2921,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2892,
																						"src": "3095:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3071:32:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3034:69:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2924,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3033:71:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2977:127:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2964:140:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2927,
															"nodeType": "ExpressionStatement",
															"src": "2964:140:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2884,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2882,
														"src": "2881:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2885,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "2885:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2885:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2881:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2929,
												"initializationExpression": {
													"assignments": [
														2882
													],
													"declarations": [
														{
															"constant": false,
															"id": 2882,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2878:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2929,
															"src": "2870:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2881,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2870:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2883,
													"nodeType": "VariableDeclarationStatement",
													"src": "2870:9:13"
												},
												"loopExpression": {
													"expression": {
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2902:3:13",
														"subExpression": {
															"id": 2888,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2882,
															"src": "2902:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2890,
													"nodeType": "ExpressionStatement",
													"src": "2902:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2865:250:13"
											},
											{
												"expression": {
													"id": 2930,
													"name": "rewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2870,
													"src": "3132:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2931,
												"nodeType": "Return",
												"src": "3125:14:13"
											}
										]
									},
									"functionSelector": "068c526f",
									"id": 2933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "2696:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2721:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "2713:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "2747:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "2730:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2864,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2730:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2865,
													"nodeType": "ArrayTypeName",
													"src": "2730:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:44:13"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "2795:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2933,
												"src": "2778:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2868,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2778:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2869,
													"nodeType": "ArrayTypeName",
													"src": "2778:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2777:26:13"
									},
									"scope": 3261,
									"src": "2687:459:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2985,
										"nodeType": "Block",
										"src": "3241:257:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2945,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "3268:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "3268:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2947,
																		"name": "expiration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2704,
																		"src": "3282:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2943,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1746,
																		"src": "3259:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1746_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 2944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 924,
																	"src": "3259:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3259:34:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2949,
																		"name": "_depositBlocks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2719,
																		"src": "3296:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2951,
																	"indexExpression": {
																		"id": 2950,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2935,
																		"src": "3311:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3296:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2953,
																"indexExpression": {
																	"id": 2952,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2937,
																	"src": "3320:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3296:32:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3259:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420626c6f636b73",
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3330:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ecb5ff9c37c5415ef4092716733c93f4c75ec083165e466c8cebaba6929837f3",
																"typeString": "literal_string \"Invalid blocks\""
															},
															"value": "Invalid blocks"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ecb5ff9c37c5415ef4092716733c93f4c75ec083165e466c8cebaba6929837f3",
																"typeString": "literal_string \"Invalid blocks\""
															}
														],
														"id": 2942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3251:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3251:96:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2957,
												"nodeType": "ExpressionStatement",
												"src": "3251:96:13"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2958,
															"name": "rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2706,
															"src": "3364:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"condition": {
																		"arguments": [
																			{
																				"id": 2963,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2937,
																				"src": "3400:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 2959,
																					"name": "_deposits",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2713,
																					"src": "3372:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
																						"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
																					}
																				},
																				"id": 2961,
																				"indexExpression": {
																					"id": 2960,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2935,
																					"src": "3382:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3372:18:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UintSet_$2541_storage",
																					"typeString": "struct EnumerableSet.UintSet storage ref"
																				}
																			},
																			"id": 2962,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "contains",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2604,
																			"src": "3372:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																				"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"
																			}
																		},
																		"id": 2964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3372:36:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3415:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 2967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "3372:44:13",
																	"trueExpression": {
																		"hexValue": "31",
																		"id": 2965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3411:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"id": 2968,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3371:46:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "3364:53:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2972,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3430:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "3430:12:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2974,
																			"name": "expiration",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2704,
																			"src": "3444:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2970,
																			"name": "Math",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1746,
																			"src": "3421:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Math_$1746_$",
																				"typeString": "type(library Math)"
																			}
																		},
																		"id": 2971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "min",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 924,
																		"src": "3421:8:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3421:34:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 2976,
																			"name": "_depositBlocks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "3458:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2978,
																		"indexExpression": {
																			"id": 2977,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2935,
																			"src": "3473:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3458:23:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2980,
																	"indexExpression": {
																		"id": 2979,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2937,
																		"src": "3482:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3458:32:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3421:69:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2982,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3420:71:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3364:127:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2941,
												"id": 2984,
												"nodeType": "Return",
												"src": "3357:134:13"
											}
										]
									},
									"functionSelector": "1852e8d9",
									"id": 2986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3161:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3185:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3177:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2937,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3202:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3194:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:34:13"
									},
									"returnParameters": {
										"id": 2941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2986,
												"src": "3232:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3232:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3231:9:13"
									},
									"scope": 3261,
									"src": "3152:346:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "3576:425:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2995,
																"name": "isClaimable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2708,
																"src": "3594:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3609:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "3594:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2994,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3586:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2999,
												"nodeType": "ExpressionStatement",
												"src": "3586:28:13"
											},
											{
												"assignments": [
													3001
												],
												"declarations": [
													{
														"constant": false,
														"id": 3001,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3632:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "3624:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3624:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3002,
												"nodeType": "VariableDeclarationStatement",
												"src": "3624:14:13"
											},
											{
												"assignments": [
													3004
												],
												"declarations": [
													{
														"constant": false,
														"id": 3004,
														"mutability": "mutable",
														"name": "blockCur",
														"nameLocation": "3657:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "3649:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3003,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3649:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3011,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3007,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3677:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "3677:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3009,
															"name": "expiration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2704,
															"src": "3691:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3005,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "3668:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$1746_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 3006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 924,
														"src": "3668:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3668:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3649:53:13"
											},
											{
												"body": {
													"id": 3043,
													"nodeType": "Block",
													"src": "3755:139:13",
													"statements": [
														{
															"expression": {
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3022,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3001,
																	"src": "3769:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3024,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3795:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3795:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 3026,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2989,
																				"src": "3807:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 3028,
																			"indexExpression": {
																				"id": 3027,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3013,
																				"src": "3816:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3807:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3023,
																		"name": "calculateReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "3779:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3779:40:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3769:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3031,
															"nodeType": "ExpressionStatement",
															"src": "3769:50:13"
														},
														{
															"expression": {
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3032,
																			"name": "_depositBlocks",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2719,
																			"src": "3833:14:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 3038,
																		"indexExpression": {
																			"expression": {
																				"id": 3033,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3848:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3848:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3833:26:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 3039,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3035,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2989,
																			"src": "3860:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3037,
																		"indexExpression": {
																			"id": 3036,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3013,
																			"src": "3869:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3860:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3833:39:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3040,
																	"name": "blockCur",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3004,
																	"src": "3875:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3833:50:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3042,
															"nodeType": "ExpressionStatement",
															"src": "3833:50:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3015,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "3729:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3016,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2989,
															"src": "3733:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 3017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3733:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3729:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3044,
												"initializationExpression": {
													"assignments": [
														3013
													],
													"declarations": [
														{
															"constant": false,
															"id": 3013,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3726:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3044,
															"src": "3718:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3012,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3718:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3014,
													"nodeType": "VariableDeclarationStatement",
													"src": "3718:9:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3750:3:13",
														"subExpression": {
															"id": 3019,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "3750:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3021,
													"nodeType": "ExpressionStatement",
													"src": "3750:3:13"
												},
												"nodeType": "ForStatement",
												"src": "3713:181:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3045,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3001,
														"src": "3908:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3917:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3908:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3058,
												"nodeType": "IfStatement",
												"src": "3904:90:13",
												"trueBody": {
													"id": 3057,
													"nodeType": "Block",
													"src": "3920:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3052,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3964:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3964:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3054,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3001,
																		"src": "3976:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3049,
																				"name": "erc20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2702,
																				"src": "3941:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3048,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 352,
																			"src": "3934:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$352_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 3050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3934:20:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$352",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "3934:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3934:49:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3056,
															"nodeType": "ExpressionStatement",
															"src": "3934:49:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "5eac6239",
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2991,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3562:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3562:13:13"
										}
									],
									"name": "claimRewards",
									"nameLocation": "3513:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "3545:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "3526:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2987,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3526:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2988,
													"nodeType": "ArrayTypeName",
													"src": "3526:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:29:13"
									},
									"returnParameters": {
										"id": 2993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:13"
									},
									"scope": 3261,
									"src": "3504:497:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3127,
										"nodeType": "Block",
										"src": "4076:391:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3069,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4094:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4094:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 3071,
																"name": "stakingDestinationAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2700,
																"src": "4108:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4094:39:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 3073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4135:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 3068,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4086:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4086:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3075,
												"nodeType": "ExpressionStatement",
												"src": "4086:67:13"
											},
											{
												"body": {
													"id": 3125,
													"nodeType": "Block",
													"src": "4205:256:13",
													"statements": [
														{
															"expression": {
																"id": 3097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3086,
																		"name": "accumulatedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2723,
																		"src": "4219:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3089,
																	"indexExpression": {
																		"expression": {
																			"id": 3087,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4237:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4237:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4219:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3091,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4268:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4268:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 3093,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3063,
																				"src": "4280:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 3095,
																			"indexExpression": {
																				"id": 3094,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3077,
																				"src": "4289:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4280:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3090,
																		"name": "calculateReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "4252:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 3096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4252:40:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4219:73:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3098,
															"nodeType": "ExpressionStatement",
															"src": "4219:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3103,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4358:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4358:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3107,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4377:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FrenStaking_$3261",
																					"typeString": "contract FrenStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FrenStaking_$3261",
																					"typeString": "contract FrenStaking"
																				}
																			],
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4369:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3105,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4369:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4369:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3109,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3063,
																			"src": "4383:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3111,
																		"indexExpression": {
																			"id": 3110,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "4392:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4383:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4395:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3100,
																				"name": "stakingDestinationAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2700,
																				"src": "4314:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3099,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "4306:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$468_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4306:34:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$468",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "4306:51:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4306:92:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3114,
															"nodeType": "ExpressionStatement",
															"src": "4306:92:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3120,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3063,
																			"src": "4438:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3122,
																		"indexExpression": {
																			"id": 3121,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3077,
																			"src": "4447:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4438:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3115,
																			"name": "_deposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "4412:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
																				"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
																			}
																		},
																		"id": 3118,
																		"indexExpression": {
																			"expression": {
																				"id": 3116,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4422:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4422:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4412:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2541_storage",
																			"typeString": "struct EnumerableSet.UintSet storage ref"
																		}
																	},
																	"id": 3119,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2562,
																	"src": "4412:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
																	}
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4412:38:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3124,
															"nodeType": "ExpressionStatement",
															"src": "4412:38:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3079,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3077,
														"src": "4179:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3080,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "4183:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 3081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4183:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4179:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3126,
												"initializationExpression": {
													"assignments": [
														3077
													],
													"declarations": [
														{
															"constant": false,
															"id": 3077,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4176:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3126,
															"src": "4168:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3076,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4168:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3078,
													"nodeType": "VariableDeclarationStatement",
													"src": "4168:9:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4200:3:13",
														"subExpression": {
															"id": 3083,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3077,
															"src": "4200:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3085,
													"nodeType": "ExpressionStatement",
													"src": "4200:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4163:298:13"
											}
										]
									},
									"functionSelector": "598b8e71",
									"id": 3128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3066,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3065,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4062:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4062:13:13"
										}
									],
									"name": "deposit",
									"nameLocation": "4016:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "4043:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3128,
												"src": "4024:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3061,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4024:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3062,
													"nodeType": "ArrayTypeName",
													"src": "4024:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:13"
									},
									"returnParameters": {
										"id": 3067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4076:0:13"
									},
									"scope": 3261,
									"src": "4007:460:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3202,
										"nodeType": "Block",
										"src": "4558:416:13",
										"statements": [
											{
												"body": {
													"id": 3200,
													"nodeType": "Block",
													"src": "4610:358:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 3154,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3131,
																					"src": "4664:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 3156,
																				"indexExpression": {
																					"id": 3155,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3139,
																					"src": "4673:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4664:11:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 3149,
																					"name": "_deposits",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2713,
																					"src": "4633:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
																						"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
																					}
																				},
																				"id": 3152,
																				"indexExpression": {
																					"expression": {
																						"id": 3150,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4643:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 3151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4643:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4633:21:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UintSet_$2541_storage",
																					"typeString": "struct EnumerableSet.UintSet storage ref"
																				}
																			},
																			"id": 3153,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "contains",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2604,
																			"src": "4633:30:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																				"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (bool)"
																			}
																		},
																		"id": 3157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4633:43:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5374616b696e673a20746f6b656e206e6f74206465706f7369746564",
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4677:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b0c0d8dc2cc595a878b228cd7f620f947248bac0bb713fcd18b5d435f7b402e7",
																			"typeString": "literal_string \"Staking: token not deposited\""
																		},
																		"value": "Staking: token not deposited"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b0c0d8dc2cc595a878b228cd7f620f947248bac0bb713fcd18b5d435f7b402e7",
																			"typeString": "literal_string \"Staking: token not deposited\""
																		}
																	],
																	"id": 3148,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4624:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 3159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4624:84:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3160,
															"nodeType": "ExpressionStatement",
															"src": "4624:84:13"
														},
														{
															"expression": {
																"id": 3172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3161,
																		"name": "accumulatedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2723,
																		"src": "4722:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 3164,
																	"indexExpression": {
																		"expression": {
																			"id": 3162,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4740:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4740:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4722:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 3166,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4771:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4771:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 3168,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3131,
																				"src": "4783:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 3170,
																			"indexExpression": {
																				"id": 3169,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3139,
																				"src": "4792:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4783:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3165,
																		"name": "calculateReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "4755:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 3171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4755:40:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4722:73:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3173,
															"nodeType": "ExpressionStatement",
															"src": "4722:73:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3179,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3131,
																			"src": "4838:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3181,
																		"indexExpression": {
																			"id": 3180,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "4847:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4838:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 3174,
																			"name": "_deposits",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2713,
																			"src": "4809:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$2541_storage_$",
																				"typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
																			}
																		},
																		"id": 3177,
																		"indexExpression": {
																			"expression": {
																				"id": 3175,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4819:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4819:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4809:21:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$2541_storage",
																			"typeString": "struct EnumerableSet.UintSet storage ref"
																		}
																	},
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "remove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2583,
																	"src": "4809:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$2541_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2541_storage_ptr_$",
																		"typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
																	}
																},
																"id": 3182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4809:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3183,
															"nodeType": "ExpressionStatement",
															"src": "4809:41:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3190,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4924:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FrenStaking_$3261",
																					"typeString": "contract FrenStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FrenStaking_$3261",
																					"typeString": "contract FrenStaking"
																				}
																			],
																			"id": 3189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4916:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3188,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4916:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4916:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 3192,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4931:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4931:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3194,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3131,
																			"src": "4942:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 3196,
																		"indexExpression": {
																			"id": 3195,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3139,
																			"src": "4951:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4942:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 3197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4954:2:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3185,
																				"name": "stakingDestinationAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2700,
																				"src": "4872:25:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3184,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "4864:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$468_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 3186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4864:34:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$468",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "4864:51:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 3198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4864:93:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3199,
															"nodeType": "ExpressionStatement",
															"src": "4864:93:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3141,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "4584:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3142,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3131,
															"src": "4588:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 3143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4588:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4584:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3201,
												"initializationExpression": {
													"assignments": [
														3139
													],
													"declarations": [
														{
															"constant": false,
															"id": 3139,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4581:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 3201,
															"src": "4573:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3138,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4573:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3140,
													"nodeType": "VariableDeclarationStatement",
													"src": "4573:9:13"
												},
												"loopExpression": {
													"expression": {
														"id": 3146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4605:3:13",
														"subExpression": {
															"id": 3145,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3139,
															"src": "4605:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3147,
													"nodeType": "ExpressionStatement",
													"src": "4605:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4568:400:13"
											}
										]
									},
									"functionSelector": "983d95ce",
									"id": 3203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3133,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4529:13:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4529:13:13"
										},
										{
											"arguments": [],
											"id": 3136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3135,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "4543:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4543:14:13"
										}
									],
									"name": "withdraw",
									"nameLocation": "4482:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "4510:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3203,
												"src": "4491:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3129,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4491:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3130,
													"nodeType": "ArrayTypeName",
													"src": "4491:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:29:13"
									},
									"returnParameters": {
										"id": 3137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4558:0:13"
									},
									"scope": 3261,
									"src": "4473:501:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "5025:148:13",
										"statements": [
											{
												"assignments": [
													3209
												],
												"declarations": [
													{
														"constant": false,
														"id": 3209,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nameLocation": "5043:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "5035:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5035:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3219,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3216,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5096:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FrenStaking_$3261",
																		"typeString": "contract FrenStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FrenStaking_$3261",
																		"typeString": "contract FrenStaking"
																	}
																],
																"id": 3215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5088:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3214,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5088:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3211,
																	"name": "erc20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2702,
																	"src": "5064:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3210,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "5057:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$352_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5057:20:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$352",
																"typeString": "contract IERC20"
															}
														},
														"id": 3213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 309,
														"src": "5057:30:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:45:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5035:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5142:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5142:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3226,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "5154:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3221,
																	"name": "erc20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2702,
																	"src": "5119:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3220,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "5112:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$352_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5112:20:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$352",
																"typeString": "contract IERC20"
															}
														},
														"id": 3223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "5112:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5112:54:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3228,
												"nodeType": "ExpressionStatement",
												"src": "5112:54:13"
											}
										]
									},
									"functionSelector": "8d8f2adb",
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3206,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3205,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5015:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5015:9:13"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "4989:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5003:2:13"
									},
									"returnParameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5025:0:13"
									},
									"scope": 3261,
									"src": "4980:193:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3240,
										"nodeType": "Block",
										"src": "5225:43:13",
										"statements": [
											{
												"expression": {
													"id": 3238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3235,
														"name": "isClaimable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2708,
														"src": "5235:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5249:12:13",
														"subExpression": {
															"id": 3236,
															"name": "isClaimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2708,
															"src": "5250:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5235:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3239,
												"nodeType": "ExpressionStatement",
												"src": "5235:26:13"
											}
										]
									},
									"functionSelector": "ca1c2019",
									"id": 3241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3233,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3232,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "5215:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5215:9:13"
										}
									],
									"name": "flipIsClaimable",
									"nameLocation": "5188:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5203:2:13"
									},
									"returnParameters": {
										"id": 3234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5225:0:13"
									},
									"scope": 3261,
									"src": "5179:89:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										485
									],
									"body": {
										"id": 3259,
										"nodeType": "Block",
										"src": "5380:65:13",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 3255,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "5397:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$486_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 3256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 485,
														"src": "5397:32:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 3257,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5397:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 3254,
												"id": 3258,
												"nodeType": "Return",
												"src": "5390:48:13"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 3260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "5283:16:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3251,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5354:8:13"
									},
									"parameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "5300:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5300:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "5308:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5308:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "5316:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "5324:14:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5324:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:40:13"
									},
									"returnParameters": {
										"id": 3254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3260,
												"src": "5372:6:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3252,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5372:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5371:8:13"
									},
									"scope": 3261,
									"src": "5274:171:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3262,
							"src": "665:4787:13",
							"usedErrors": []
						}
					],
					"src": "32:5420:13"
				},
				"id": 13
			}
		}
	}
}