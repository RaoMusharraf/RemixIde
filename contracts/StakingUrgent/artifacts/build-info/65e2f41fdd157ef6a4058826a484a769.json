{
	"id": "65e2f41fdd157ef6a4058826a484a769",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingUrgent/2stContract.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2023-02-24\n*/\n\n// SPDX-License-Identifier: MIT\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\n\npragma solidity ^0.8.0;\n/**    \n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n    function safeApprove(address spender, uint256 amount) external returns (bool) ;\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n\n// File: staking.sol\npragma solidity ^0.8.0;\n \ncontract Staking is Ownable {\n    using SafeMath for uint256;\n    uint256 public totalStake;\n    uint256 public totalRewards;\n    uint public oldTimeStamp;\n \n    enum StakingPeriod{ ONE_MONTH, TWO_MONTH, THREE_MONTH, SIX_MONTH, ONE_YEAR }\n \n    struct stake {\n        uint256 amount;\n        StakingPeriod stakePeriod;\n        uint timestamp;\n    }\n \n    address[] internal stakeholders;\n    uint256 public tokenAmountInOldInvestorList;\n \n    mapping(address => mapping(StakingPeriod => stake)) public stakes;\n    mapping(StakingPeriod => uint) public apr;\n    mapping(StakingPeriod => uint) public apr_old;\n \n    IERC20 public myToken;\n \n    event TokenStaked(address indexed _from, uint amount, StakingPeriod plan, uint timestamp);\n    event TokenUnstaked(address indexed _from, uint amount, StakingPeriod plan, uint timestamp);\n    event RewardsTransferred(address indexed _to, uint amount, StakingPeriod plan, uint timestamp);\n \n    constructor(address _myToken)\n    { \n        myToken = IERC20(_myToken);\n        apr[StakingPeriod.ONE_MONTH] = 321; //15 days \n        apr[StakingPeriod.TWO_MONTH] = 775; // 30 days\n        apr[StakingPeriod.THREE_MONTH] = 2217; // 90 days \n        apr[StakingPeriod.SIX_MONTH] = 4115; // 120 days\n        apr[StakingPeriod.ONE_YEAR] = 6512; // 365 days\n \n        apr_old[StakingPeriod.ONE_MONTH] = 414; //15 days \n        apr_old[StakingPeriod.TWO_MONTH] = 912; // 30 days\n        apr_old[StakingPeriod.THREE_MONTH] = 4817; // 90 days \n        apr_old[StakingPeriod.SIX_MONTH] = 7213; // 120 days\n        apr_old[StakingPeriod.ONE_YEAR] = 18000; // 365 days\n    }\n \n    // ---------- STAKES ----------\n \n    function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {\n        require(_stake > 0, \"stake value should not be zero\");\n        require(myToken.transferFrom(msg.sender, address(this), _stake), \"Token Transfer Failed\");\n        if(stakes[msg.sender][_stakePeriod].amount == 0) {\n            addStakeholder(msg.sender);\n            stakes[msg.sender][_stakePeriod] = stake(_stake, _stakePeriod, block.timestamp);\n            totalStake = totalStake.add(_stake);\n        } else {\n            stake memory tempStake = stakes[msg.sender][_stakePeriod];\n            tempStake.amount = tempStake.amount.add(_stake);\n            tempStake.timestamp = block.timestamp;\n            stakes[msg.sender][_stakePeriod] = tempStake;\n            totalStake = totalStake.add(_stake);\n        }\n        emit TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp);\n    }\n \n    function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {\n        require(_stake > 0, \"stake value should not be zero\");\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        require(validateStakingPeriod(tempStake), \"Staking period is not expired\");\n        require(_stake <= tempStake.amount, \"Invalid Stake Amount\");\n        uint256 _investorReward = getDailyRewards(_stakePeriod);\n        tempStake.amount = tempStake.amount.sub(_stake);\n        stakes[msg.sender][_stakePeriod] = tempStake;\n        totalStake = totalStake.sub(_stake);\n        totalRewards = totalRewards.add(_investorReward);\n        //uint256 tokensToBeTransfer = _stake.add(_investorReward);\n        if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender);\n        myToken.transfer(msg.sender, _stake);\n        myToken.transferFrom(owner(), msg.sender, _investorReward);\n        emit TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp);\n        emit RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp);\n    }\n\n    function createOldInvestorList(address[] memory _address, uint256[] memory _stake, StakingPeriod[] memory _stakePeriod, uint[] memory _timeStamp) public onlyOwner {\n        for(uint i = 0 ; i < _address.length ; i++) {\n            require(_stake[i] > 0, \"stake value should not be zero\");\n            tokenAmountInOldInvestorList += _stake[i];\n            if(stakes[_address[i]][_stakePeriod[i]].amount == 0) {\n                addStakeholder(_address[i]);\n                stakes[_address[i]][_stakePeriod[i]] = stake(_stake[i], _stakePeriod[i], _timeStamp[i]);\n                totalStake = totalStake.add(_stake[i]);\n            } else {\n                stake memory tempStake = stakes[_address[i]][_stakePeriod[i]];\n                tempStake.amount = tempStake.amount.add(_stake[i]);\n                tempStake.timestamp = _timeStamp[i];\n                stakes[_address[i]][_stakePeriod[i]] = tempStake;\n                totalStake = totalStake.add(_stake[i]);\n            }\n            emit TokenStaked(_address[i], _stake[i], _stakePeriod[i], _timeStamp[i]);\n        }\n    }\n    function addTokenInContract(address _owner) external{\n        require(myToken.transferFrom(_owner, address(this), tokenAmountInOldInvestorList), \"Token Transfer Failed\");\n    }\n \n    function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor, uint _timeStamp) internal view returns (uint256) {\n        if(_timeStamp <= oldTimeStamp){\n            return _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100).div(100);\n        } else {\n            return _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100);\n        }\n    } \n \n    function setOldTimeStamp(uint _timeStamp) public onlyOwner() {\n        oldTimeStamp = _timeStamp;\n    }\n \n    function validateStakingPeriod(stake memory _investor) internal view returns(bool) {\n        uint256 stakingTimeStamp = _investor.timestamp + getStakingPeriodInNumbers(_investor);\n        return block.timestamp >= stakingTimeStamp; \n    } \n \n    function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){\n        return _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0; \n    }\n \n    function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)\n        public\n        view\n        returns(uint256)\n    {\n        return stakes[_stakeholder][_stakePeriod].amount;\n    }\n \n    function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {\n        return stakes[_stakeholder][_stakePeriod].stakePeriod;\n    }\n \n    function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp);\n        uint256 noOfDays = (block.timestamp - tempStake.timestamp).div(60).div(60).div(24);\n        noOfDays = (noOfDays < 1) ? 1 : noOfDays;\n        return total_rewards.div(365).mul(noOfDays);\n    }\n \n    function getRewardsPerDay(StakingPeriod _stakePeriod) public view returns (uint256) {\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp);\n        return total_rewards.div(365);\n    }\n \n    function getExpiredDay(StakingPeriod _stakePeriod) public view returns (uint256) {\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        uint256 expiredDay = tempStake.timestamp + getStakingPeriodInNumbers(tempStake);\n        return expiredDay;\n    }\n \n    // ---------- STAKEHOLDERS ----------\n \n    function isStakeholder(address _address)\n        internal\n        view\n        returns(bool, uint256)\n    {\n        for (uint256 s = 0; s < stakeholders.length; s += 1){\n            if (_address == stakeholders[s]) return (true, s);\n        }\n        return (false, 0);\n    }\n \n \n    function addStakeholder(address _stakeholder)\n        internal\n    {\n        (bool _isStakeholder, ) = isStakeholder(_stakeholder);\n        if(!_isStakeholder) stakeholders.push(_stakeholder);\n    }\n \n \n    function removeStakeholder(address _stakeholder)\n        internal\n    {\n        (bool _isStakeholder, uint256 s) = isStakeholder(_stakeholder);\n        if(_isStakeholder){\n            stakeholders[s] = stakeholders[stakeholders.length - 1];\n            stakeholders.pop();\n        } \n    }\n    // ---------- REWARDS ----------\n \n \n    function getTotalRewards()\n        public\n        view\n        returns(uint256)\n    {\n        return totalRewards;\n    }\n \n    // ---- Staking APY  setters ---- \n \n    function setApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {\n        apr[_stakePeriod] = _percentage;\n    }\n \n    function setOldApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {\n        apr_old[_stakePeriod] = _percentage;\n    }\n \n    function remainingTokens() public view returns (uint256) {\n        return Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this)));\n    }\n \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/StakingUrgent/2stContract.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is only required for intermediate, library-like contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract is only required for intermediate, library-like contracts.",
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeApprove",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeApprove(address,uint256)": "fbc6d1cb",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/2stContract.sol\":13352:25655  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/2stContract.sol\":13352:25655  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f66d74372a81898d976e472a202a13a16cba99a60edb3b0bbcaaedd896a0b6ac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66d74372a81898d976e472a202a13a16cba99a60edb3b0bbcaaedd896a0b6ac64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0x74372A81898D976E472A202A13A1 PUSH13 0xBA99A60EDB3B0BBCAAEDD896A0 0xB6 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13352:12303:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f66d74372a81898d976e472a202a13a16cba99a60edb3b0bbcaaedd896a0b6ac64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 PUSH14 0x74372A81898D976E472A202A13A1 PUSH13 0xBA99A60EDB3B0BBCAAEDD896A0 0xB6 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "13352:12303:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13352,
									"end": 25655,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f66d74372a81898d976e472a202a13a16cba99a60edb3b0bbcaaedd896a0b6ac64736f6c63430008070033",
									".code": [
										{
											"begin": 13352,
											"end": 25655,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13352,
											"end": 25655,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/StakingUrgent/2stContract.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/2stContract.sol\":6772:13072  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/2stContract.sol\":6772:13072  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220916a13cb70d59c0399688f95df7f9b2776b133eb11e009b39b442c07d35e326064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220916a13cb70d59c0399688f95df7f9b2776b133eb11e009b39b442c07d35e326064736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 PUSH11 0x13CB70D59C0399688F95DF PUSH32 0x9B2776B133EB11E009B39B442C07D35E326064736F6C63430008070033000000 ",
							"sourceMap": "6772:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220916a13cb70d59c0399688f95df7f9b2776b133eb11e009b39b442c07d35e326064736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 PUSH11 0x13CB70D59C0399688F95DF PUSH32 0x9B2776B133EB11E009B39B442C07D35E326064736F6C63430008070033000000 ",
							"sourceMap": "6772:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 13072,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220916a13cb70d59c0399688f95df7f9b2776b133eb11e009b39b442c07d35e326064736f6c63430008070033",
									".code": [
										{
											"begin": 6772,
											"end": 13072,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 13072,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_myToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "RewardsTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenUnstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "addTokenInContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apr",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apr_old",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_address",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_stake",
									"type": "uint256[]"
								},
								{
									"internalType": "enum Staking.StakingPeriod[]",
									"name": "_stakePeriod",
									"type": "uint8[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_timeStamp",
									"type": "uint256[]"
								}
							],
							"name": "createOldInvestorList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stake",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "createStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "getDailyRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "getExpiredDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "getRewardsPerDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oldTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "setApyPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_percentage",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "setOldApyPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_timeStamp",
									"type": "uint256"
								}
							],
							"name": "setOldTimeStamp",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeholder",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "stakeOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "stakePeriod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeholder",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "stakingPeriodOf",
							"outputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAmountInOldInvestorList",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stake",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/2stContract.sol\":25704:34676  contract Staking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingUrgent/2stContract.sol\":26641:27306  constructor(address _myToken)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StakingUrgent/2stContract.sol\":1591:1623  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/StakingUrgent/2stContract.sol\":1610:1622  _msgSender() */\n  tag_8\n    /* \"contracts/StakingUrgent/2stContract.sol\":1610:1620  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/StakingUrgent/2stContract.sol\":1610:1622  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/StakingUrgent/2stContract.sol\":1591:1609  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/StakingUrgent/2stContract.sol\":1591:1623  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/StakingUrgent/2stContract.sol\":26703:26711  _myToken */\n  dup1\n    /* \"contracts/StakingUrgent/2stContract.sol\":26686:26693  myToken */\n  0x09\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26686:26712  myToken = IERC20(_myToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26753:26756  321 */\n  0x0141\n    /* \"contracts/StakingUrgent/2stContract.sol\":26722:26725  apr */\n  0x07\n    /* \"contracts/StakingUrgent/2stContract.sol\":26722:26750  apr[StakingPeriod.ONE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26726:26749  StakingPeriod.ONE_MONTH */\n  dup1\n    /* \"contracts/StakingUrgent/2stContract.sol\":26722:26750  apr[StakingPeriod.ONE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_12\n  jumpi\n  tag_13\n  tag_14\n  jump\t// in\ntag_13:\ntag_12:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_14\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":26722:26756  apr[StakingPeriod.ONE_MONTH] = 321 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26808:26811  775 */\n  0x0307\n    /* \"contracts/StakingUrgent/2stContract.sol\":26777:26780  apr */\n  0x07\n    /* \"contracts/StakingUrgent/2stContract.sol\":26777:26805  apr[StakingPeriod.TWO_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26781:26804  StakingPeriod.TWO_MONTH */\n  0x01\n    /* \"contracts/StakingUrgent/2stContract.sol\":26777:26805  apr[StakingPeriod.TWO_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_14\n  jump\t// in\ntag_18:\ntag_17:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_14\n  jump\t// in\ntag_20:\ntag_19:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":26777:26811  apr[StakingPeriod.TWO_MONTH] = 775 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26865:26869  2217 */\n  0x08a9\n    /* \"contracts/StakingUrgent/2stContract.sol\":26832:26835  apr */\n  0x07\n    /* \"contracts/StakingUrgent/2stContract.sol\":26832:26862  apr[StakingPeriod.THREE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26836:26861  StakingPeriod.THREE_MONTH */\n  0x02\n    /* \"contracts/StakingUrgent/2stContract.sol\":26832:26862  apr[StakingPeriod.THREE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_14\n  jump\t// in\ntag_22:\ntag_21:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_14\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":26832:26869  apr[StakingPeriod.THREE_MONTH] = 2217 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26922:26926  4115 */\n  0x1013\n    /* \"contracts/StakingUrgent/2stContract.sol\":26891:26894  apr */\n  0x07\n    /* \"contracts/StakingUrgent/2stContract.sol\":26891:26919  apr[StakingPeriod.SIX_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26895:26918  StakingPeriod.SIX_MONTH */\n  0x03\n    /* \"contracts/StakingUrgent/2stContract.sol\":26891:26919  apr[StakingPeriod.SIX_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_14\n  jump\t// in\ntag_26:\ntag_25:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_14\n  jump\t// in\ntag_28:\ntag_27:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":26891:26926  apr[StakingPeriod.SIX_MONTH] = 4115 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26978:26982  6512 */\n  0x1970\n    /* \"contracts/StakingUrgent/2stContract.sol\":26948:26951  apr */\n  0x07\n    /* \"contracts/StakingUrgent/2stContract.sol\":26948:26975  apr[StakingPeriod.ONE_YEAR] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":26952:26974  StakingPeriod.ONE_YEAR */\n  0x04\n    /* \"contracts/StakingUrgent/2stContract.sol\":26948:26975  apr[StakingPeriod.ONE_YEAR] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_14\n  jump\t// in\ntag_30:\ntag_29:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_14\n  jump\t// in\ntag_32:\ntag_31:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":26948:26982  apr[StakingPeriod.ONE_YEAR] = 6512 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":27041:27044  414 */\n  0x019e\n    /* \"contracts/StakingUrgent/2stContract.sol\":27006:27013  apr_old */\n  0x08\n    /* \"contracts/StakingUrgent/2stContract.sol\":27006:27038  apr_old[StakingPeriod.ONE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":27014:27037  StakingPeriod.ONE_MONTH */\n  dup1\n    /* \"contracts/StakingUrgent/2stContract.sol\":27006:27038  apr_old[StakingPeriod.ONE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_33\n  jumpi\n  tag_34\n  tag_14\n  jump\t// in\ntag_34:\ntag_33:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_35\n  jumpi\n  tag_36\n  tag_14\n  jump\t// in\ntag_36:\ntag_35:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":27006:27044  apr_old[StakingPeriod.ONE_MONTH] = 414 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":27100:27103  912 */\n  0x0390\n    /* \"contracts/StakingUrgent/2stContract.sol\":27065:27072  apr_old */\n  0x08\n    /* \"contracts/StakingUrgent/2stContract.sol\":27065:27097  apr_old[StakingPeriod.TWO_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":27073:27096  StakingPeriod.TWO_MONTH */\n  0x01\n    /* \"contracts/StakingUrgent/2stContract.sol\":27065:27097  apr_old[StakingPeriod.TWO_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  tag_38\n  tag_14\n  jump\t// in\ntag_38:\ntag_37:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_39\n  jumpi\n  tag_40\n  tag_14\n  jump\t// in\ntag_40:\ntag_39:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":27065:27103  apr_old[StakingPeriod.TWO_MONTH] = 912 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":27161:27165  4817 */\n  0x12d1\n    /* \"contracts/StakingUrgent/2stContract.sol\":27124:27131  apr_old */\n  0x08\n    /* \"contracts/StakingUrgent/2stContract.sol\":27124:27158  apr_old[StakingPeriod.THREE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":27132:27157  StakingPeriod.THREE_MONTH */\n  0x02\n    /* \"contracts/StakingUrgent/2stContract.sol\":27124:27158  apr_old[StakingPeriod.THREE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_41\n  jumpi\n  tag_42\n  tag_14\n  jump\t// in\ntag_42:\ntag_41:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_43\n  jumpi\n  tag_44\n  tag_14\n  jump\t// in\ntag_44:\ntag_43:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":27124:27165  apr_old[StakingPeriod.THREE_MONTH] = 4817 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":27222:27226  7213 */\n  0x1c2d\n    /* \"contracts/StakingUrgent/2stContract.sol\":27187:27194  apr_old */\n  0x08\n    /* \"contracts/StakingUrgent/2stContract.sol\":27187:27219  apr_old[StakingPeriod.SIX_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":27195:27218  StakingPeriod.SIX_MONTH */\n  0x03\n    /* \"contracts/StakingUrgent/2stContract.sol\":27187:27219  apr_old[StakingPeriod.SIX_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_45\n  jumpi\n  tag_46\n  tag_14\n  jump\t// in\ntag_46:\ntag_45:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_47\n  jumpi\n  tag_48\n  tag_14\n  jump\t// in\ntag_48:\ntag_47:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":27187:27226  apr_old[StakingPeriod.SIX_MONTH] = 7213 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":27282:27287  18000 */\n  0x4650\n    /* \"contracts/StakingUrgent/2stContract.sol\":27248:27255  apr_old */\n  0x08\n    /* \"contracts/StakingUrgent/2stContract.sol\":27248:27279  apr_old[StakingPeriod.ONE_YEAR] */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":27256:27278  StakingPeriod.ONE_YEAR */\n  0x04\n    /* \"contracts/StakingUrgent/2stContract.sol\":27248:27279  apr_old[StakingPeriod.ONE_YEAR] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_49\n  jumpi\n  tag_50\n  tag_14\n  jump\t// in\ntag_50:\ntag_49:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_51\n  jumpi\n  tag_52\n  tag_14\n  jump\t// in\ntag_52:\ntag_51:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/2stContract.sol\":27248:27287  apr_old[StakingPeriod.ONE_YEAR] = 18000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":26641:27306  constructor(address _myToken)... */\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":25704:34676  contract Staking is Ownable {... */\n  jump(tag_53)\n    /* \"contracts/StakingUrgent/2stContract.sol\":406:502  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/StakingUrgent/2stContract.sol\":459:466  address */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":485:495  msg.sender */\n  caller\n    /* \"contracts/StakingUrgent/2stContract.sol\":478:495  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":406:502  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/StakingUrgent/2stContract.sol\":3088:3275  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/StakingUrgent/2stContract.sol\":3161:3177  address oldOwner */\n  0x00\n    /* \"contracts/StakingUrgent/2stContract.sol\":3180:3186  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StakingUrgent/2stContract.sol\":3161:3186  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":3205:3213  newOwner */\n  dup2\n    /* \"contracts/StakingUrgent/2stContract.sol\":3196:3202  _owner */\n  0x00\n  dup1\n    /* \"contracts/StakingUrgent/2stContract.sol\":3196:3213  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":3259:3267  newOwner */\n  dup2\n    /* \"contracts/StakingUrgent/2stContract.sol\":3228:3268  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StakingUrgent/2stContract.sol\":3249:3257  oldOwner */\n  dup2\n    /* \"contracts/StakingUrgent/2stContract.sol\":3228:3268  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/StakingUrgent/2stContract.sol\":3151:3275  {... */\n  pop\n    /* \"contracts/StakingUrgent/2stContract.sol\":3088:3275  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_57:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_59\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":243:362   */\ntag_62:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_65\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_57\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_68:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_70\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_71:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":828:1008   */\ntag_14:\n    /* \"#utility.yul\":876:953   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":873:874   */\n  0x00\n    /* \"#utility.yul\":866:954   */\n  mstore\n    /* \"#utility.yul\":973:977   */\n  0x21\n    /* \"#utility.yul\":970:971   */\n  0x04\n    /* \"#utility.yul\":963:978   */\n  mstore\n    /* \"#utility.yul\":997:1001   */\n  0x24\n    /* \"#utility.yul\":994:995   */\n  0x00\n    /* \"#utility.yul\":987:1002   */\n  revert\n    /* \"#utility.yul\":1137:1254   */\ntag_64:\n    /* \"#utility.yul\":1246:1247   */\n  0x00\n    /* \"#utility.yul\":1243:1244   */\n  dup1\n    /* \"#utility.yul\":1236:1248   */\n  revert\n    /* \"#utility.yul\":1260:1382   */\ntag_60:\n    /* \"#utility.yul\":1333:1357   */\n  tag_78\n    /* \"#utility.yul\":1351:1356   */\n  dup2\n    /* \"#utility.yul\":1333:1357   */\n  tag_68\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1326:1331   */\n  dup2\n    /* \"#utility.yul\":1323:1358   */\n  eq\n    /* \"#utility.yul\":1313:1376   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1313:1376   */\ntag_79:\n    /* \"#utility.yul\":1260:1382   */\n  pop\n  jump\t// out\n    /* \"contracts/StakingUrgent/2stContract.sol\":25704:34676  contract Staking is Ownable {... */\ntag_53:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/2stContract.sol\":25704:34676  contract Staking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7e61badd\n      gt\n      tag_28\n      jumpi\n      dup1\n      0xad9159fd\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xe580d976\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe580d976\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xe627f2db\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe9917c07\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0xad9159fd\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbf583903\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_29:\n      dup1\n      0x7e61badd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8cfcece7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x980b4229\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x9e196cad\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x2b4afcc3\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x2b4afcc3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2e1e844e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f7d122f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3027ffc0\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x57d54aed\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x063b35bf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x066c6dbb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0ded03cd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x108b96c4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2b28ea29\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingUrgent/2stContract.sol\":31946:32127  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n    tag_3:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":26265:26310  mapping(StakingPeriod => uint) public apr_old */\n    tag_4:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":32134:32588  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_5:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":25801:25828  uint256 public totalRewards */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":26096:26139  uint256 public tokenAmountInOldInvestorList */\n    tag_7:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":30399:30575  function addTokenInContract(address _owner) external{... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29319:30394  function createOldInvestorList(address[] memory _address, uint256[] memory _stake, StakingPeriod[] memory _stakePeriod, uint[] memory _timeStamp) public onlyOwner {... */\n    tag_9:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":34217:34354  function setApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_10:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30963:31066  function setOldTimeStamp(uint _timeStamp) public onlyOwner() {... */\n    tag_11:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":26147:26212  mapping(address => mapping(StakingPeriod => stake)) public stakes */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":32901:33172  function getExpiredDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_13:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":2486:2587  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28234:29313  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":25770:25795  uint256 public totalStake */\n    tag_16:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":34361:34505  function setOldApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_17:\n      tag_87\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n    tag_87:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":1856:1941  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":25834:25858  uint public oldTimeStamp */\n    tag_19:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_96\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":26218:26259  mapping(StakingPeriod => uint) public apr */\n    tag_20:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":31750:31939  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n    tag_21:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":26318:26339  IERC20 public myToken */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":34512:34672  function remainingTokens() public view returns (uint256) {... */\n    tag_23:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":32595:32894  function getRewardsPerDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_24:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":34049:34169  function getTotalRewards()... */\n    tag_25:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/2stContract.sol\":27351:28227  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_26:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":2736:2934  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      stop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31946:32127  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n    tag_35:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32042:32055  StakingPeriod */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32080  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32094  stakes[_stakeholder] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32081:32093  _stakeholder */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32094  stakes[_stakeholder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32108  stakes[_stakeholder][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32095:32107  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32108  stakes[_stakeholder][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n    tag_126:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_129\n      jumpi\n      tag_130\n      tag_128\n      jump\t// in\n    tag_130:\n    tag_129:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32074:32120  stakes[_stakeholder][_stakePeriod].stakePeriod */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":32067:32120  return stakes[_stakeholder][_stakePeriod].stakePeriod */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31946:32127  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":26265:26310  mapping(StakingPeriod => uint) public apr_old */\n    tag_41:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":32134:32588  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_46:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32208:32215  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32227:32249  stake memory tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32252:32258  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":32252:32270  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32259:32269  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":32252:32270  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32252:32284  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32271:32283  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":32252:32284  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_132\n      jumpi\n      tag_133\n      tag_128\n      jump\t// in\n    tag_133:\n    tag_132:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_134\n      jumpi\n      tag_135\n      tag_128\n      jump\t// in\n    tag_135:\n    tag_134:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32227:32284  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_136\n      jumpi\n      tag_137\n      tag_128\n      jump\t// in\n    tag_137:\n    tag_136:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_138\n      jumpi\n      tag_139\n      tag_128\n      jump\t// in\n    tag_139:\n    tag_138:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32294:32315  uint256 total_rewards */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32318:32386  getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      tag_140\n        /* \"contracts/StakingUrgent/2stContract.sol\":32337:32346  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":32337:32353  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":32355:32364  tempStake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":32366:32375  tempStake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":32366:32385  tempStake.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":32318:32336  getInvestorRewards */\n      tag_141\n        /* \"contracts/StakingUrgent/2stContract.sol\":32318:32386  getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32294:32386  uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32396:32412  uint256 noOfDays */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32478  (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      tag_142\n        /* \"contracts/StakingUrgent/2stContract.sol\":32475:32477  24 */\n      0x18\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32470  (block.timestamp - tempStake.timestamp).div(60).div(60) */\n      tag_143\n        /* \"contracts/StakingUrgent/2stContract.sol\":32467:32469  60 */\n      0x3c\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32462  (block.timestamp - tempStake.timestamp).div(60) */\n      tag_144\n        /* \"contracts/StakingUrgent/2stContract.sol\":32459:32461  60 */\n      0x3c\n        /* \"contracts/StakingUrgent/2stContract.sol\":32434:32443  tempStake */\n      dup9\n        /* \"contracts/StakingUrgent/2stContract.sol\":32434:32453  tempStake.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":32416:32431  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":32416:32453  block.timestamp - tempStake.timestamp */\n      tag_145\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32458  (block.timestamp - tempStake.timestamp).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32462  (block.timestamp - tempStake.timestamp).div(60) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32466  (block.timestamp - tempStake.timestamp).div(60).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32470  (block.timestamp - tempStake.timestamp).div(60).div(60) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32474  (block.timestamp - tempStake.timestamp).div(60).div(60).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32415:32478  (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32396:32478  uint256 noOfDays = (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32511:32512  1 */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":32500:32508  noOfDays */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":32500:32512  noOfDays < 1 */\n      lt\n        /* \"contracts/StakingUrgent/2stContract.sol\":32499:32528  (noOfDays < 1) ? 1 : noOfDays */\n      tag_148\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":32520:32528  noOfDays */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32499:32528  (noOfDays < 1) ? 1 : noOfDays */\n      jump(tag_149)\n    tag_148:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32516:32517  1 */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":32499:32528  (noOfDays < 1) ? 1 : noOfDays */\n    tag_149:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32488:32528  noOfDays = (noOfDays < 1) ? 1 : noOfDays */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32581  total_rewards.div(365).mul(noOfDays) */\n      tag_150\n        /* \"contracts/StakingUrgent/2stContract.sol\":32572:32580  noOfDays */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32567  total_rewards.div(365) */\n      tag_151\n        /* \"contracts/StakingUrgent/2stContract.sol\":32563:32566  365 */\n      0x016d\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32558  total_rewards */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32562  total_rewards.div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32567  total_rewards.div(365) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32571  total_rewards.div(365).mul */\n      tag_152\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32545:32581  total_rewards.div(365).mul(noOfDays) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32538:32581  return total_rewards.div(365).mul(noOfDays) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32134:32588  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":25801:25828  uint256 public totalRewards */\n    tag_49:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":26096:26139  uint256 public tokenAmountInOldInvestorList */\n    tag_52:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":30399:30575  function addTokenInContract(address _owner) external{... */\n    tag_57:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30469:30476  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":30469:30489  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUrgent/2stContract.sol\":30490:30496  _owner */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":30506:30510  this */\n      address\n        /* \"contracts/StakingUrgent/2stContract.sol\":30513:30541  tokenAmountInOldInvestorList */\n      sload(0x05)\n        /* \"contracts/StakingUrgent/2stContract.sol\":30469:30542  myToken.transferFrom(_owner, address(this), tokenAmountInOldInvestorList) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30461:30568  require(myToken.transferFrom(_owner, address(this), tokenAmountInOldInvestorList), \"Token Transfer Failed\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30399:30575  function addTokenInContract(address _owner) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":29319:30394  function createOldInvestorList(address[] memory _address, uint256[] memory _stake, StakingPeriod[] memory _stakePeriod, uint[] memory _timeStamp) public onlyOwner {... */\n    tag_61:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_165\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29496:29502  uint i */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29492:30388  for(uint i = 0 ; i < _address.length ; i++) {... */\n    tag_168:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29513:29521  _address */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29513:29528  _address.length */\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29509:29510  i */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":29509:29528  i < _address.length */\n      lt\n        /* \"contracts/StakingUrgent/2stContract.sol\":29492:30388  for(uint i = 0 ; i < _address.length ; i++) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":29570:29571  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29558:29564  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29565:29566  i */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":29558:29567  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n    tag_171:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29558:29571  _stake[i] > 0 */\n      gt\n        /* \"contracts/StakingUrgent/2stContract.sol\":29550:29606  require(_stake[i] > 0, \"stake value should not be zero\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29652:29658  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":29659:29660  i */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":29652:29661  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_177\n      jumpi\n      tag_178\n      tag_173\n      jump\t// in\n    tag_178:\n    tag_177:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29620:29648  tokenAmountInOldInvestorList */\n      0x05\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29620:29661  tokenAmountInOldInvestorList += _stake[i] */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29725:29726  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29684  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29697  stakes[_address[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29685:29693  _address */\n      dup8\n        /* \"contracts/StakingUrgent/2stContract.sol\":29694:29695  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29685:29696  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_182\n      tag_173\n      jump\t// in\n    tag_182:\n    tag_181:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29697  stakes[_address[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29714  stakes[_address[i]][_stakePeriod[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29698:29710  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29711:29712  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29698:29713  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_184\n      tag_173\n      jump\t// in\n    tag_184:\n    tag_183:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29714  stakes[_address[i]][_stakePeriod[i]] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_128\n      jump\t// in\n    tag_186:\n    tag_185:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_128\n      jump\t// in\n    tag_188:\n    tag_187:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29721  stakes[_address[i]][_stakePeriod[i]].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29678:29726  stakes[_address[i]][_stakePeriod[i]].amount == 0 */\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":29675:30292  if(stakes[_address[i]][_stakePeriod[i]].amount == 0) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":29746:29773  addStakeholder(_address[i]) */\n      tag_190\n        /* \"contracts/StakingUrgent/2stContract.sol\":29761:29769  _address */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29770:29771  i */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":29761:29772  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_192\n      tag_173\n      jump\t// in\n    tag_192:\n    tag_191:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29746:29760  addStakeholder */\n      tag_193\n        /* \"contracts/StakingUrgent/2stContract.sol\":29746:29773  addStakeholder(_address[i]) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29830:29878  stake(_stake[i], _stakePeriod[i], _timeStamp[i]) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":29836:29842  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29843:29844  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":29836:29845  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_195\n      tag_173\n      jump\t// in\n    tag_195:\n    tag_194:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29830:29878  stake(_stake[i], _stakePeriod[i], _timeStamp[i]) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":29847:29859  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29860:29861  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":29847:29862  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_196\n      jumpi\n      tag_197\n      tag_173\n      jump\t// in\n    tag_197:\n    tag_196:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29830:29878  stake(_stake[i], _stakePeriod[i], _timeStamp[i]) */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_199\n      tag_128\n      jump\t// in\n    tag_199:\n    tag_198:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":29864:29874  _timeStamp */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":29875:29876  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":29864:29877  _timeStamp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_200\n      jumpi\n      tag_201\n      tag_173\n      jump\t// in\n    tag_201:\n    tag_200:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29830:29878  stake(_stake[i], _stakePeriod[i], _timeStamp[i]) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29797  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29810  stakes[_address[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29798:29806  _address */\n      dup8\n        /* \"contracts/StakingUrgent/2stContract.sol\":29807:29808  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29798:29809  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_203\n      tag_173\n      jump\t// in\n    tag_203:\n    tag_202:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29810  stakes[_address[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29827  stakes[_address[i]][_stakePeriod[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29811:29823  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29824:29825  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29811:29826  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_173\n      jump\t// in\n    tag_205:\n    tag_204:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29827  stakes[_address[i]][_stakePeriod[i]] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_206\n      jumpi\n      tag_207\n      tag_128\n      jump\t// in\n    tag_207:\n    tag_206:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_208\n      jumpi\n      tag_209\n      tag_128\n      jump\t// in\n    tag_209:\n    tag_208:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29791:29878  stakes[_address[i]][_stakePeriod[i]] = stake(_stake[i], _stakePeriod[i], _timeStamp[i]) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_211\n      tag_128\n      jump\t// in\n    tag_211:\n    tag_210:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29909:29934  totalStake.add(_stake[i]) */\n      tag_212\n        /* \"contracts/StakingUrgent/2stContract.sol\":29924:29930  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29931:29932  i */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":29924:29933  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_214\n      tag_173\n      jump\t// in\n    tag_214:\n    tag_213:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29909:29919  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/2stContract.sol\":29909:29923  totalStake.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":29909:29934  totalStake.add(_stake[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29896:29906  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":29896:29934  totalStake = totalStake.add(_stake[i]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29675:30292  if(stakes[_address[i]][_stakePeriod[i]].amount == 0) {... */\n      jump(tag_216)\n    tag_189:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29973:29995  stake memory tempStake */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":29998:30004  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":29998:30017  stakes[_address[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30005:30013  _address */\n      dup8\n        /* \"contracts/StakingUrgent/2stContract.sol\":30014:30015  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":30005:30016  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_217\n      jumpi\n      tag_218\n      tag_173\n      jump\t// in\n    tag_218:\n    tag_217:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29998:30017  stakes[_address[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29998:30034  stakes[_address[i]][_stakePeriod[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30018:30030  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30031:30032  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":30018:30033  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_220\n      tag_173\n      jump\t// in\n    tag_220:\n    tag_219:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":29998:30034  stakes[_address[i]][_stakePeriod[i]] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_128\n      jump\t// in\n    tag_222:\n    tag_221:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_128\n      jump\t// in\n    tag_224:\n    tag_223:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":29973:30034  stake memory tempStake = stakes[_address[i]][_stakePeriod[i]] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_128\n      jump\t// in\n    tag_226:\n    tag_225:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_128\n      jump\t// in\n    tag_228:\n    tag_227:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30071:30102  tempStake.amount.add(_stake[i]) */\n      tag_229\n        /* \"contracts/StakingUrgent/2stContract.sol\":30092:30098  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30099:30100  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":30092:30101  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_230\n      jumpi\n      tag_231\n      tag_173\n      jump\t// in\n    tag_231:\n    tag_230:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30071:30080  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":30071:30087  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30071:30091  tempStake.amount.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30071:30102  tempStake.amount.add(_stake[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_229:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30052:30061  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":30052:30068  tempStake.amount */\n      0x00\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":30052:30102  tempStake.amount = tempStake.amount.add(_stake[i]) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30142:30152  _timeStamp */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":30153:30154  i */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":30142:30155  _timeStamp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_232\n      jumpi\n      tag_233\n      tag_173\n      jump\t// in\n    tag_233:\n    tag_232:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30120:30129  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":30120:30139  tempStake.timestamp */\n      0x40\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":30120:30155  tempStake.timestamp = _timeStamp[i] */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30212:30221  tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30179  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30192  stakes[_address[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30180:30188  _address */\n      dup9\n        /* \"contracts/StakingUrgent/2stContract.sol\":30189:30190  i */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30180:30191  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_235\n      tag_173\n      jump\t// in\n    tag_235:\n    tag_234:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30192  stakes[_address[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30209  stakes[_address[i]][_stakePeriod[i]] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30193:30205  _stakePeriod */\n      dup7\n        /* \"contracts/StakingUrgent/2stContract.sol\":30206:30207  i */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30193:30208  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_237\n      tag_173\n      jump\t// in\n    tag_237:\n    tag_236:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30209  stakes[_address[i]][_stakePeriod[i]] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_239\n      tag_128\n      jump\t// in\n    tag_239:\n    tag_238:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_128\n      jump\t// in\n    tag_241:\n    tag_240:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":30173:30221  stakes[_address[i]][_stakePeriod[i]] = tempStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_243\n      tag_128\n      jump\t// in\n    tag_243:\n    tag_242:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30252:30277  totalStake.add(_stake[i]) */\n      tag_244\n        /* \"contracts/StakingUrgent/2stContract.sol\":30267:30273  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30274:30275  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":30267:30276  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_173\n      jump\t// in\n    tag_246:\n    tag_245:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30252:30262  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/2stContract.sol\":30252:30266  totalStake.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30252:30277  totalStake.add(_stake[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30239:30249  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":30239:30277  totalStake = totalStake.add(_stake[i]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29955:30292  {... */\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29675:30292  if(stakes[_address[i]][_stakePeriod[i]].amount == 0) {... */\n    tag_216:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30322:30330  _address */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":30331:30332  i */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":30322:30333  _address[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_173\n      jump\t// in\n    tag_248:\n    tag_247:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30310:30377  TokenStaked(_address[i], _stake[i], _stakePeriod[i], _timeStamp[i]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c\n        /* \"contracts/StakingUrgent/2stContract.sol\":30335:30341  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30342:30343  i */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":30335:30344  _stake[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_173\n      jump\t// in\n    tag_250:\n    tag_249:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30346:30358  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30359:30360  i */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":30346:30361  _stakePeriod[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_251\n      jumpi\n      tag_252\n      tag_173\n      jump\t// in\n    tag_252:\n    tag_251:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30363:30373  _timeStamp */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30374:30375  i */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":30363:30376  _timeStamp[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_253\n      jumpi\n      tag_254\n      tag_173\n      jump\t// in\n    tag_254:\n    tag_253:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30310:30377  TokenStaked(_address[i], _stake[i], _stakePeriod[i], _timeStamp[i]) */\n      mload(0x40)\n      tag_255\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/2stContract.sol\":29531:29534  i++ */\n      dup1\n      dup1\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      swap2\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29492:30388  for(uint i = 0 ; i < _address.length ; i++) {... */\n      jump(tag_168)\n    tag_169:\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29319:30394  function createOldInvestorList(address[] memory _address, uint256[] memory _stake, StakingPeriod[] memory _stakePeriod, uint[] memory _timeStamp) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":34217:34354  function setApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_65:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_259\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_259:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34336:34347  _percentage */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":34316:34319  apr */\n      0x07\n        /* \"contracts/StakingUrgent/2stContract.sol\":34316:34333  apr[_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":34320:34332  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":34316:34333  apr[_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_262\n      tag_128\n      jump\t// in\n    tag_262:\n    tag_261:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_264\n      tag_128\n      jump\t// in\n    tag_264:\n    tag_263:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":34316:34347  apr[_stakePeriod] = _percentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":34217:34354  function setApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":30963:31066  function setOldTimeStamp(uint _timeStamp) public onlyOwner() {... */\n    tag_69:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_266\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31049:31059  _timeStamp */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":31034:31046  oldTimeStamp */\n      0x03\n        /* \"contracts/StakingUrgent/2stContract.sol\":31034:31059  oldTimeStamp = _timeStamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30963:31066  function setOldTimeStamp(uint _timeStamp) public onlyOwner() {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":26147:26212  mapping(address => mapping(StakingPeriod => stake)) public stakes */\n    tag_72:\n      mstore(0x20, 0x06)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":32901:33172  function getExpiredDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32973:32980  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32992:33014  stake memory tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33017:33023  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":33017:33035  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33024:33034  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":33017:33035  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":33017:33049  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33036:33048  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":33017:33049  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_270\n      tag_128\n      jump\t// in\n    tag_270:\n    tag_269:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_271\n      jumpi\n      tag_272\n      tag_128\n      jump\t// in\n    tag_272:\n    tag_271:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32992:33049  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_273\n      jumpi\n      tag_274\n      tag_128\n      jump\t// in\n    tag_274:\n    tag_273:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_275\n      jumpi\n      tag_276\n      tag_128\n      jump\t// in\n    tag_276:\n    tag_275:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33059:33077  uint256 expiredDay */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33102:33138  getStakingPeriodInNumbers(tempStake) */\n      tag_277\n        /* \"contracts/StakingUrgent/2stContract.sol\":33128:33137  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":33102:33127  getStakingPeriodInNumbers */\n      tag_278\n        /* \"contracts/StakingUrgent/2stContract.sol\":33102:33138  getStakingPeriodInNumbers(tempStake) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33080:33089  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":33080:33099  tempStake.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":33080:33138  tempStake.timestamp + getStakingPeriodInNumbers(tempStake) */\n      tag_279\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_279:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33059:33138  uint256 expiredDay = tempStake.timestamp + getStakingPeriodInNumbers(tempStake) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33155:33165  expiredDay */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33148:33165  return expiredDay */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32901:33172  function getExpiredDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":2486:2587  function renounceOwnership() public virtual onlyOwner {... */\n    tag_80:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_281\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_281:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2550:2580  _transferOwnership(address(0)) */\n      tag_283\n        /* \"contracts/StakingUrgent/2stContract.sol\":2577:2578  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":2550:2568  _transferOwnership */\n      tag_284\n        /* \"contracts/StakingUrgent/2stContract.sol\":2550:2580  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2486:2587  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":28234:29313  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_83:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28329:28330  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28320:28326  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":28320:28330  _stake > 0 */\n      gt\n        /* \"contracts/StakingUrgent/2stContract.sol\":28312:28365  require(_stake > 0, \"stake value should not be zero\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_287\n      swap1\n      tag_176\n      jump\t// in\n    tag_287:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28375:28397  stake memory tempStake */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28400:28406  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":28400:28418  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28407:28417  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28400:28418  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28400:28432  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28419:28431  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28400:28432  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_288\n      jumpi\n      tag_289\n      tag_128\n      jump\t// in\n    tag_289:\n    tag_288:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_290\n      jumpi\n      tag_291\n      tag_128\n      jump\t// in\n    tag_291:\n    tag_290:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28375:28432  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_292\n      jumpi\n      tag_293\n      tag_128\n      jump\t// in\n    tag_293:\n    tag_292:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_294\n      jumpi\n      tag_295\n      tag_128\n      jump\t// in\n    tag_295:\n    tag_294:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28450:28482  validateStakingPeriod(tempStake) */\n      tag_296\n        /* \"contracts/StakingUrgent/2stContract.sol\":28472:28481  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":28450:28471  validateStakingPeriod */\n      tag_297\n        /* \"contracts/StakingUrgent/2stContract.sol\":28450:28482  validateStakingPeriod(tempStake) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28442:28516  require(validateStakingPeriod(tempStake), \"Staking period is not expired\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28544:28553  tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28544:28560  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":28534:28540  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28534:28560  _stake <= tempStake.amount */\n      gt\n      iszero\n        /* \"contracts/StakingUrgent/2stContract.sol\":28526:28585  require(_stake <= tempStake.amount, \"Invalid Stake Amount\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28595:28618  uint256 _investorReward */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28621:28650  getDailyRewards(_stakePeriod) */\n      tag_304\n        /* \"contracts/StakingUrgent/2stContract.sol\":28637:28649  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28621:28636  getDailyRewards */\n      tag_46\n        /* \"contracts/StakingUrgent/2stContract.sol\":28621:28650  getDailyRewards(_stakePeriod) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28595:28650  uint256 _investorReward = getDailyRewards(_stakePeriod) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28679:28707  tempStake.amount.sub(_stake) */\n      tag_305\n        /* \"contracts/StakingUrgent/2stContract.sol\":28700:28706  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":28679:28688  tempStake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28679:28695  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":28679:28699  tempStake.amount.sub */\n      tag_306\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28679:28707  tempStake.amount.sub(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_305:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28660:28669  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":28660:28676  tempStake.amount */\n      0x00\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":28660:28707  tempStake.amount = tempStake.amount.sub(_stake) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28752:28761  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28723  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28735  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28724:28734  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28735  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28749  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28736:28748  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28749  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_307\n      jumpi\n      tag_308\n      tag_128\n      jump\t// in\n    tag_308:\n    tag_307:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_309\n      jumpi\n      tag_310\n      tag_128\n      jump\t// in\n    tag_310:\n    tag_309:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28717:28761  stakes[msg.sender][_stakePeriod] = tempStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_311\n      jumpi\n      tag_312\n      tag_128\n      jump\t// in\n    tag_312:\n    tag_311:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28784:28806  totalStake.sub(_stake) */\n      tag_313\n        /* \"contracts/StakingUrgent/2stContract.sol\":28799:28805  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":28784:28794  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/2stContract.sol\":28784:28798  totalStake.sub */\n      tag_306\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28784:28806  totalStake.sub(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28771:28781  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":28771:28806  totalStake = totalStake.sub(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28831:28864  totalRewards.add(_investorReward) */\n      tag_314\n        /* \"contracts/StakingUrgent/2stContract.sol\":28848:28863  _investorReward */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":28831:28843  totalRewards */\n      sload(0x02)\n        /* \"contracts/StakingUrgent/2stContract.sol\":28831:28847  totalRewards.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28831:28864  totalRewards.add(_investorReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28816:28828  totalRewards */\n      0x02\n        /* \"contracts/StakingUrgent/2stContract.sol\":28816:28864  totalRewards = totalRewards.add(_investorReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28988:28989  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28951  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28963  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28952:28962  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28963  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28977  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28964:28976  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28977  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_315\n      jumpi\n      tag_316\n      tag_128\n      jump\t// in\n    tag_316:\n    tag_315:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_318\n      tag_128\n      jump\t// in\n    tag_318:\n    tag_317:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28984  stakes[msg.sender][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":28945:28989  stakes[msg.sender][_stakePeriod].amount == 0 */\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":28942:29020  if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender) */\n      iszero\n      tag_319\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":28991:29020  removeStakeholder(msg.sender) */\n      tag_320\n        /* \"contracts/StakingUrgent/2stContract.sol\":29009:29019  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28991:29008  removeStakeholder */\n      tag_321\n        /* \"contracts/StakingUrgent/2stContract.sol\":28991:29020  removeStakeholder(msg.sender) */\n      jump\t// in\n    tag_320:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28942:29020  if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender) */\n    tag_319:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29030:29037  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":29030:29046  myToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingUrgent/2stContract.sol\":29047:29057  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":29059:29065  _stake */\n      dup7\n        /* \"contracts/StakingUrgent/2stContract.sol\":29030:29066  myToken.transfer(msg.sender, _stake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_322\n      swap3\n      swap2\n      swap1\n      tag_323\n      jump\t// in\n    tag_322:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_324:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_327\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_327:\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29076:29083  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":29076:29096  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUrgent/2stContract.sol\":29097:29104  owner() */\n      tag_328\n        /* \"contracts/StakingUrgent/2stContract.sol\":29097:29102  owner */\n      tag_91\n        /* \"contracts/StakingUrgent/2stContract.sol\":29097:29104  owner() */\n      jump\t// in\n    tag_328:\n        /* \"contracts/StakingUrgent/2stContract.sol\":29106:29116  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":29118:29133  _investorReward */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":29076:29134  myToken.transferFrom(owner(), msg.sender, _investorReward) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_329\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_329:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_330\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_330:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_332\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_332:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_333\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_333:\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":29163:29173  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":29149:29213  TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f56\n        /* \"contracts/StakingUrgent/2stContract.sol\":29175:29181  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29183:29195  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29197:29212  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":29149:29213  TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_334\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_334:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/2stContract.sol\":29247:29257  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":29228:29306  RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c57\n        /* \"contracts/StakingUrgent/2stContract.sol\":29259:29274  _investorReward */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":29276:29288  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":29290:29305  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":29228:29306  RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_335\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/2stContract.sol\":28302:29313  {... */\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28234:29313  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":25770:25795  uint256 public totalStake */\n    tag_85:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":34361:34505  function setOldApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_89:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_337\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_337:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34487:34498  _percentage */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":34463:34470  apr_old */\n      0x08\n        /* \"contracts/StakingUrgent/2stContract.sol\":34463:34484  apr_old[_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":34471:34483  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":34463:34484  apr_old[_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_339\n      jumpi\n      tag_340\n      tag_128\n      jump\t// in\n    tag_340:\n    tag_339:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_341\n      jumpi\n      tag_342\n      tag_128\n      jump\t// in\n    tag_342:\n    tag_341:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":34463:34498  apr_old[_stakePeriod] = _percentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":34361:34505  function setOldApyPercentage(uint _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":1856:1941  function owner() public view virtual returns (address) {... */\n    tag_91:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1902:1909  address */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":1928:1934  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":1921:1934  return _owner */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":1856:1941  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":25834:25858  uint public oldTimeStamp */\n    tag_95:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":26218:26259  mapping(StakingPeriod => uint) public apr */\n    tag_99:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":31750:31939  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n    tag_103:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31861:31868  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31897  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31911  stakes[_stakeholder] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31898:31910  _stakeholder */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31911  stakes[_stakeholder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31925  stakes[_stakeholder][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31912:31924  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31925  stakes[_stakeholder][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_345\n      jumpi\n      tag_346\n      tag_128\n      jump\t// in\n    tag_346:\n    tag_345:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_347\n      jumpi\n      tag_348\n      tag_128\n      jump\t// in\n    tag_348:\n    tag_347:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":31891:31932  stakes[_stakeholder][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31884:31932  return stakes[_stakeholder][_stakePeriod].amount */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31750:31939  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":26318:26339  IERC20 public myToken */\n    tag_106:\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":34512:34672  function remainingTokens() public view returns (uint256) {... */\n    tag_110:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34560:34567  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":34586:34665  Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      tag_350\n        /* \"contracts/StakingUrgent/2stContract.sol\":34595:34602  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":34595:34612  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StakingUrgent/2stContract.sol\":34613:34620  owner() */\n      tag_351\n        /* \"contracts/StakingUrgent/2stContract.sol\":34613:34618  owner */\n      tag_91\n        /* \"contracts/StakingUrgent/2stContract.sol\":34613:34620  owner() */\n      jump\t// in\n    tag_351:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34595:34621  myToken.balanceOf(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_352\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_352:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_353\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_353:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_355\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_355:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_356\n      swap2\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34623:34630  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":34623:34640  myToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/StakingUrgent/2stContract.sol\":34641:34648  owner() */\n      tag_358\n        /* \"contracts/StakingUrgent/2stContract.sol\":34641:34646  owner */\n      tag_91\n        /* \"contracts/StakingUrgent/2stContract.sol\":34641:34648  owner() */\n      jump\t// in\n    tag_358:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34658:34662  this */\n      address\n        /* \"contracts/StakingUrgent/2stContract.sol\":34623:34664  myToken.allowance(owner(), address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_359\n      swap3\n      swap2\n      swap1\n      tag_360\n      jump\t// in\n    tag_359:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_361\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_361:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_363\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_363:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_364\n      swap2\n      swap1\n      tag_357\n      jump\t// in\n    tag_364:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34586:34594  Math.min */\n      tag_365\n        /* \"contracts/StakingUrgent/2stContract.sol\":34586:34665  Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      jump\t// in\n    tag_350:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34579:34665  return Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":34512:34672  function remainingTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":32595:32894  function getRewardsPerDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_114:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32670:32677  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32689:32711  stake memory tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32714:32720  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":32714:32732  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32721:32731  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":32714:32732  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32714:32746  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32733:32745  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":32714:32746  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_367\n      jumpi\n      tag_368\n      tag_128\n      jump\t// in\n    tag_368:\n    tag_367:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_369\n      jumpi\n      tag_370\n      tag_128\n      jump\t// in\n    tag_370:\n    tag_369:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":32689:32746  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_371\n      jumpi\n      tag_372\n      tag_128\n      jump\t// in\n    tag_372:\n    tag_371:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_373\n      jumpi\n      tag_374\n      tag_128\n      jump\t// in\n    tag_374:\n    tag_373:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32756:32777  uint256 total_rewards */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":32780:32848  getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      tag_375\n        /* \"contracts/StakingUrgent/2stContract.sol\":32799:32808  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":32799:32815  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":32817:32826  tempStake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":32828:32837  tempStake */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":32828:32847  tempStake.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":32780:32798  getInvestorRewards */\n      tag_141\n        /* \"contracts/StakingUrgent/2stContract.sol\":32780:32848  getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      jump\t// in\n    tag_375:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32756:32848  uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake, tempStake.timestamp) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32865:32887  total_rewards.div(365) */\n      tag_376\n        /* \"contracts/StakingUrgent/2stContract.sol\":32883:32886  365 */\n      0x016d\n        /* \"contracts/StakingUrgent/2stContract.sol\":32865:32878  total_rewards */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":32865:32882  total_rewards.div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":32865:32887  total_rewards.div(365) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_376:\n        /* \"contracts/StakingUrgent/2stContract.sol\":32858:32887  return total_rewards.div(365) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":32595:32894  function getRewardsPerDay(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":34049:34169  function getTotalRewards()... */\n    tag_117:\n        /* \"contracts/StakingUrgent/2stContract.sol\":34120:34127  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":34150:34162  totalRewards */\n      sload(0x02)\n        /* \"contracts/StakingUrgent/2stContract.sol\":34143:34162  return totalRewards */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":34049:34169  function getTotalRewards()... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":27351:28227  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_121:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27450:27451  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27441:27447  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":27441:27451  _stake > 0 */\n      gt\n        /* \"contracts/StakingUrgent/2stContract.sol\":27433:27486  require(_stake > 0, \"stake value should not be zero\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_380\n      swap1\n      tag_176\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_379:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27504:27511  myToken */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":27504:27524  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUrgent/2stContract.sol\":27525:27535  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":27545:27549  this */\n      address\n        /* \"contracts/StakingUrgent/2stContract.sol\":27552:27558  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/2stContract.sol\":27504:27559  myToken.transferFrom(msg.sender, address(this), _stake) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_381:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_382:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_384\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_384:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_385\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_385:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27496:27585  require(myToken.transferFrom(msg.sender, address(this), _stake), \"Token Transfer Failed\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_163\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27641:27642  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27604  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27616  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27605:27615  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27616  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27630  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27617:27629  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27630  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_388\n      jumpi\n      tag_389\n      tag_128\n      jump\t// in\n    tag_389:\n    tag_388:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_390\n      jumpi\n      tag_391\n      tag_128\n      jump\t// in\n    tag_391:\n    tag_390:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27637  stakes[msg.sender][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":27598:27642  stakes[msg.sender][_stakePeriod].amount == 0 */\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":27595:28144  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n      iszero\n      tag_392\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":27658:27684  addStakeholder(msg.sender) */\n      tag_393\n        /* \"contracts/StakingUrgent/2stContract.sol\":27673:27683  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":27658:27672  addStakeholder */\n      tag_193\n        /* \"contracts/StakingUrgent/2stContract.sol\":27658:27684  addStakeholder(msg.sender) */\n      jump\t// in\n    tag_393:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27733:27777  stake(_stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":27739:27745  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":27733:27777  stake(_stake, _stakePeriod, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":27747:27759  _stakePeriod */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":27733:27777  stake(_stake, _stakePeriod, block.timestamp) */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_394\n      jumpi\n      tag_395\n      tag_128\n      jump\t// in\n    tag_395:\n    tag_394:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":27761:27776  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":27733:27777  stake(_stake, _stakePeriod, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27704  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27716  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27705:27715  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27716  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27730  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27717:27729  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27730  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_396\n      jumpi\n      tag_397\n      tag_128\n      jump\t// in\n    tag_397:\n    tag_396:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_398\n      jumpi\n      tag_399\n      tag_128\n      jump\t// in\n    tag_399:\n    tag_398:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27698:27777  stakes[msg.sender][_stakePeriod] = stake(_stake, _stakePeriod, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_400\n      jumpi\n      tag_401\n      tag_128\n      jump\t// in\n    tag_401:\n    tag_400:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27804:27826  totalStake.add(_stake) */\n      tag_402\n        /* \"contracts/StakingUrgent/2stContract.sol\":27819:27825  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":27804:27814  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/2stContract.sol\":27804:27818  totalStake.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":27804:27826  totalStake.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_402:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27791:27801  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":27791:27826  totalStake = totalStake.add(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27595:28144  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n      jump(tag_403)\n    tag_392:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27857:27879  stake memory tempStake */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27882:27888  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":27882:27900  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27889:27899  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":27882:27900  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27882:27914  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":27901:27913  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":27882:27914  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_404\n      jumpi\n      tag_405\n      tag_128\n      jump\t// in\n    tag_405:\n    tag_404:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_406\n      jumpi\n      tag_407\n      tag_128\n      jump\t// in\n    tag_407:\n    tag_406:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":27857:27914  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_408\n      jumpi\n      tag_409\n      tag_128\n      jump\t// in\n    tag_409:\n    tag_408:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_410\n      jumpi\n      tag_411\n      tag_128\n      jump\t// in\n    tag_411:\n    tag_410:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27947:27975  tempStake.amount.add(_stake) */\n      tag_412\n        /* \"contracts/StakingUrgent/2stContract.sol\":27968:27974  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":27947:27956  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":27947:27963  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":27947:27967  tempStake.amount.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":27947:27975  tempStake.amount.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_412:\n        /* \"contracts/StakingUrgent/2stContract.sol\":27928:27937  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":27928:27944  tempStake.amount */\n      0x00\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":27928:27975  tempStake.amount = tempStake.amount.add(_stake) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28011:28026  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":27989:27998  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":27989:28008  tempStake.timestamp */\n      0x40\n      add\n        /* \"contracts/StakingUrgent/2stContract.sol\":27989:28026  tempStake.timestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28075:28084  tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28046  stakes */\n      0x06\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28058  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28047:28057  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28058  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28072  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":28059:28071  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28072  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_413\n      jumpi\n      tag_414\n      tag_128\n      jump\t// in\n    tag_414:\n    tag_413:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_415\n      jumpi\n      tag_416\n      tag_128\n      jump\t// in\n    tag_416:\n    tag_415:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/2stContract.sol\":28040:28084  stakes[msg.sender][_stakePeriod] = tempStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_417\n      jumpi\n      tag_418\n      tag_128\n      jump\t// in\n    tag_418:\n    tag_417:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":28111:28133  totalStake.add(_stake) */\n      tag_419\n        /* \"contracts/StakingUrgent/2stContract.sol\":28126:28132  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28111:28121  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/2stContract.sol\":28111:28125  totalStake.add */\n      tag_215\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":28111:28133  totalStake.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_419:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28098:28108  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":28098:28133  totalStake = totalStake.add(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27843:28144  {... */\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":27595:28144  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n    tag_403:\n        /* \"contracts/StakingUrgent/2stContract.sol\":28170:28180  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":28158:28220  TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c\n        /* \"contracts/StakingUrgent/2stContract.sol\":28182:28188  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28190:28202  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":28204:28219  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":28158:28220  TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_420\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_420:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/2stContract.sol\":27351:28227  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":2736:2934  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_124:\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      tag_422\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1760  _checkOwner */\n      tag_166\n        /* \"contracts/StakingUrgent/2stContract.sol\":1749:1762  _checkOwner() */\n      jump\t// in\n    tag_422:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2844:2845  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":2824:2846  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":2824:2832  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":2824:2846  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/StakingUrgent/2stContract.sol\":2816:2889  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_425\n      swap1\n      tag_426\n      jump\t// in\n    tag_425:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_424:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2899:2927  _transferOwnership(newOwner) */\n      tag_427\n        /* \"contracts/StakingUrgent/2stContract.sol\":2918:2926  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":2899:2917  _transferOwnership */\n      tag_284\n        /* \"contracts/StakingUrgent/2stContract.sol\":2899:2927  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_427:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2736:2934  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":30582:30955  function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor, uint _timeStamp) internal view returns (uint256) {... */\n    tag_141:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30698:30705  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30734:30746  oldTimeStamp */\n      sload(0x03)\n        /* \"contracts/StakingUrgent/2stContract.sol\":30720:30730  _timeStamp */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":30720:30746  _timeStamp <= oldTimeStamp */\n      gt\n        /* \"contracts/StakingUrgent/2stContract.sol\":30717:30949  if(_timeStamp <= oldTimeStamp){... */\n      tag_429\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30836  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100).div(100) */\n      tag_430\n        /* \"contracts/StakingUrgent/2stContract.sol\":30832:30835  100 */\n      0x64\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30827  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100) */\n      tag_431\n        /* \"contracts/StakingUrgent/2stContract.sol\":30823:30826  100 */\n      0x64\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30818  _unstakeAmount.mul(apr_old[_investor.stakePeriod]) */\n      tag_432\n        /* \"contracts/StakingUrgent/2stContract.sol\":30787:30794  apr_old */\n      0x08\n        /* \"contracts/StakingUrgent/2stContract.sol\":30787:30817  apr_old[_investor.stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30795:30804  _investor */\n      dup10\n        /* \"contracts/StakingUrgent/2stContract.sol\":30795:30816  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30787:30817  apr_old[_investor.stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_433\n      jumpi\n      tag_434\n      tag_128\n      jump\t// in\n    tag_434:\n    tag_433:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_435\n      jumpi\n      tag_436\n      tag_128\n      jump\t// in\n    tag_436:\n    tag_435:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30782  _unstakeAmount */\n      dup10\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30786  _unstakeAmount.mul */\n      tag_152\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30818  _unstakeAmount.mul(apr_old[_investor.stakePeriod]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_432:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30822  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30827  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_431:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30831  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30768:30836  _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_430:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30761:30836  return _unstakeAmount.mul(apr_old[_investor.stakePeriod]).div(100).div(100) */\n      swap1\n      pop\n      jump(tag_428)\n        /* \"contracts/StakingUrgent/2stContract.sol\":30717:30949  if(_timeStamp <= oldTimeStamp){... */\n    tag_429:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30938  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      tag_438\n        /* \"contracts/StakingUrgent/2stContract.sol\":30934:30937  100 */\n      0x64\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30929  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100) */\n      tag_439\n        /* \"contracts/StakingUrgent/2stContract.sol\":30925:30928  100 */\n      0x64\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30920  _unstakeAmount.mul(apr[_investor.stakePeriod]) */\n      tag_440\n        /* \"contracts/StakingUrgent/2stContract.sol\":30893:30896  apr */\n      0x07\n        /* \"contracts/StakingUrgent/2stContract.sol\":30893:30919  apr[_investor.stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":30897:30906  _investor */\n      dup10\n        /* \"contracts/StakingUrgent/2stContract.sol\":30897:30918  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30893:30919  apr[_investor.stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_441\n      jumpi\n      tag_442\n      tag_128\n      jump\t// in\n    tag_442:\n    tag_441:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_443\n      jumpi\n      tag_444\n      tag_128\n      jump\t// in\n    tag_444:\n    tag_443:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30888  _unstakeAmount */\n      dup10\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30892  _unstakeAmount.mul */\n      tag_152\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30920  _unstakeAmount.mul(apr[_investor.stakePeriod]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_440:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30924  _unstakeAmount.mul(apr[_investor.stakePeriod]).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30929  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_439:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30933  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div */\n      tag_147\n      swap1\n        /* \"contracts/StakingUrgent/2stContract.sol\":30874:30938  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_438:\n        /* \"contracts/StakingUrgent/2stContract.sol\":30867:30938  return _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":30582:30955  function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor, uint _timeStamp) internal view returns (uint256) {... */\n    tag_428:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":10140:10236  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_147:\n        /* \"contracts/StakingUrgent/2stContract.sol\":10198:10205  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":10228:10229  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":10224:10225  a */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":10224:10229  a / b */\n      tag_446\n      swap2\n      swap1\n      tag_447\n      jump\t// in\n    tag_446:\n        /* \"contracts/StakingUrgent/2stContract.sol\":10217:10229  return a / b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":10140:10236  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":9755:9851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9813:9820  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":9843:9844  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":9839:9840  a */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":9839:9844  a * b */\n      tag_449\n      swap2\n      swap1\n      tag_450\n      jump\t// in\n    tag_449:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9832:9844  return a * b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":9755:9851  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":2014:2144  function _checkOwner() internal view virtual {... */\n    tag_166:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2088:2100  _msgSender() */\n      tag_452\n        /* \"contracts/StakingUrgent/2stContract.sol\":2088:2098  _msgSender */\n      tag_453\n        /* \"contracts/StakingUrgent/2stContract.sol\":2088:2100  _msgSender() */\n      jump\t// in\n    tag_452:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2077:2100  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":2077:2084  owner() */\n      tag_454\n        /* \"contracts/StakingUrgent/2stContract.sol\":2077:2082  owner */\n      tag_91\n        /* \"contracts/StakingUrgent/2stContract.sol\":2077:2084  owner() */\n      jump\t// in\n    tag_454:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2077:2100  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":2069:2137  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_455\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_456\n      swap1\n      tag_457\n      jump\t// in\n    tag_456:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_455:\n        /* \"contracts/StakingUrgent/2stContract.sol\":2014:2144  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":33507:33705  function addStakeholder(address _stakeholder)... */\n    tag_193:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33585:33604  bool _isStakeholder */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33610:33637  isStakeholder(_stakeholder) */\n      tag_459\n        /* \"contracts/StakingUrgent/2stContract.sol\":33624:33636  _stakeholder */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":33610:33623  isStakeholder */\n      tag_460\n        /* \"contracts/StakingUrgent/2stContract.sol\":33610:33637  isStakeholder(_stakeholder) */\n      jump\t// in\n    tag_459:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33584:33637  (bool _isStakeholder, ) = isStakeholder(_stakeholder) */\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33651:33665  _isStakeholder */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33647:33698  if(!_isStakeholder) stakeholders.push(_stakeholder) */\n      tag_461\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":33667:33679  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33685:33697  _stakeholder */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":33667:33698  stakeholders.push(_stakeholder) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33647:33698  if(!_isStakeholder) stakeholders.push(_stakeholder) */\n    tag_461:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33574:33705  {... */\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33507:33705  function addStakeholder(address _stakeholder)... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":9045:9141  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_215:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9103:9110  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":9133:9134  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":9129:9130  a */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":9129:9134  a + b */\n      tag_464\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_464:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9122:9134  return a + b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":9045:9141  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":31319:31743  function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){... */\n    tag_278:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31401:31408  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31451:31474  StakingPeriod.ONE_MONTH */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31474  _investor.stakePeriod == StakingPeriod.ONE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_466\n      jumpi\n      tag_467\n      tag_128\n      jump\t// in\n    tag_467:\n    tag_466:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31435  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31447  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31474  _investor.stakePeriod == StakingPeriod.ONE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_468\n      jumpi\n      tag_469\n      tag_128\n      jump\t// in\n    tag_469:\n    tag_468:\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31735  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_470\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":31512:31535  StakingPeriod.TWO_MONTH */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31535  _investor.stakePeriod == StakingPeriod.TWO_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_471\n      jumpi\n      tag_472\n      tag_128\n      jump\t// in\n    tag_472:\n    tag_471:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31496  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31508  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31535  _investor.stakePeriod == StakingPeriod.TWO_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_473\n      jumpi\n      tag_474\n      tag_128\n      jump\t// in\n    tag_474:\n    tag_473:\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31735  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_475\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":31573:31598  StakingPeriod.THREE_MONTH */\n      0x02\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31598  _investor.stakePeriod == StakingPeriod.THREE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_476\n      jumpi\n      tag_477\n      tag_128\n      jump\t// in\n    tag_477:\n    tag_476:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31557  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31569  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31598  _investor.stakePeriod == StakingPeriod.THREE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_478\n      jumpi\n      tag_479\n      tag_128\n      jump\t// in\n    tag_479:\n    tag_478:\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31735  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_480\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":31636:31659  StakingPeriod.SIX_MONTH */\n      0x03\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31659  _investor.stakePeriod == StakingPeriod.SIX_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_481\n      jumpi\n      tag_482\n      tag_128\n      jump\t// in\n    tag_482:\n    tag_481:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31620  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31632  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31659  _investor.stakePeriod == StakingPeriod.SIX_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_483\n      jumpi\n      tag_484\n      tag_128\n      jump\t// in\n    tag_484:\n    tag_483:\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31735  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_485\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":31698:31720  StakingPeriod.ONE_YEAR */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31720  _investor.stakePeriod == StakingPeriod.ONE_YEAR */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_486\n      jumpi\n      tag_487\n      tag_128\n      jump\t// in\n    tag_487:\n    tag_486:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31682  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31694  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31720  _investor.stakePeriod == StakingPeriod.ONE_YEAR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_488\n      jumpi\n      tag_489\n      tag_128\n      jump\t// in\n    tag_489:\n    tag_488:\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31735  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_490\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":31734:31735  0 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31735  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_491)\n    tag_490:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31723:31731  365 days */\n      0x01e13380\n        /* \"contracts/StakingUrgent/2stContract.sol\":31673:31735  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_491:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31735  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_492)\n    tag_485:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31662:31670  120 days */\n      0x9e3400\n        /* \"contracts/StakingUrgent/2stContract.sol\":31611:31735  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_492:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31735  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_493)\n    tag_480:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31601:31608  90 days */\n      0x76a700\n        /* \"contracts/StakingUrgent/2stContract.sol\":31548:31735  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_493:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31735  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_494)\n    tag_475:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31538:31545  30 days */\n      0x278d00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31487:31735  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_494:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31735  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_495)\n    tag_470:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31477:31484  15 days */\n      0x13c680\n        /* \"contracts/StakingUrgent/2stContract.sol\":31426:31735  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_495:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31419:31735  return _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31319:31743  function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":3088:3275  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_284:\n        /* \"contracts/StakingUrgent/2stContract.sol\":3161:3177  address oldOwner */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":3180:3186  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":3161:3186  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":3205:3213  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":3196:3202  _owner */\n      0x00\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":3196:3213  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":3259:3267  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":3228:3268  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":3249:3257  oldOwner */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":3228:3268  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StakingUrgent/2stContract.sol\":3151:3275  {... */\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":3088:3275  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":31073:31311  function validateStakingPeriod(stake memory _investor) internal view returns(bool) {... */\n    tag_297:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31150:31154  bool */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":31166:31190  uint256 stakingTimeStamp */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":31215:31251  getStakingPeriodInNumbers(_investor) */\n      tag_498\n        /* \"contracts/StakingUrgent/2stContract.sol\":31241:31250  _investor */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":31215:31240  getStakingPeriodInNumbers */\n      tag_278\n        /* \"contracts/StakingUrgent/2stContract.sol\":31215:31251  getStakingPeriodInNumbers(_investor) */\n      jump\t// in\n    tag_498:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31193:31202  _investor */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":31193:31212  _investor.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/2stContract.sol\":31193:31251  _investor.timestamp + getStakingPeriodInNumbers(_investor) */\n      tag_499\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_499:\n        /* \"contracts/StakingUrgent/2stContract.sol\":31166:31251  uint256 stakingTimeStamp = _investor.timestamp + getStakingPeriodInNumbers(_investor) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31287:31303  stakingTimeStamp */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":31268:31283  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/2stContract.sol\":31268:31303  block.timestamp >= stakingTimeStamp */\n      lt\n      iszero\n        /* \"contracts/StakingUrgent/2stContract.sol\":31261:31303  return block.timestamp >= stakingTimeStamp */\n      swap2\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":31073:31311  function validateStakingPeriod(stake memory _investor) internal view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":9412:9508  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_306:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9470:9477  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":9500:9501  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":9496:9497  a */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":9496:9501  a - b */\n      tag_501\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_501:\n        /* \"contracts/StakingUrgent/2stContract.sol\":9489:9501  return a - b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":9412:9508  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":33714:34003  function removeStakeholder(address _stakeholder)... */\n    tag_321:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33795:33814  bool _isStakeholder */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33816:33825  uint256 s */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33829:33856  isStakeholder(_stakeholder) */\n      tag_503\n        /* \"contracts/StakingUrgent/2stContract.sol\":33843:33855  _stakeholder */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":33829:33842  isStakeholder */\n      tag_460\n        /* \"contracts/StakingUrgent/2stContract.sol\":33829:33856  isStakeholder(_stakeholder) */\n      jump\t// in\n    tag_503:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33794:33856  (bool _isStakeholder, uint256 s) = isStakeholder(_stakeholder) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33869:33883  _isStakeholder */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":33866:33996  if(_isStakeholder){... */\n      iszero\n      tag_504\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":33916:33928  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33951:33952  1 */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":33929:33941  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33929:33948  stakeholders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33929:33952  stakeholders.length - 1 */\n      tag_505\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_505:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33916:33953  stakeholders[stakeholders.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_506\n      jumpi\n      tag_507\n      tag_173\n      jump\t// in\n    tag_507:\n    tag_506:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":33898:33910  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33911:33912  s */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":33898:33913  stakeholders[s] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_509\n      jumpi\n      tag_510\n      tag_173\n      jump\t// in\n    tag_510:\n    tag_509:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33898:33953  stakeholders[s] = stakeholders[stakeholders.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33967:33979  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33967:33985  stakeholders.pop() */\n      dup1\n      sload\n      dup1\n      tag_512\n      jumpi\n      tag_513\n      tag_514\n      jump\t// in\n    tag_513:\n    tag_512:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/StakingUrgent/2stContract.sol\":33866:33996  if(_isStakeholder){... */\n    tag_504:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33784:34003  {... */\n      pop\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33714:34003  function removeStakeholder(address _stakeholder)... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":13738:13842  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_365:\n        /* \"contracts/StakingUrgent/2stContract.sol\":13796:13803  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":13826:13827  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":13822:13823  a */\n      dup4\n        /* \"contracts/StakingUrgent/2stContract.sol\":13822:13827  a < b */\n      lt\n        /* \"contracts/StakingUrgent/2stContract.sol\":13822:13835  a < b ? a : b */\n      tag_517\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":13834:13835  b */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":13822:13835  a < b ? a : b */\n      jump(tag_518)\n    tag_517:\n        /* \"contracts/StakingUrgent/2stContract.sol\":13830:13831  a */\n      dup3\n        /* \"contracts/StakingUrgent/2stContract.sol\":13822:13835  a < b ? a : b */\n    tag_518:\n        /* \"contracts/StakingUrgent/2stContract.sol\":13815:13835  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":13738:13842  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":406:502  function _msgSender() internal view virtual returns (address) {... */\n    tag_453:\n        /* \"contracts/StakingUrgent/2stContract.sol\":459:466  address */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":485:495  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/2stContract.sol\":478:495  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":406:502  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/2stContract.sol\":33223:33498  function isStakeholder(address _address)... */\n    tag_460:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33310:33314  bool */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33316:33323  uint256 */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33344:33353  uint256 s */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33339:33465  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n    tag_521:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33363:33375  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33363:33382  stakeholders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33359:33360  s */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":33359:33382  s < stakeholders.length */\n      lt\n        /* \"contracts/StakingUrgent/2stContract.sol\":33339:33465  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n      iszero\n      tag_522\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":33421:33433  stakeholders */\n      0x04\n        /* \"contracts/StakingUrgent/2stContract.sol\":33434:33435  s */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":33421:33436  stakeholders[s] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_524\n      jumpi\n      tag_525\n      tag_173\n      jump\t// in\n    tag_525:\n    tag_524:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":33409:33436  _address == stakeholders[s] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/2stContract.sol\":33409:33417  _address */\n      dup5\n        /* \"contracts/StakingUrgent/2stContract.sol\":33409:33436  _address == stakeholders[s] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingUrgent/2stContract.sol\":33405:33454  if (_address == stakeholders[s]) return (true, s) */\n      iszero\n      tag_527\n      jumpi\n        /* \"contracts/StakingUrgent/2stContract.sol\":33446:33450  true */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":33452:33453  s */\n      dup2\n        /* \"contracts/StakingUrgent/2stContract.sol\":33438:33454  return (true, s) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_520)\n        /* \"contracts/StakingUrgent/2stContract.sol\":33405:33454  if (_address == stakeholders[s]) return (true, s) */\n    tag_527:\n        /* \"contracts/StakingUrgent/2stContract.sol\":33389:33390  1 */\n      0x01\n        /* \"contracts/StakingUrgent/2stContract.sol\":33384:33390  s += 1 */\n      dup2\n      tag_528\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_528:\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33339:33465  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n      jump(tag_521)\n    tag_522:\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33482:33487  false */\n      0x00\n        /* \"contracts/StakingUrgent/2stContract.sol\":33489:33490  0 */\n      dup1\n        /* \"contracts/StakingUrgent/2stContract.sol\":33474:33491  return (false, 0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/StakingUrgent/2stContract.sol\":33223:33498  function isStakeholder(address _address)... */\n    tag_520:\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":24:746   */\n    tag_530:\n        /* \"#utility.yul\":120:125   */\n      0x00\n        /* \"#utility.yul\":145:226   */\n      tag_532\n        /* \"#utility.yul\":161:225   */\n      tag_533\n        /* \"#utility.yul\":218:224   */\n      dup5\n        /* \"#utility.yul\":161:225   */\n      tag_534\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":145:226   */\n      tag_535\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":136:226   */\n      swap1\n      pop\n        /* \"#utility.yul\":246:251   */\n      dup1\n        /* \"#utility.yul\":275:281   */\n      dup4\n        /* \"#utility.yul\":268:273   */\n      dup3\n        /* \"#utility.yul\":261:282   */\n      mstore\n        /* \"#utility.yul\":309:313   */\n      0x20\n        /* \"#utility.yul\":302:307   */\n      dup3\n        /* \"#utility.yul\":298:314   */\n      add\n        /* \"#utility.yul\":291:314   */\n      swap1\n      pop\n        /* \"#utility.yul\":335:341   */\n      dup3\n        /* \"#utility.yul\":385:388   */\n      dup6\n        /* \"#utility.yul\":377:381   */\n      0x20\n        /* \"#utility.yul\":369:375   */\n      dup7\n        /* \"#utility.yul\":365:382   */\n      mul\n        /* \"#utility.yul\":360:363   */\n      dup3\n        /* \"#utility.yul\":356:383   */\n      add\n        /* \"#utility.yul\":353:389   */\n      gt\n        /* \"#utility.yul\":350:493   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":404:483   */\n      tag_537\n      tag_538\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":350:493   */\n    tag_536:\n        /* \"#utility.yul\":517:518   */\n      0x00\n        /* \"#utility.yul\":502:740   */\n    tag_539:\n        /* \"#utility.yul\":527:533   */\n      dup6\n        /* \"#utility.yul\":524:525   */\n      dup2\n        /* \"#utility.yul\":521:534   */\n      lt\n        /* \"#utility.yul\":502:740   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":595:598   */\n      dup2\n        /* \"#utility.yul\":624:661   */\n      tag_542\n        /* \"#utility.yul\":657:660   */\n      dup9\n        /* \"#utility.yul\":645:655   */\n      dup3\n        /* \"#utility.yul\":624:661   */\n      tag_543\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":619:622   */\n      dup5\n        /* \"#utility.yul\":612:662   */\n      mstore\n        /* \"#utility.yul\":691:695   */\n      0x20\n        /* \"#utility.yul\":686:689   */\n      dup5\n        /* \"#utility.yul\":682:696   */\n      add\n        /* \"#utility.yul\":675:696   */\n      swap4\n      pop\n        /* \"#utility.yul\":725:729   */\n      0x20\n        /* \"#utility.yul\":720:723   */\n      dup4\n        /* \"#utility.yul\":716:730   */\n      add\n        /* \"#utility.yul\":709:730   */\n      swap3\n      pop\n        /* \"#utility.yul\":562:740   */\n      pop\n        /* \"#utility.yul\":549:550   */\n      0x01\n        /* \"#utility.yul\":546:547   */\n      dup2\n        /* \"#utility.yul\":542:551   */\n      add\n        /* \"#utility.yul\":537:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":502:740   */\n      jump(tag_539)\n    tag_541:\n        /* \"#utility.yul\":506:520   */\n      pop\n        /* \"#utility.yul\":126:746   */\n      pop\n      pop\n        /* \"#utility.yul\":24:746   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":788:1564   */\n    tag_544:\n        /* \"#utility.yul\":902:907   */\n      0x00\n        /* \"#utility.yul\":927:1026   */\n      tag_546\n        /* \"#utility.yul\":943:1025   */\n      tag_547\n        /* \"#utility.yul\":1018:1024   */\n      dup5\n        /* \"#utility.yul\":943:1025   */\n      tag_548\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":927:1026   */\n      tag_535\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":918:1026   */\n      swap1\n      pop\n        /* \"#utility.yul\":1046:1051   */\n      dup1\n        /* \"#utility.yul\":1075:1081   */\n      dup4\n        /* \"#utility.yul\":1068:1073   */\n      dup3\n        /* \"#utility.yul\":1061:1082   */\n      mstore\n        /* \"#utility.yul\":1109:1113   */\n      0x20\n        /* \"#utility.yul\":1102:1107   */\n      dup3\n        /* \"#utility.yul\":1098:1114   */\n      add\n        /* \"#utility.yul\":1091:1114   */\n      swap1\n      pop\n        /* \"#utility.yul\":1135:1141   */\n      dup3\n        /* \"#utility.yul\":1185:1188   */\n      dup6\n        /* \"#utility.yul\":1177:1181   */\n      0x20\n        /* \"#utility.yul\":1169:1175   */\n      dup7\n        /* \"#utility.yul\":1165:1182   */\n      mul\n        /* \"#utility.yul\":1160:1163   */\n      dup3\n        /* \"#utility.yul\":1156:1183   */\n      add\n        /* \"#utility.yul\":1153:1189   */\n      gt\n        /* \"#utility.yul\":1150:1293   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":1204:1283   */\n      tag_550\n      tag_538\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":1150:1293   */\n    tag_549:\n        /* \"#utility.yul\":1317:1318   */\n      0x00\n        /* \"#utility.yul\":1302:1558   */\n    tag_551:\n        /* \"#utility.yul\":1327:1333   */\n      dup6\n        /* \"#utility.yul\":1324:1325   */\n      dup2\n        /* \"#utility.yul\":1321:1334   */\n      lt\n        /* \"#utility.yul\":1302:1558   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":1395:1398   */\n      dup2\n        /* \"#utility.yul\":1424:1479   */\n      tag_554\n        /* \"#utility.yul\":1475:1478   */\n      dup9\n        /* \"#utility.yul\":1463:1473   */\n      dup3\n        /* \"#utility.yul\":1424:1479   */\n      tag_555\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":1419:1422   */\n      dup5\n        /* \"#utility.yul\":1412:1480   */\n      mstore\n        /* \"#utility.yul\":1509:1513   */\n      0x20\n        /* \"#utility.yul\":1504:1507   */\n      dup5\n        /* \"#utility.yul\":1500:1514   */\n      add\n        /* \"#utility.yul\":1493:1514   */\n      swap4\n      pop\n        /* \"#utility.yul\":1543:1547   */\n      0x20\n        /* \"#utility.yul\":1538:1541   */\n      dup4\n        /* \"#utility.yul\":1534:1548   */\n      add\n        /* \"#utility.yul\":1527:1548   */\n      swap3\n      pop\n        /* \"#utility.yul\":1362:1558   */\n      pop\n        /* \"#utility.yul\":1349:1350   */\n      0x01\n        /* \"#utility.yul\":1346:1347   */\n      dup2\n        /* \"#utility.yul\":1342:1351   */\n      add\n        /* \"#utility.yul\":1337:1351   */\n      swap1\n      pop\n        /* \"#utility.yul\":1302:1558   */\n      jump(tag_551)\n    tag_553:\n        /* \"#utility.yul\":1306:1320   */\n      pop\n        /* \"#utility.yul\":908:1564   */\n      pop\n      pop\n        /* \"#utility.yul\":788:1564   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1587:2309   */\n    tag_556:\n        /* \"#utility.yul\":1683:1688   */\n      0x00\n        /* \"#utility.yul\":1708:1789   */\n      tag_558\n        /* \"#utility.yul\":1724:1788   */\n      tag_559\n        /* \"#utility.yul\":1781:1787   */\n      dup5\n        /* \"#utility.yul\":1724:1788   */\n      tag_560\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":1708:1789   */\n      tag_535\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":1699:1789   */\n      swap1\n      pop\n        /* \"#utility.yul\":1809:1814   */\n      dup1\n        /* \"#utility.yul\":1838:1844   */\n      dup4\n        /* \"#utility.yul\":1831:1836   */\n      dup3\n        /* \"#utility.yul\":1824:1845   */\n      mstore\n        /* \"#utility.yul\":1872:1876   */\n      0x20\n        /* \"#utility.yul\":1865:1870   */\n      dup3\n        /* \"#utility.yul\":1861:1877   */\n      add\n        /* \"#utility.yul\":1854:1877   */\n      swap1\n      pop\n        /* \"#utility.yul\":1898:1904   */\n      dup3\n        /* \"#utility.yul\":1948:1951   */\n      dup6\n        /* \"#utility.yul\":1940:1944   */\n      0x20\n        /* \"#utility.yul\":1932:1938   */\n      dup7\n        /* \"#utility.yul\":1928:1945   */\n      mul\n        /* \"#utility.yul\":1923:1926   */\n      dup3\n        /* \"#utility.yul\":1919:1946   */\n      add\n        /* \"#utility.yul\":1916:1952   */\n      gt\n        /* \"#utility.yul\":1913:2056   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":1967:2046   */\n      tag_562\n      tag_538\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":1913:2056   */\n    tag_561:\n        /* \"#utility.yul\":2080:2081   */\n      0x00\n        /* \"#utility.yul\":2065:2303   */\n    tag_563:\n        /* \"#utility.yul\":2090:2096   */\n      dup6\n        /* \"#utility.yul\":2087:2088   */\n      dup2\n        /* \"#utility.yul\":2084:2097   */\n      lt\n        /* \"#utility.yul\":2065:2303   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":2158:2161   */\n      dup2\n        /* \"#utility.yul\":2187:2224   */\n      tag_566\n        /* \"#utility.yul\":2220:2223   */\n      dup9\n        /* \"#utility.yul\":2208:2218   */\n      dup3\n        /* \"#utility.yul\":2187:2224   */\n      tag_567\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":2182:2185   */\n      dup5\n        /* \"#utility.yul\":2175:2225   */\n      mstore\n        /* \"#utility.yul\":2254:2258   */\n      0x20\n        /* \"#utility.yul\":2249:2252   */\n      dup5\n        /* \"#utility.yul\":2245:2259   */\n      add\n        /* \"#utility.yul\":2238:2259   */\n      swap4\n      pop\n        /* \"#utility.yul\":2288:2292   */\n      0x20\n        /* \"#utility.yul\":2283:2286   */\n      dup4\n        /* \"#utility.yul\":2279:2293   */\n      add\n        /* \"#utility.yul\":2272:2293   */\n      swap3\n      pop\n        /* \"#utility.yul\":2125:2303   */\n      pop\n        /* \"#utility.yul\":2112:2113   */\n      0x01\n        /* \"#utility.yul\":2109:2110   */\n      dup2\n        /* \"#utility.yul\":2105:2114   */\n      add\n        /* \"#utility.yul\":2100:2114   */\n      swap1\n      pop\n        /* \"#utility.yul\":2065:2303   */\n      jump(tag_563)\n    tag_565:\n        /* \"#utility.yul\":2069:2083   */\n      pop\n        /* \"#utility.yul\":1689:2309   */\n      pop\n      pop\n        /* \"#utility.yul\":1587:2309   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2454   */\n    tag_543:\n        /* \"#utility.yul\":2361:2366   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup2\n        /* \"#utility.yul\":2386:2406   */\n      calldataload\n        /* \"#utility.yul\":2377:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2415:2448   */\n      tag_569\n        /* \"#utility.yul\":2442:2447   */\n      dup2\n        /* \"#utility.yul\":2415:2448   */\n      tag_570\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":2315:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2477:2847   */\n    tag_571:\n        /* \"#utility.yul\":2548:2553   */\n      0x00\n        /* \"#utility.yul\":2597:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2594   */\n      0x1f\n        /* \"#utility.yul\":2582:2588   */\n      dup4\n        /* \"#utility.yul\":2578:2595   */\n      add\n        /* \"#utility.yul\":2574:2601   */\n      slt\n        /* \"#utility.yul\":2564:2686   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":2605:2684   */\n      tag_574\n      tag_575\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":2564:2686   */\n    tag_573:\n        /* \"#utility.yul\":2722:2728   */\n      dup2\n        /* \"#utility.yul\":2709:2729   */\n      calldataload\n        /* \"#utility.yul\":2747:2841   */\n      tag_576\n        /* \"#utility.yul\":2837:2840   */\n      dup5\n        /* \"#utility.yul\":2829:2835   */\n      dup3\n        /* \"#utility.yul\":2822:2826   */\n      0x20\n        /* \"#utility.yul\":2814:2820   */\n      dup7\n        /* \"#utility.yul\":2810:2827   */\n      add\n        /* \"#utility.yul\":2747:2841   */\n      tag_530\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":2738:2841   */\n      swap2\n      pop\n        /* \"#utility.yul\":2554:2847   */\n      pop\n        /* \"#utility.yul\":2477:2847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3295   */\n    tag_577:\n        /* \"#utility.yul\":2978:2983   */\n      0x00\n        /* \"#utility.yul\":3027:3030   */\n      dup3\n        /* \"#utility.yul\":3020:3024   */\n      0x1f\n        /* \"#utility.yul\":3012:3018   */\n      dup4\n        /* \"#utility.yul\":3008:3025   */\n      add\n        /* \"#utility.yul\":3004:3031   */\n      slt\n        /* \"#utility.yul\":2994:3116   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":3035:3114   */\n      tag_580\n      tag_575\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":2994:3116   */\n    tag_579:\n        /* \"#utility.yul\":3152:3158   */\n      dup2\n        /* \"#utility.yul\":3139:3159   */\n      calldataload\n        /* \"#utility.yul\":3177:3289   */\n      tag_581\n        /* \"#utility.yul\":3285:3288   */\n      dup5\n        /* \"#utility.yul\":3277:3283   */\n      dup3\n        /* \"#utility.yul\":3270:3274   */\n      0x20\n        /* \"#utility.yul\":3262:3268   */\n      dup7\n        /* \"#utility.yul\":3258:3275   */\n      add\n        /* \"#utility.yul\":3177:3289   */\n      tag_544\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":3168:3289   */\n      swap2\n      pop\n        /* \"#utility.yul\":2984:3295   */\n      pop\n        /* \"#utility.yul\":2889:3295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3318:3688   */\n    tag_582:\n        /* \"#utility.yul\":3389:3394   */\n      0x00\n        /* \"#utility.yul\":3438:3441   */\n      dup3\n        /* \"#utility.yul\":3431:3435   */\n      0x1f\n        /* \"#utility.yul\":3423:3429   */\n      dup4\n        /* \"#utility.yul\":3419:3436   */\n      add\n        /* \"#utility.yul\":3415:3442   */\n      slt\n        /* \"#utility.yul\":3405:3527   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":3446:3525   */\n      tag_585\n      tag_575\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":3405:3527   */\n    tag_584:\n        /* \"#utility.yul\":3563:3569   */\n      dup2\n        /* \"#utility.yul\":3550:3570   */\n      calldataload\n        /* \"#utility.yul\":3588:3682   */\n      tag_586\n        /* \"#utility.yul\":3678:3681   */\n      dup5\n        /* \"#utility.yul\":3670:3676   */\n      dup3\n        /* \"#utility.yul\":3663:3667   */\n      0x20\n        /* \"#utility.yul\":3655:3661   */\n      dup7\n        /* \"#utility.yul\":3651:3668   */\n      add\n        /* \"#utility.yul\":3588:3682   */\n      tag_556\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":3579:3682   */\n      swap2\n      pop\n        /* \"#utility.yul\":3395:3688   */\n      pop\n        /* \"#utility.yul\":3318:3688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3694:3831   */\n    tag_587:\n        /* \"#utility.yul\":3748:3753   */\n      0x00\n        /* \"#utility.yul\":3779:3785   */\n      dup2\n        /* \"#utility.yul\":3773:3786   */\n      mload\n        /* \"#utility.yul\":3764:3786   */\n      swap1\n      pop\n        /* \"#utility.yul\":3795:3825   */\n      tag_589\n        /* \"#utility.yul\":3819:3824   */\n      dup2\n        /* \"#utility.yul\":3795:3825   */\n      tag_590\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":3694:3831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3837:4012   */\n    tag_555:\n        /* \"#utility.yul\":3901:3906   */\n      0x00\n        /* \"#utility.yul\":3939:3945   */\n      dup2\n        /* \"#utility.yul\":3926:3946   */\n      calldataload\n        /* \"#utility.yul\":3917:3946   */\n      swap1\n      pop\n        /* \"#utility.yul\":3955:4006   */\n      tag_592\n        /* \"#utility.yul\":4000:4005   */\n      dup2\n        /* \"#utility.yul\":3955:4006   */\n      tag_593\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":3837:4012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4018:4157   */\n    tag_567:\n        /* \"#utility.yul\":4064:4069   */\n      0x00\n        /* \"#utility.yul\":4102:4108   */\n      dup2\n        /* \"#utility.yul\":4089:4109   */\n      calldataload\n        /* \"#utility.yul\":4080:4109   */\n      swap1\n      pop\n        /* \"#utility.yul\":4118:4151   */\n      tag_595\n        /* \"#utility.yul\":4145:4150   */\n      dup2\n        /* \"#utility.yul\":4118:4151   */\n      tag_596\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":4018:4157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4163:4306   */\n    tag_597:\n        /* \"#utility.yul\":4220:4225   */\n      0x00\n        /* \"#utility.yul\":4251:4257   */\n      dup2\n        /* \"#utility.yul\":4245:4258   */\n      mload\n        /* \"#utility.yul\":4236:4258   */\n      swap1\n      pop\n        /* \"#utility.yul\":4267:4300   */\n      tag_599\n        /* \"#utility.yul\":4294:4299   */\n      dup2\n        /* \"#utility.yul\":4267:4300   */\n      tag_596\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":4163:4306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4312:4641   */\n    tag_56:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4420:4422   */\n      0x20\n        /* \"#utility.yul\":4408:4417   */\n      dup3\n        /* \"#utility.yul\":4399:4406   */\n      dup5\n        /* \"#utility.yul\":4395:4418   */\n      sub\n        /* \"#utility.yul\":4391:4423   */\n      slt\n        /* \"#utility.yul\":4388:4507   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":4426:4505   */\n      tag_602\n      tag_603\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":4388:4507   */\n    tag_601:\n        /* \"#utility.yul\":4546:4547   */\n      0x00\n        /* \"#utility.yul\":4571:4624   */\n      tag_604\n        /* \"#utility.yul\":4616:4623   */\n      dup5\n        /* \"#utility.yul\":4607:4613   */\n      dup3\n        /* \"#utility.yul\":4596:4605   */\n      dup6\n        /* \"#utility.yul\":4592:4614   */\n      add\n        /* \"#utility.yul\":4571:4624   */\n      tag_543\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":4561:4624   */\n      swap2\n      pop\n        /* \"#utility.yul\":4517:4634   */\n      pop\n        /* \"#utility.yul\":4312:4641   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4647:5157   */\n    tag_34:\n        /* \"#utility.yul\":4733:4739   */\n      0x00\n        /* \"#utility.yul\":4741:4747   */\n      dup1\n        /* \"#utility.yul\":4790:4792   */\n      0x40\n        /* \"#utility.yul\":4778:4787   */\n      dup4\n        /* \"#utility.yul\":4769:4776   */\n      dup6\n        /* \"#utility.yul\":4765:4788   */\n      sub\n        /* \"#utility.yul\":4761:4793   */\n      slt\n        /* \"#utility.yul\":4758:4877   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":4796:4875   */\n      tag_607\n      tag_603\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":4758:4877   */\n    tag_606:\n        /* \"#utility.yul\":4916:4917   */\n      0x00\n        /* \"#utility.yul\":4941:4994   */\n      tag_608\n        /* \"#utility.yul\":4986:4993   */\n      dup6\n        /* \"#utility.yul\":4977:4983   */\n      dup3\n        /* \"#utility.yul\":4966:4975   */\n      dup7\n        /* \"#utility.yul\":4962:4984   */\n      add\n        /* \"#utility.yul\":4941:4994   */\n      tag_543\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":4931:4994   */\n      swap3\n      pop\n        /* \"#utility.yul\":4887:5004   */\n      pop\n        /* \"#utility.yul\":5043:5045   */\n      0x20\n        /* \"#utility.yul\":5069:5140   */\n      tag_609\n        /* \"#utility.yul\":5132:5139   */\n      dup6\n        /* \"#utility.yul\":5123:5129   */\n      dup3\n        /* \"#utility.yul\":5112:5121   */\n      dup7\n        /* \"#utility.yul\":5108:5130   */\n      add\n        /* \"#utility.yul\":5069:5140   */\n      tag_555\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":5059:5140   */\n      swap2\n      pop\n        /* \"#utility.yul\":5014:5150   */\n      pop\n        /* \"#utility.yul\":4647:5157   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5163:6804   */\n    tag_60:\n        /* \"#utility.yul\":5367:5373   */\n      0x00\n        /* \"#utility.yul\":5375:5381   */\n      dup1\n        /* \"#utility.yul\":5383:5389   */\n      0x00\n        /* \"#utility.yul\":5391:5397   */\n      dup1\n        /* \"#utility.yul\":5440:5443   */\n      0x80\n        /* \"#utility.yul\":5428:5437   */\n      dup6\n        /* \"#utility.yul\":5419:5426   */\n      dup8\n        /* \"#utility.yul\":5415:5438   */\n      sub\n        /* \"#utility.yul\":5411:5444   */\n      slt\n        /* \"#utility.yul\":5408:5528   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":5447:5526   */\n      tag_612\n      tag_603\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":5408:5528   */\n    tag_611:\n        /* \"#utility.yul\":5595:5596   */\n      0x00\n        /* \"#utility.yul\":5584:5593   */\n      dup6\n        /* \"#utility.yul\":5580:5597   */\n      add\n        /* \"#utility.yul\":5567:5598   */\n      calldataload\n        /* \"#utility.yul\":5625:5643   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5617:5623   */\n      dup2\n        /* \"#utility.yul\":5614:5644   */\n      gt\n        /* \"#utility.yul\":5611:5728   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":5647:5726   */\n      tag_614\n      tag_615\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":5611:5728   */\n    tag_613:\n        /* \"#utility.yul\":5752:5830   */\n      tag_616\n        /* \"#utility.yul\":5822:5829   */\n      dup8\n        /* \"#utility.yul\":5813:5819   */\n      dup3\n        /* \"#utility.yul\":5802:5811   */\n      dup9\n        /* \"#utility.yul\":5798:5820   */\n      add\n        /* \"#utility.yul\":5752:5830   */\n      tag_571\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":5742:5830   */\n      swap5\n      pop\n        /* \"#utility.yul\":5538:5840   */\n      pop\n        /* \"#utility.yul\":5907:5909   */\n      0x20\n        /* \"#utility.yul\":5896:5905   */\n      dup6\n        /* \"#utility.yul\":5892:5910   */\n      add\n        /* \"#utility.yul\":5879:5911   */\n      calldataload\n        /* \"#utility.yul\":5938:5956   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5930:5936   */\n      dup2\n        /* \"#utility.yul\":5927:5957   */\n      gt\n        /* \"#utility.yul\":5924:6041   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":5960:6039   */\n      tag_618\n      tag_615\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":5924:6041   */\n    tag_617:\n        /* \"#utility.yul\":6065:6143   */\n      tag_619\n        /* \"#utility.yul\":6135:6142   */\n      dup8\n        /* \"#utility.yul\":6126:6132   */\n      dup3\n        /* \"#utility.yul\":6115:6124   */\n      dup9\n        /* \"#utility.yul\":6111:6133   */\n      add\n        /* \"#utility.yul\":6065:6143   */\n      tag_582\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":6055:6143   */\n      swap4\n      pop\n        /* \"#utility.yul\":5850:6153   */\n      pop\n        /* \"#utility.yul\":6220:6222   */\n      0x40\n        /* \"#utility.yul\":6209:6218   */\n      dup6\n        /* \"#utility.yul\":6205:6223   */\n      add\n        /* \"#utility.yul\":6192:6224   */\n      calldataload\n        /* \"#utility.yul\":6251:6269   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6243:6249   */\n      dup2\n        /* \"#utility.yul\":6240:6270   */\n      gt\n        /* \"#utility.yul\":6237:6354   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":6273:6352   */\n      tag_621\n      tag_615\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":6237:6354   */\n    tag_620:\n        /* \"#utility.yul\":6378:6474   */\n      tag_622\n        /* \"#utility.yul\":6466:6473   */\n      dup8\n        /* \"#utility.yul\":6457:6463   */\n      dup3\n        /* \"#utility.yul\":6446:6455   */\n      dup9\n        /* \"#utility.yul\":6442:6464   */\n      add\n        /* \"#utility.yul\":6378:6474   */\n      tag_577\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":6368:6474   */\n      swap3\n      pop\n        /* \"#utility.yul\":6163:6484   */\n      pop\n        /* \"#utility.yul\":6551:6553   */\n      0x60\n        /* \"#utility.yul\":6540:6549   */\n      dup6\n        /* \"#utility.yul\":6536:6554   */\n      add\n        /* \"#utility.yul\":6523:6555   */\n      calldataload\n        /* \"#utility.yul\":6582:6600   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6574:6580   */\n      dup2\n        /* \"#utility.yul\":6571:6601   */\n      gt\n        /* \"#utility.yul\":6568:6685   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":6604:6683   */\n      tag_624\n      tag_615\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":6568:6685   */\n    tag_623:\n        /* \"#utility.yul\":6709:6787   */\n      tag_625\n        /* \"#utility.yul\":6779:6786   */\n      dup8\n        /* \"#utility.yul\":6770:6776   */\n      dup3\n        /* \"#utility.yul\":6759:6768   */\n      dup9\n        /* \"#utility.yul\":6755:6777   */\n      add\n        /* \"#utility.yul\":6709:6787   */\n      tag_582\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":6699:6787   */\n      swap2\n      pop\n        /* \"#utility.yul\":6494:6797   */\n      pop\n        /* \"#utility.yul\":5163:6804   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6810:7155   */\n    tag_160:\n        /* \"#utility.yul\":6877:6883   */\n      0x00\n        /* \"#utility.yul\":6926:6928   */\n      0x20\n        /* \"#utility.yul\":6914:6923   */\n      dup3\n        /* \"#utility.yul\":6905:6912   */\n      dup5\n        /* \"#utility.yul\":6901:6924   */\n      sub\n        /* \"#utility.yul\":6897:6929   */\n      slt\n        /* \"#utility.yul\":6894:7013   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":6932:7011   */\n      tag_628\n      tag_603\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":6894:7013   */\n    tag_627:\n        /* \"#utility.yul\":7052:7053   */\n      0x00\n        /* \"#utility.yul\":7077:7138   */\n      tag_629\n        /* \"#utility.yul\":7130:7137   */\n      dup5\n        /* \"#utility.yul\":7121:7127   */\n      dup3\n        /* \"#utility.yul\":7110:7119   */\n      dup6\n        /* \"#utility.yul\":7106:7128   */\n      add\n        /* \"#utility.yul\":7077:7138   */\n      tag_587\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":7067:7138   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7148   */\n      pop\n        /* \"#utility.yul\":6810:7155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7161:7526   */\n    tag_40:\n        /* \"#utility.yul\":7238:7244   */\n      0x00\n        /* \"#utility.yul\":7287:7289   */\n      0x20\n        /* \"#utility.yul\":7275:7284   */\n      dup3\n        /* \"#utility.yul\":7266:7273   */\n      dup5\n        /* \"#utility.yul\":7262:7285   */\n      sub\n        /* \"#utility.yul\":7258:7290   */\n      slt\n        /* \"#utility.yul\":7255:7374   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":7293:7372   */\n      tag_632\n      tag_603\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":7255:7374   */\n    tag_631:\n        /* \"#utility.yul\":7413:7414   */\n      0x00\n        /* \"#utility.yul\":7438:7509   */\n      tag_633\n        /* \"#utility.yul\":7501:7508   */\n      dup5\n        /* \"#utility.yul\":7492:7498   */\n      dup3\n        /* \"#utility.yul\":7481:7490   */\n      dup6\n        /* \"#utility.yul\":7477:7499   */\n      add\n        /* \"#utility.yul\":7438:7509   */\n      tag_555\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":7428:7509   */\n      swap2\n      pop\n        /* \"#utility.yul\":7384:7519   */\n      pop\n        /* \"#utility.yul\":7161:7526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7532:7861   */\n    tag_68:\n        /* \"#utility.yul\":7591:7597   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x20\n        /* \"#utility.yul\":7628:7637   */\n      dup3\n        /* \"#utility.yul\":7619:7626   */\n      dup5\n        /* \"#utility.yul\":7615:7638   */\n      sub\n        /* \"#utility.yul\":7611:7643   */\n      slt\n        /* \"#utility.yul\":7608:7727   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":7646:7725   */\n      tag_636\n      tag_603\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":7608:7727   */\n    tag_635:\n        /* \"#utility.yul\":7766:7767   */\n      0x00\n        /* \"#utility.yul\":7791:7844   */\n      tag_637\n        /* \"#utility.yul\":7836:7843   */\n      dup5\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7816:7825   */\n      dup6\n        /* \"#utility.yul\":7812:7834   */\n      add\n        /* \"#utility.yul\":7791:7844   */\n      tag_567\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":7781:7844   */\n      swap2\n      pop\n        /* \"#utility.yul\":7737:7854   */\n      pop\n        /* \"#utility.yul\":7532:7861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7867:8218   */\n    tag_357:\n        /* \"#utility.yul\":7937:7943   */\n      0x00\n        /* \"#utility.yul\":7986:7988   */\n      0x20\n        /* \"#utility.yul\":7974:7983   */\n      dup3\n        /* \"#utility.yul\":7965:7972   */\n      dup5\n        /* \"#utility.yul\":7961:7984   */\n      sub\n        /* \"#utility.yul\":7957:7989   */\n      slt\n        /* \"#utility.yul\":7954:8073   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":7992:8071   */\n      tag_640\n      tag_603\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":7954:8073   */\n    tag_639:\n        /* \"#utility.yul\":8112:8113   */\n      0x00\n        /* \"#utility.yul\":8137:8201   */\n      tag_641\n        /* \"#utility.yul\":8193:8200   */\n      dup5\n        /* \"#utility.yul\":8184:8190   */\n      dup3\n        /* \"#utility.yul\":8173:8182   */\n      dup6\n        /* \"#utility.yul\":8169:8191   */\n      add\n        /* \"#utility.yul\":8137:8201   */\n      tag_597\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":8127:8201   */\n      swap2\n      pop\n        /* \"#utility.yul\":8083:8211   */\n      pop\n        /* \"#utility.yul\":7867:8218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8224:8734   */\n    tag_64:\n        /* \"#utility.yul\":8310:8316   */\n      0x00\n        /* \"#utility.yul\":8318:8324   */\n      dup1\n        /* \"#utility.yul\":8367:8369   */\n      0x40\n        /* \"#utility.yul\":8355:8364   */\n      dup4\n        /* \"#utility.yul\":8346:8353   */\n      dup6\n        /* \"#utility.yul\":8342:8365   */\n      sub\n        /* \"#utility.yul\":8338:8370   */\n      slt\n        /* \"#utility.yul\":8335:8454   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":8373:8452   */\n      tag_644\n      tag_603\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":8335:8454   */\n    tag_643:\n        /* \"#utility.yul\":8493:8494   */\n      0x00\n        /* \"#utility.yul\":8518:8571   */\n      tag_645\n        /* \"#utility.yul\":8563:8570   */\n      dup6\n        /* \"#utility.yul\":8554:8560   */\n      dup3\n        /* \"#utility.yul\":8543:8552   */\n      dup7\n        /* \"#utility.yul\":8539:8561   */\n      add\n        /* \"#utility.yul\":8518:8571   */\n      tag_567\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":8508:8571   */\n      swap3\n      pop\n        /* \"#utility.yul\":8464:8581   */\n      pop\n        /* \"#utility.yul\":8620:8622   */\n      0x20\n        /* \"#utility.yul\":8646:8717   */\n      tag_646\n        /* \"#utility.yul\":8709:8716   */\n      dup6\n        /* \"#utility.yul\":8700:8706   */\n      dup3\n        /* \"#utility.yul\":8689:8698   */\n      dup7\n        /* \"#utility.yul\":8685:8707   */\n      add\n        /* \"#utility.yul\":8646:8717   */\n      tag_555\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":8636:8717   */\n      swap2\n      pop\n        /* \"#utility.yul\":8591:8727   */\n      pop\n        /* \"#utility.yul\":8224:8734   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8740:8858   */\n    tag_647:\n        /* \"#utility.yul\":8827:8851   */\n      tag_649\n        /* \"#utility.yul\":8845:8850   */\n      dup2\n        /* \"#utility.yul\":8827:8851   */\n      tag_650\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":8822:8825   */\n      dup3\n        /* \"#utility.yul\":8815:8852   */\n      mstore\n        /* \"#utility.yul\":8740:8858   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:9023   */\n    tag_651:\n        /* \"#utility.yul\":8965:9016   */\n      tag_653\n        /* \"#utility.yul\":9010:9015   */\n      dup2\n        /* \"#utility.yul\":8965:9016   */\n      tag_654\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":8960:8963   */\n      dup3\n        /* \"#utility.yul\":8953:9017   */\n      mstore\n        /* \"#utility.yul\":8864:9023   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9029:9192   */\n    tag_655:\n        /* \"#utility.yul\":9132:9185   */\n      tag_657\n        /* \"#utility.yul\":9179:9184   */\n      dup2\n        /* \"#utility.yul\":9132:9185   */\n      tag_658\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":9127:9130   */\n      dup3\n        /* \"#utility.yul\":9120:9186   */\n      mstore\n        /* \"#utility.yul\":9029:9192   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9198:9564   */\n    tag_659:\n        /* \"#utility.yul\":9340:9343   */\n      0x00\n        /* \"#utility.yul\":9361:9428   */\n      tag_661\n        /* \"#utility.yul\":9425:9427   */\n      0x1e\n        /* \"#utility.yul\":9420:9423   */\n      dup4\n        /* \"#utility.yul\":9361:9428   */\n      tag_662\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":9354:9428   */\n      swap2\n      pop\n        /* \"#utility.yul\":9437:9530   */\n      tag_663\n        /* \"#utility.yul\":9526:9529   */\n      dup3\n        /* \"#utility.yul\":9437:9530   */\n      tag_664\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":9555:9557   */\n      0x20\n        /* \"#utility.yul\":9550:9553   */\n      dup3\n        /* \"#utility.yul\":9546:9558   */\n      add\n        /* \"#utility.yul\":9539:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9198:9564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9570:9936   */\n    tag_665:\n        /* \"#utility.yul\":9712:9715   */\n      0x00\n        /* \"#utility.yul\":9733:9800   */\n      tag_667\n        /* \"#utility.yul\":9797:9799   */\n      0x1d\n        /* \"#utility.yul\":9792:9795   */\n      dup4\n        /* \"#utility.yul\":9733:9800   */\n      tag_662\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":9726:9800   */\n      swap2\n      pop\n        /* \"#utility.yul\":9809:9902   */\n      tag_668\n        /* \"#utility.yul\":9898:9901   */\n      dup3\n        /* \"#utility.yul\":9809:9902   */\n      tag_669\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":9927:9929   */\n      0x20\n        /* \"#utility.yul\":9922:9925   */\n      dup3\n        /* \"#utility.yul\":9918:9930   */\n      add\n        /* \"#utility.yul\":9911:9930   */\n      swap1\n      pop\n        /* \"#utility.yul\":9570:9936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9942:10308   */\n    tag_670:\n        /* \"#utility.yul\":10084:10087   */\n      0x00\n        /* \"#utility.yul\":10105:10172   */\n      tag_672\n        /* \"#utility.yul\":10169:10171   */\n      0x15\n        /* \"#utility.yul\":10164:10167   */\n      dup4\n        /* \"#utility.yul\":10105:10172   */\n      tag_662\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":10098:10172   */\n      swap2\n      pop\n        /* \"#utility.yul\":10181:10274   */\n      tag_673\n        /* \"#utility.yul\":10270:10273   */\n      dup3\n        /* \"#utility.yul\":10181:10274   */\n      tag_674\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":10299:10301   */\n      0x20\n        /* \"#utility.yul\":10294:10297   */\n      dup3\n        /* \"#utility.yul\":10290:10302   */\n      add\n        /* \"#utility.yul\":10283:10302   */\n      swap1\n      pop\n        /* \"#utility.yul\":9942:10308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10314:10680   */\n    tag_675:\n        /* \"#utility.yul\":10456:10459   */\n      0x00\n        /* \"#utility.yul\":10477:10544   */\n      tag_677\n        /* \"#utility.yul\":10541:10543   */\n      0x26\n        /* \"#utility.yul\":10536:10539   */\n      dup4\n        /* \"#utility.yul\":10477:10544   */\n      tag_662\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":10470:10544   */\n      swap2\n      pop\n        /* \"#utility.yul\":10553:10646   */\n      tag_678\n        /* \"#utility.yul\":10642:10645   */\n      dup3\n        /* \"#utility.yul\":10553:10646   */\n      tag_679\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":10671:10673   */\n      0x40\n        /* \"#utility.yul\":10666:10669   */\n      dup3\n        /* \"#utility.yul\":10662:10674   */\n      add\n        /* \"#utility.yul\":10655:10674   */\n      swap1\n      pop\n        /* \"#utility.yul\":10314:10680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10686:11052   */\n    tag_680:\n        /* \"#utility.yul\":10828:10831   */\n      0x00\n        /* \"#utility.yul\":10849:10916   */\n      tag_682\n        /* \"#utility.yul\":10913:10915   */\n      0x20\n        /* \"#utility.yul\":10908:10911   */\n      dup4\n        /* \"#utility.yul\":10849:10916   */\n      tag_662\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":10842:10916   */\n      swap2\n      pop\n        /* \"#utility.yul\":10925:11018   */\n      tag_683\n        /* \"#utility.yul\":11014:11017   */\n      dup3\n        /* \"#utility.yul\":10925:11018   */\n      tag_684\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":11043:11045   */\n      0x20\n        /* \"#utility.yul\":11038:11041   */\n      dup3\n        /* \"#utility.yul\":11034:11046   */\n      add\n        /* \"#utility.yul\":11027:11046   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:11052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11058:11424   */\n    tag_685:\n        /* \"#utility.yul\":11200:11203   */\n      0x00\n        /* \"#utility.yul\":11221:11288   */\n      tag_687\n        /* \"#utility.yul\":11285:11287   */\n      0x14\n        /* \"#utility.yul\":11280:11283   */\n      dup4\n        /* \"#utility.yul\":11221:11288   */\n      tag_662\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":11214:11288   */\n      swap2\n      pop\n        /* \"#utility.yul\":11297:11390   */\n      tag_688\n        /* \"#utility.yul\":11386:11389   */\n      dup3\n        /* \"#utility.yul\":11297:11390   */\n      tag_689\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":11415:11417   */\n      0x20\n        /* \"#utility.yul\":11410:11413   */\n      dup3\n        /* \"#utility.yul\":11406:11418   */\n      add\n        /* \"#utility.yul\":11399:11418   */\n      swap1\n      pop\n        /* \"#utility.yul\":11058:11424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11430:11548   */\n    tag_690:\n        /* \"#utility.yul\":11517:11541   */\n      tag_692\n        /* \"#utility.yul\":11535:11540   */\n      dup2\n        /* \"#utility.yul\":11517:11541   */\n      tag_693\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":11512:11515   */\n      dup3\n        /* \"#utility.yul\":11505:11542   */\n      mstore\n        /* \"#utility.yul\":11430:11548   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11554:11776   */\n    tag_93:\n        /* \"#utility.yul\":11647:11651   */\n      0x00\n        /* \"#utility.yul\":11685:11687   */\n      0x20\n        /* \"#utility.yul\":11674:11683   */\n      dup3\n        /* \"#utility.yul\":11670:11688   */\n      add\n        /* \"#utility.yul\":11662:11688   */\n      swap1\n      pop\n        /* \"#utility.yul\":11698:11769   */\n      tag_695\n        /* \"#utility.yul\":11766:11767   */\n      0x00\n        /* \"#utility.yul\":11755:11764   */\n      dup4\n        /* \"#utility.yul\":11751:11768   */\n      add\n        /* \"#utility.yul\":11742:11748   */\n      dup5\n        /* \"#utility.yul\":11698:11769   */\n      tag_647\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":11554:11776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11782:12114   */\n    tag_360:\n        /* \"#utility.yul\":11903:11907   */\n      0x00\n        /* \"#utility.yul\":11941:11943   */\n      0x40\n        /* \"#utility.yul\":11930:11939   */\n      dup3\n        /* \"#utility.yul\":11926:11944   */\n      add\n        /* \"#utility.yul\":11918:11944   */\n      swap1\n      pop\n        /* \"#utility.yul\":11954:12025   */\n      tag_697\n        /* \"#utility.yul\":12022:12023   */\n      0x00\n        /* \"#utility.yul\":12011:12020   */\n      dup4\n        /* \"#utility.yul\":12007:12024   */\n      add\n        /* \"#utility.yul\":11998:12004   */\n      dup6\n        /* \"#utility.yul\":11954:12025   */\n      tag_647\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":12035:12107   */\n      tag_698\n        /* \"#utility.yul\":12103:12105   */\n      0x20\n        /* \"#utility.yul\":12092:12101   */\n      dup4\n        /* \"#utility.yul\":12088:12106   */\n      add\n        /* \"#utility.yul\":12079:12085   */\n      dup5\n        /* \"#utility.yul\":12035:12107   */\n      tag_647\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":11782:12114   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12120:12562   */\n    tag_155:\n        /* \"#utility.yul\":12269:12273   */\n      0x00\n        /* \"#utility.yul\":12307:12309   */\n      0x60\n        /* \"#utility.yul\":12296:12305   */\n      dup3\n        /* \"#utility.yul\":12292:12310   */\n      add\n        /* \"#utility.yul\":12284:12310   */\n      swap1\n      pop\n        /* \"#utility.yul\":12320:12391   */\n      tag_700\n        /* \"#utility.yul\":12388:12389   */\n      0x00\n        /* \"#utility.yul\":12377:12386   */\n      dup4\n        /* \"#utility.yul\":12373:12390   */\n      add\n        /* \"#utility.yul\":12364:12370   */\n      dup7\n        /* \"#utility.yul\":12320:12391   */\n      tag_647\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":12401:12473   */\n      tag_701\n        /* \"#utility.yul\":12469:12471   */\n      0x20\n        /* \"#utility.yul\":12458:12467   */\n      dup4\n        /* \"#utility.yul\":12454:12472   */\n      add\n        /* \"#utility.yul\":12445:12451   */\n      dup6\n        /* \"#utility.yul\":12401:12473   */\n      tag_647\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":12483:12555   */\n      tag_702\n        /* \"#utility.yul\":12551:12553   */\n      0x40\n        /* \"#utility.yul\":12540:12549   */\n      dup4\n        /* \"#utility.yul\":12536:12554   */\n      add\n        /* \"#utility.yul\":12527:12533   */\n      dup5\n        /* \"#utility.yul\":12483:12555   */\n      tag_690\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":12120:12562   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12568:12900   */\n    tag_323:\n        /* \"#utility.yul\":12689:12693   */\n      0x00\n        /* \"#utility.yul\":12727:12729   */\n      0x40\n        /* \"#utility.yul\":12716:12725   */\n      dup3\n        /* \"#utility.yul\":12712:12730   */\n      add\n        /* \"#utility.yul\":12704:12730   */\n      swap1\n      pop\n        /* \"#utility.yul\":12740:12811   */\n      tag_704\n        /* \"#utility.yul\":12808:12809   */\n      0x00\n        /* \"#utility.yul\":12797:12806   */\n      dup4\n        /* \"#utility.yul\":12793:12810   */\n      add\n        /* \"#utility.yul\":12784:12790   */\n      dup6\n        /* \"#utility.yul\":12740:12811   */\n      tag_647\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":12821:12893   */\n      tag_705\n        /* \"#utility.yul\":12889:12891   */\n      0x20\n        /* \"#utility.yul\":12878:12887   */\n      dup4\n        /* \"#utility.yul\":12874:12892   */\n      add\n        /* \"#utility.yul\":12865:12871   */\n      dup5\n        /* \"#utility.yul\":12821:12893   */\n      tag_690\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":12568:12900   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12906:13156   */\n    tag_108:\n        /* \"#utility.yul\":13013:13017   */\n      0x00\n        /* \"#utility.yul\":13051:13053   */\n      0x20\n        /* \"#utility.yul\":13040:13049   */\n      dup3\n        /* \"#utility.yul\":13036:13054   */\n      add\n        /* \"#utility.yul\":13028:13054   */\n      swap1\n      pop\n        /* \"#utility.yul\":13064:13149   */\n      tag_707\n        /* \"#utility.yul\":13146:13147   */\n      0x00\n        /* \"#utility.yul\":13135:13144   */\n      dup4\n        /* \"#utility.yul\":13131:13148   */\n      add\n        /* \"#utility.yul\":13122:13128   */\n      dup5\n        /* \"#utility.yul\":13064:13149   */\n      tag_651\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":12906:13156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13162:13416   */\n    tag_37:\n        /* \"#utility.yul\":13271:13275   */\n      0x00\n        /* \"#utility.yul\":13309:13311   */\n      0x20\n        /* \"#utility.yul\":13298:13307   */\n      dup3\n        /* \"#utility.yul\":13294:13312   */\n      add\n        /* \"#utility.yul\":13286:13312   */\n      swap1\n      pop\n        /* \"#utility.yul\":13322:13409   */\n      tag_709\n        /* \"#utility.yul\":13406:13407   */\n      0x00\n        /* \"#utility.yul\":13395:13404   */\n      dup4\n        /* \"#utility.yul\":13391:13408   */\n      add\n        /* \"#utility.yul\":13382:13388   */\n      dup5\n        /* \"#utility.yul\":13322:13409   */\n      tag_655\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":13162:13416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13422:13841   */\n    tag_176:\n        /* \"#utility.yul\":13588:13592   */\n      0x00\n        /* \"#utility.yul\":13626:13628   */\n      0x20\n        /* \"#utility.yul\":13615:13624   */\n      dup3\n        /* \"#utility.yul\":13611:13629   */\n      add\n        /* \"#utility.yul\":13603:13629   */\n      swap1\n      pop\n        /* \"#utility.yul\":13675:13684   */\n      dup2\n        /* \"#utility.yul\":13669:13673   */\n      dup2\n        /* \"#utility.yul\":13665:13685   */\n      sub\n        /* \"#utility.yul\":13661:13662   */\n      0x00\n        /* \"#utility.yul\":13650:13659   */\n      dup4\n        /* \"#utility.yul\":13646:13663   */\n      add\n        /* \"#utility.yul\":13639:13686   */\n      mstore\n        /* \"#utility.yul\":13703:13834   */\n      tag_711\n        /* \"#utility.yul\":13829:13833   */\n      dup2\n        /* \"#utility.yul\":13703:13834   */\n      tag_659\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":13695:13834   */\n      swap1\n      pop\n        /* \"#utility.yul\":13422:13841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13847:14266   */\n    tag_300:\n        /* \"#utility.yul\":14013:14017   */\n      0x00\n        /* \"#utility.yul\":14051:14053   */\n      0x20\n        /* \"#utility.yul\":14040:14049   */\n      dup3\n        /* \"#utility.yul\":14036:14054   */\n      add\n        /* \"#utility.yul\":14028:14054   */\n      swap1\n      pop\n        /* \"#utility.yul\":14100:14109   */\n      dup2\n        /* \"#utility.yul\":14094:14098   */\n      dup2\n        /* \"#utility.yul\":14090:14110   */\n      sub\n        /* \"#utility.yul\":14086:14087   */\n      0x00\n        /* \"#utility.yul\":14075:14084   */\n      dup4\n        /* \"#utility.yul\":14071:14088   */\n      add\n        /* \"#utility.yul\":14064:14111   */\n      mstore\n        /* \"#utility.yul\":14128:14259   */\n      tag_713\n        /* \"#utility.yul\":14254:14258   */\n      dup2\n        /* \"#utility.yul\":14128:14259   */\n      tag_665\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":14120:14259   */\n      swap1\n      pop\n        /* \"#utility.yul\":13847:14266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14691   */\n    tag_163:\n        /* \"#utility.yul\":14438:14442   */\n      0x00\n        /* \"#utility.yul\":14476:14478   */\n      0x20\n        /* \"#utility.yul\":14465:14474   */\n      dup3\n        /* \"#utility.yul\":14461:14479   */\n      add\n        /* \"#utility.yul\":14453:14479   */\n      swap1\n      pop\n        /* \"#utility.yul\":14525:14534   */\n      dup2\n        /* \"#utility.yul\":14519:14523   */\n      dup2\n        /* \"#utility.yul\":14515:14535   */\n      sub\n        /* \"#utility.yul\":14511:14512   */\n      0x00\n        /* \"#utility.yul\":14500:14509   */\n      dup4\n        /* \"#utility.yul\":14496:14513   */\n      add\n        /* \"#utility.yul\":14489:14536   */\n      mstore\n        /* \"#utility.yul\":14553:14684   */\n      tag_715\n        /* \"#utility.yul\":14679:14683   */\n      dup2\n        /* \"#utility.yul\":14553:14684   */\n      tag_670\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":14545:14684   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14697:15116   */\n    tag_426:\n        /* \"#utility.yul\":14863:14867   */\n      0x00\n        /* \"#utility.yul\":14901:14903   */\n      0x20\n        /* \"#utility.yul\":14890:14899   */\n      dup3\n        /* \"#utility.yul\":14886:14904   */\n      add\n        /* \"#utility.yul\":14878:14904   */\n      swap1\n      pop\n        /* \"#utility.yul\":14950:14959   */\n      dup2\n        /* \"#utility.yul\":14944:14948   */\n      dup2\n        /* \"#utility.yul\":14940:14960   */\n      sub\n        /* \"#utility.yul\":14936:14937   */\n      0x00\n        /* \"#utility.yul\":14925:14934   */\n      dup4\n        /* \"#utility.yul\":14921:14938   */\n      add\n        /* \"#utility.yul\":14914:14961   */\n      mstore\n        /* \"#utility.yul\":14978:15109   */\n      tag_717\n        /* \"#utility.yul\":15104:15108   */\n      dup2\n        /* \"#utility.yul\":14978:15109   */\n      tag_675\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":14970:15109   */\n      swap1\n      pop\n        /* \"#utility.yul\":14697:15116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15122:15541   */\n    tag_457:\n        /* \"#utility.yul\":15288:15292   */\n      0x00\n        /* \"#utility.yul\":15326:15328   */\n      0x20\n        /* \"#utility.yul\":15315:15324   */\n      dup3\n        /* \"#utility.yul\":15311:15329   */\n      add\n        /* \"#utility.yul\":15303:15329   */\n      swap1\n      pop\n        /* \"#utility.yul\":15375:15384   */\n      dup2\n        /* \"#utility.yul\":15369:15373   */\n      dup2\n        /* \"#utility.yul\":15365:15385   */\n      sub\n        /* \"#utility.yul\":15361:15362   */\n      0x00\n        /* \"#utility.yul\":15350:15359   */\n      dup4\n        /* \"#utility.yul\":15346:15363   */\n      add\n        /* \"#utility.yul\":15339:15386   */\n      mstore\n        /* \"#utility.yul\":15403:15534   */\n      tag_719\n        /* \"#utility.yul\":15529:15533   */\n      dup2\n        /* \"#utility.yul\":15403:15534   */\n      tag_680\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":15395:15534   */\n      swap1\n      pop\n        /* \"#utility.yul\":15122:15541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15547:15966   */\n    tag_303:\n        /* \"#utility.yul\":15713:15717   */\n      0x00\n        /* \"#utility.yul\":15751:15753   */\n      0x20\n        /* \"#utility.yul\":15740:15749   */\n      dup3\n        /* \"#utility.yul\":15736:15754   */\n      add\n        /* \"#utility.yul\":15728:15754   */\n      swap1\n      pop\n        /* \"#utility.yul\":15800:15809   */\n      dup2\n        /* \"#utility.yul\":15794:15798   */\n      dup2\n        /* \"#utility.yul\":15790:15810   */\n      sub\n        /* \"#utility.yul\":15786:15787   */\n      0x00\n        /* \"#utility.yul\":15775:15784   */\n      dup4\n        /* \"#utility.yul\":15771:15788   */\n      add\n        /* \"#utility.yul\":15764:15811   */\n      mstore\n        /* \"#utility.yul\":15828:15959   */\n      tag_721\n        /* \"#utility.yul\":15954:15958   */\n      dup2\n        /* \"#utility.yul\":15828:15959   */\n      tag_685\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":15820:15959   */\n      swap1\n      pop\n        /* \"#utility.yul\":15547:15966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15972:16194   */\n    tag_43:\n        /* \"#utility.yul\":16065:16069   */\n      0x00\n        /* \"#utility.yul\":16103:16105   */\n      0x20\n        /* \"#utility.yul\":16092:16101   */\n      dup3\n        /* \"#utility.yul\":16088:16106   */\n      add\n        /* \"#utility.yul\":16080:16106   */\n      swap1\n      pop\n        /* \"#utility.yul\":16116:16187   */\n      tag_723\n        /* \"#utility.yul\":16184:16185   */\n      0x00\n        /* \"#utility.yul\":16173:16182   */\n      dup4\n        /* \"#utility.yul\":16169:16186   */\n      add\n        /* \"#utility.yul\":16160:16166   */\n      dup5\n        /* \"#utility.yul\":16116:16187   */\n      tag_690\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":15972:16194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16200:16674   */\n    tag_74:\n        /* \"#utility.yul\":16365:16369   */\n      0x00\n        /* \"#utility.yul\":16403:16405   */\n      0x60\n        /* \"#utility.yul\":16392:16401   */\n      dup3\n        /* \"#utility.yul\":16388:16406   */\n      add\n        /* \"#utility.yul\":16380:16406   */\n      swap1\n      pop\n        /* \"#utility.yul\":16416:16487   */\n      tag_725\n        /* \"#utility.yul\":16484:16485   */\n      0x00\n        /* \"#utility.yul\":16473:16482   */\n      dup4\n        /* \"#utility.yul\":16469:16486   */\n      add\n        /* \"#utility.yul\":16460:16466   */\n      dup7\n        /* \"#utility.yul\":16416:16487   */\n      tag_690\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":16497:16585   */\n      tag_726\n        /* \"#utility.yul\":16581:16583   */\n      0x20\n        /* \"#utility.yul\":16570:16579   */\n      dup4\n        /* \"#utility.yul\":16566:16584   */\n      add\n        /* \"#utility.yul\":16557:16563   */\n      dup6\n        /* \"#utility.yul\":16497:16585   */\n      tag_655\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":16595:16667   */\n      tag_727\n        /* \"#utility.yul\":16663:16665   */\n      0x40\n        /* \"#utility.yul\":16652:16661   */\n      dup4\n        /* \"#utility.yul\":16648:16666   */\n      add\n        /* \"#utility.yul\":16639:16645   */\n      dup5\n        /* \"#utility.yul\":16595:16667   */\n      tag_690\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":16200:16674   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16680:16809   */\n    tag_535:\n        /* \"#utility.yul\":16714:16720   */\n      0x00\n        /* \"#utility.yul\":16741:16761   */\n      tag_729\n      tag_730\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":16731:16761   */\n      swap1\n      pop\n        /* \"#utility.yul\":16770:16803   */\n      tag_731\n        /* \"#utility.yul\":16798:16802   */\n      dup3\n        /* \"#utility.yul\":16790:16796   */\n      dup3\n        /* \"#utility.yul\":16770:16803   */\n      tag_732\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":16680:16809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16815:16890   */\n    tag_730:\n        /* \"#utility.yul\":16848:16854   */\n      0x00\n        /* \"#utility.yul\":16881:16883   */\n      0x40\n        /* \"#utility.yul\":16875:16884   */\n      mload\n        /* \"#utility.yul\":16865:16884   */\n      swap1\n      pop\n        /* \"#utility.yul\":16815:16890   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16896:17207   */\n    tag_534:\n        /* \"#utility.yul\":16973:16977   */\n      0x00\n        /* \"#utility.yul\":17063:17081   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17055:17061   */\n      dup3\n        /* \"#utility.yul\":17052:17082   */\n      gt\n        /* \"#utility.yul\":17049:17105   */\n      iszero\n      tag_735\n      jumpi\n        /* \"#utility.yul\":17085:17103   */\n      tag_736\n      tag_737\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":17049:17105   */\n    tag_735:\n        /* \"#utility.yul\":17135:17139   */\n      0x20\n        /* \"#utility.yul\":17127:17133   */\n      dup3\n        /* \"#utility.yul\":17123:17140   */\n      mul\n        /* \"#utility.yul\":17115:17140   */\n      swap1\n      pop\n        /* \"#utility.yul\":17195:17199   */\n      0x20\n        /* \"#utility.yul\":17189:17193   */\n      dup2\n        /* \"#utility.yul\":17185:17200   */\n      add\n        /* \"#utility.yul\":17177:17200   */\n      swap1\n      pop\n        /* \"#utility.yul\":16896:17207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17213:17542   */\n    tag_548:\n        /* \"#utility.yul\":17308:17312   */\n      0x00\n        /* \"#utility.yul\":17398:17416   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17390:17396   */\n      dup3\n        /* \"#utility.yul\":17387:17417   */\n      gt\n        /* \"#utility.yul\":17384:17440   */\n      iszero\n      tag_739\n      jumpi\n        /* \"#utility.yul\":17420:17438   */\n      tag_740\n      tag_737\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":17384:17440   */\n    tag_739:\n        /* \"#utility.yul\":17470:17474   */\n      0x20\n        /* \"#utility.yul\":17462:17468   */\n      dup3\n        /* \"#utility.yul\":17458:17475   */\n      mul\n        /* \"#utility.yul\":17450:17475   */\n      swap1\n      pop\n        /* \"#utility.yul\":17530:17534   */\n      0x20\n        /* \"#utility.yul\":17524:17528   */\n      dup2\n        /* \"#utility.yul\":17520:17535   */\n      add\n        /* \"#utility.yul\":17512:17535   */\n      swap1\n      pop\n        /* \"#utility.yul\":17213:17542   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17548:17859   */\n    tag_560:\n        /* \"#utility.yul\":17625:17629   */\n      0x00\n        /* \"#utility.yul\":17715:17733   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17707:17713   */\n      dup3\n        /* \"#utility.yul\":17704:17734   */\n      gt\n        /* \"#utility.yul\":17701:17757   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":17737:17755   */\n      tag_743\n      tag_737\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":17701:17757   */\n    tag_742:\n        /* \"#utility.yul\":17787:17791   */\n      0x20\n        /* \"#utility.yul\":17779:17785   */\n      dup3\n        /* \"#utility.yul\":17775:17792   */\n      mul\n        /* \"#utility.yul\":17767:17792   */\n      swap1\n      pop\n        /* \"#utility.yul\":17847:17851   */\n      0x20\n        /* \"#utility.yul\":17841:17845   */\n      dup2\n        /* \"#utility.yul\":17837:17852   */\n      add\n        /* \"#utility.yul\":17829:17852   */\n      swap1\n      pop\n        /* \"#utility.yul\":17548:17859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17865:18034   */\n    tag_662:\n        /* \"#utility.yul\":17949:17960   */\n      0x00\n        /* \"#utility.yul\":17983:17989   */\n      dup3\n        /* \"#utility.yul\":17978:17981   */\n      dup3\n        /* \"#utility.yul\":17971:17990   */\n      mstore\n        /* \"#utility.yul\":18023:18027   */\n      0x20\n        /* \"#utility.yul\":18018:18021   */\n      dup3\n        /* \"#utility.yul\":18014:18028   */\n      add\n        /* \"#utility.yul\":17999:18028   */\n      swap1\n      pop\n        /* \"#utility.yul\":17865:18034   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18040:18345   */\n    tag_180:\n        /* \"#utility.yul\":18080:18083   */\n      0x00\n        /* \"#utility.yul\":18099:18119   */\n      tag_746\n        /* \"#utility.yul\":18117:18118   */\n      dup3\n        /* \"#utility.yul\":18099:18119   */\n      tag_693\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":18094:18119   */\n      swap2\n      pop\n        /* \"#utility.yul\":18133:18153   */\n      tag_747\n        /* \"#utility.yul\":18151:18152   */\n      dup4\n        /* \"#utility.yul\":18133:18153   */\n      tag_693\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":18128:18153   */\n      swap3\n      pop\n        /* \"#utility.yul\":18287:18288   */\n      dup3\n        /* \"#utility.yul\":18219:18285   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18215:18289   */\n      sub\n        /* \"#utility.yul\":18212:18213   */\n      dup3\n        /* \"#utility.yul\":18209:18290   */\n      gt\n        /* \"#utility.yul\":18206:18313   */\n      iszero\n      tag_748\n      jumpi\n        /* \"#utility.yul\":18293:18311   */\n      tag_749\n      tag_750\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":18206:18313   */\n    tag_748:\n        /* \"#utility.yul\":18337:18338   */\n      dup3\n        /* \"#utility.yul\":18334:18335   */\n      dup3\n        /* \"#utility.yul\":18330:18339   */\n      add\n        /* \"#utility.yul\":18323:18339   */\n      swap1\n      pop\n        /* \"#utility.yul\":18040:18345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18351:18536   */\n    tag_447:\n        /* \"#utility.yul\":18391:18392   */\n      0x00\n        /* \"#utility.yul\":18408:18428   */\n      tag_752\n        /* \"#utility.yul\":18426:18427   */\n      dup3\n        /* \"#utility.yul\":18408:18428   */\n      tag_693\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":18403:18428   */\n      swap2\n      pop\n        /* \"#utility.yul\":18442:18462   */\n      tag_753\n        /* \"#utility.yul\":18460:18461   */\n      dup4\n        /* \"#utility.yul\":18442:18462   */\n      tag_693\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":18437:18462   */\n      swap3\n      pop\n        /* \"#utility.yul\":18481:18482   */\n      dup3\n        /* \"#utility.yul\":18471:18506   */\n      tag_754\n      jumpi\n        /* \"#utility.yul\":18486:18504   */\n      tag_755\n      tag_756\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":18471:18506   */\n    tag_754:\n        /* \"#utility.yul\":18528:18529   */\n      dup3\n        /* \"#utility.yul\":18525:18526   */\n      dup3\n        /* \"#utility.yul\":18521:18530   */\n      div\n        /* \"#utility.yul\":18516:18530   */\n      swap1\n      pop\n        /* \"#utility.yul\":18351:18536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18542:18890   */\n    tag_450:\n        /* \"#utility.yul\":18582:18589   */\n      0x00\n        /* \"#utility.yul\":18605:18625   */\n      tag_758\n        /* \"#utility.yul\":18623:18624   */\n      dup3\n        /* \"#utility.yul\":18605:18625   */\n      tag_693\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":18600:18625   */\n      swap2\n      pop\n        /* \"#utility.yul\":18639:18659   */\n      tag_759\n        /* \"#utility.yul\":18657:18658   */\n      dup4\n        /* \"#utility.yul\":18639:18659   */\n      tag_693\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":18634:18659   */\n      swap3\n      pop\n        /* \"#utility.yul\":18827:18828   */\n      dup2\n        /* \"#utility.yul\":18759:18825   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18755:18829   */\n      div\n        /* \"#utility.yul\":18752:18753   */\n      dup4\n        /* \"#utility.yul\":18749:18830   */\n      gt\n        /* \"#utility.yul\":18744:18745   */\n      dup3\n        /* \"#utility.yul\":18737:18746   */\n      iszero\n        /* \"#utility.yul\":18730:18747   */\n      iszero\n        /* \"#utility.yul\":18726:18831   */\n      and\n        /* \"#utility.yul\":18723:18854   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":18834:18852   */\n      tag_761\n      tag_750\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":18723:18854   */\n    tag_760:\n        /* \"#utility.yul\":18882:18883   */\n      dup3\n        /* \"#utility.yul\":18879:18880   */\n      dup3\n        /* \"#utility.yul\":18875:18884   */\n      mul\n        /* \"#utility.yul\":18864:18884   */\n      swap1\n      pop\n        /* \"#utility.yul\":18542:18890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18896:19087   */\n    tag_146:\n        /* \"#utility.yul\":18936:18940   */\n      0x00\n        /* \"#utility.yul\":18956:18976   */\n      tag_763\n        /* \"#utility.yul\":18974:18975   */\n      dup3\n        /* \"#utility.yul\":18956:18976   */\n      tag_693\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":18951:18976   */\n      swap2\n      pop\n        /* \"#utility.yul\":18990:19010   */\n      tag_764\n        /* \"#utility.yul\":19008:19009   */\n      dup4\n        /* \"#utility.yul\":18990:19010   */\n      tag_693\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":18985:19010   */\n      swap3\n      pop\n        /* \"#utility.yul\":19029:19030   */\n      dup3\n        /* \"#utility.yul\":19026:19027   */\n      dup3\n        /* \"#utility.yul\":19023:19031   */\n      lt\n        /* \"#utility.yul\":19020:19054   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":19034:19052   */\n      tag_766\n      tag_750\n      jump\t// in\n    tag_766:\n        /* \"#utility.yul\":19020:19054   */\n    tag_765:\n        /* \"#utility.yul\":19079:19080   */\n      dup3\n        /* \"#utility.yul\":19076:19077   */\n      dup3\n        /* \"#utility.yul\":19072:19081   */\n      sub\n        /* \"#utility.yul\":19064:19081   */\n      swap1\n      pop\n        /* \"#utility.yul\":18896:19087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19093:19189   */\n    tag_650:\n        /* \"#utility.yul\":19130:19137   */\n      0x00\n        /* \"#utility.yul\":19159:19183   */\n      tag_768\n        /* \"#utility.yul\":19177:19182   */\n      dup3\n        /* \"#utility.yul\":19159:19183   */\n      tag_769\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":19148:19183   */\n      swap1\n      pop\n        /* \"#utility.yul\":19093:19189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19195:19285   */\n    tag_770:\n        /* \"#utility.yul\":19229:19236   */\n      0x00\n        /* \"#utility.yul\":19272:19277   */\n      dup2\n        /* \"#utility.yul\":19265:19278   */\n      iszero\n        /* \"#utility.yul\":19258:19279   */\n      iszero\n        /* \"#utility.yul\":19247:19279   */\n      swap1\n      pop\n        /* \"#utility.yul\":19195:19285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19291:19438   */\n    tag_772:\n        /* \"#utility.yul\":19346:19353   */\n      0x00\n        /* \"#utility.yul\":19375:19380   */\n      dup2\n        /* \"#utility.yul\":19364:19380   */\n      swap1\n      pop\n        /* \"#utility.yul\":19381:19432   */\n      tag_774\n        /* \"#utility.yul\":19426:19431   */\n      dup3\n        /* \"#utility.yul\":19381:19432   */\n      tag_775\n      jump\t// in\n    tag_774:\n        /* \"#utility.yul\":19291:19438   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19444:19570   */\n    tag_769:\n        /* \"#utility.yul\":19481:19488   */\n      0x00\n        /* \"#utility.yul\":19521:19563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":19514:19519   */\n      dup3\n        /* \"#utility.yul\":19510:19564   */\n      and\n        /* \"#utility.yul\":19499:19564   */\n      swap1\n      pop\n        /* \"#utility.yul\":19444:19570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19576:19653   */\n    tag_693:\n        /* \"#utility.yul\":19613:19620   */\n      0x00\n        /* \"#utility.yul\":19642:19647   */\n      dup2\n        /* \"#utility.yul\":19631:19647   */\n      swap1\n      pop\n        /* \"#utility.yul\":19576:19653   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19659:19799   */\n    tag_654:\n        /* \"#utility.yul\":19723:19732   */\n      0x00\n        /* \"#utility.yul\":19756:19793   */\n      tag_779\n        /* \"#utility.yul\":19787:19792   */\n      dup3\n        /* \"#utility.yul\":19756:19793   */\n      tag_780\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":19743:19793   */\n      swap1\n      pop\n        /* \"#utility.yul\":19659:19799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19805:19952   */\n    tag_658:\n        /* \"#utility.yul\":19871:19880   */\n      0x00\n        /* \"#utility.yul\":19904:19946   */\n      tag_782\n        /* \"#utility.yul\":19940:19945   */\n      dup3\n        /* \"#utility.yul\":19904:19946   */\n      tag_772\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":19891:19946   */\n      swap1\n      pop\n        /* \"#utility.yul\":19805:19952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19958:20084   */\n    tag_780:\n        /* \"#utility.yul\":20008:20017   */\n      0x00\n        /* \"#utility.yul\":20041:20078   */\n      tag_784\n        /* \"#utility.yul\":20072:20077   */\n      dup3\n        /* \"#utility.yul\":20041:20078   */\n      tag_785\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":20028:20078   */\n      swap1\n      pop\n        /* \"#utility.yul\":19958:20084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20090:20203   */\n    tag_785:\n        /* \"#utility.yul\":20140:20149   */\n      0x00\n        /* \"#utility.yul\":20173:20197   */\n      tag_787\n        /* \"#utility.yul\":20191:20196   */\n      dup3\n        /* \"#utility.yul\":20173:20197   */\n      tag_769\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":20160:20197   */\n      swap1\n      pop\n        /* \"#utility.yul\":20090:20203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20209:20490   */\n    tag_732:\n        /* \"#utility.yul\":20292:20319   */\n      tag_789\n        /* \"#utility.yul\":20314:20318   */\n      dup3\n        /* \"#utility.yul\":20292:20319   */\n      tag_790\n      jump\t// in\n    tag_789:\n        /* \"#utility.yul\":20284:20290   */\n      dup2\n        /* \"#utility.yul\":20280:20320   */\n      add\n        /* \"#utility.yul\":20422:20428   */\n      dup2\n        /* \"#utility.yul\":20410:20420   */\n      dup2\n        /* \"#utility.yul\":20407:20429   */\n      lt\n        /* \"#utility.yul\":20386:20404   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20374:20384   */\n      dup3\n        /* \"#utility.yul\":20371:20405   */\n      gt\n        /* \"#utility.yul\":20368:20430   */\n      or\n        /* \"#utility.yul\":20365:20453   */\n      iszero\n      tag_791\n      jumpi\n        /* \"#utility.yul\":20433:20451   */\n      tag_792\n      tag_737\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":20365:20453   */\n    tag_791:\n        /* \"#utility.yul\":20473:20483   */\n      dup1\n        /* \"#utility.yul\":20469:20471   */\n      0x40\n        /* \"#utility.yul\":20462:20484   */\n      mstore\n        /* \"#utility.yul\":20252:20490   */\n      pop\n        /* \"#utility.yul\":20209:20490   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20496:20729   */\n    tag_257:\n        /* \"#utility.yul\":20535:20538   */\n      0x00\n        /* \"#utility.yul\":20558:20582   */\n      tag_794\n        /* \"#utility.yul\":20576:20581   */\n      dup3\n        /* \"#utility.yul\":20558:20582   */\n      tag_693\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":20549:20582   */\n      swap2\n      pop\n        /* \"#utility.yul\":20604:20670   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20597:20602   */\n      dup3\n        /* \"#utility.yul\":20594:20671   */\n      eq\n        /* \"#utility.yul\":20591:20694   */\n      iszero\n      tag_795\n      jumpi\n        /* \"#utility.yul\":20674:20692   */\n      tag_796\n      tag_750\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":20591:20694   */\n    tag_795:\n        /* \"#utility.yul\":20721:20722   */\n      0x01\n        /* \"#utility.yul\":20714:20719   */\n      dup3\n        /* \"#utility.yul\":20710:20723   */\n      add\n        /* \"#utility.yul\":20703:20723   */\n      swap1\n      pop\n        /* \"#utility.yul\":20496:20729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20735:20915   */\n    tag_750:\n        /* \"#utility.yul\":20783:20860   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20780:20781   */\n      0x00\n        /* \"#utility.yul\":20773:20861   */\n      mstore\n        /* \"#utility.yul\":20880:20884   */\n      0x11\n        /* \"#utility.yul\":20877:20878   */\n      0x04\n        /* \"#utility.yul\":20870:20885   */\n      mstore\n        /* \"#utility.yul\":20904:20908   */\n      0x24\n        /* \"#utility.yul\":20901:20902   */\n      0x00\n        /* \"#utility.yul\":20894:20909   */\n      revert\n        /* \"#utility.yul\":20921:21101   */\n    tag_756:\n        /* \"#utility.yul\":20969:21046   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20966:20967   */\n      0x00\n        /* \"#utility.yul\":20959:21047   */\n      mstore\n        /* \"#utility.yul\":21066:21070   */\n      0x12\n        /* \"#utility.yul\":21063:21064   */\n      0x04\n        /* \"#utility.yul\":21056:21071   */\n      mstore\n        /* \"#utility.yul\":21090:21094   */\n      0x24\n        /* \"#utility.yul\":21087:21088   */\n      0x00\n        /* \"#utility.yul\":21080:21095   */\n      revert\n        /* \"#utility.yul\":21107:21287   */\n    tag_128:\n        /* \"#utility.yul\":21155:21232   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21152:21153   */\n      0x00\n        /* \"#utility.yul\":21145:21233   */\n      mstore\n        /* \"#utility.yul\":21252:21256   */\n      0x21\n        /* \"#utility.yul\":21249:21250   */\n      0x04\n        /* \"#utility.yul\":21242:21257   */\n      mstore\n        /* \"#utility.yul\":21276:21280   */\n      0x24\n        /* \"#utility.yul\":21273:21274   */\n      0x00\n        /* \"#utility.yul\":21266:21281   */\n      revert\n        /* \"#utility.yul\":21293:21473   */\n    tag_514:\n        /* \"#utility.yul\":21341:21418   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21338:21339   */\n      0x00\n        /* \"#utility.yul\":21331:21419   */\n      mstore\n        /* \"#utility.yul\":21438:21442   */\n      0x31\n        /* \"#utility.yul\":21435:21436   */\n      0x04\n        /* \"#utility.yul\":21428:21443   */\n      mstore\n        /* \"#utility.yul\":21462:21466   */\n      0x24\n        /* \"#utility.yul\":21459:21460   */\n      0x00\n        /* \"#utility.yul\":21452:21467   */\n      revert\n        /* \"#utility.yul\":21479:21659   */\n    tag_173:\n        /* \"#utility.yul\":21527:21604   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21524:21525   */\n      0x00\n        /* \"#utility.yul\":21517:21605   */\n      mstore\n        /* \"#utility.yul\":21624:21628   */\n      0x32\n        /* \"#utility.yul\":21621:21622   */\n      0x04\n        /* \"#utility.yul\":21614:21629   */\n      mstore\n        /* \"#utility.yul\":21648:21652   */\n      0x24\n        /* \"#utility.yul\":21645:21646   */\n      0x00\n        /* \"#utility.yul\":21638:21653   */\n      revert\n        /* \"#utility.yul\":21665:21845   */\n    tag_737:\n        /* \"#utility.yul\":21713:21790   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21710:21711   */\n      0x00\n        /* \"#utility.yul\":21703:21791   */\n      mstore\n        /* \"#utility.yul\":21810:21814   */\n      0x41\n        /* \"#utility.yul\":21807:21808   */\n      0x04\n        /* \"#utility.yul\":21800:21815   */\n      mstore\n        /* \"#utility.yul\":21834:21838   */\n      0x24\n        /* \"#utility.yul\":21831:21832   */\n      0x00\n        /* \"#utility.yul\":21824:21839   */\n      revert\n        /* \"#utility.yul\":21851:21968   */\n    tag_575:\n        /* \"#utility.yul\":21960:21961   */\n      0x00\n        /* \"#utility.yul\":21957:21958   */\n      dup1\n        /* \"#utility.yul\":21950:21962   */\n      revert\n        /* \"#utility.yul\":21974:22091   */\n    tag_538:\n        /* \"#utility.yul\":22083:22084   */\n      0x00\n        /* \"#utility.yul\":22080:22081   */\n      dup1\n        /* \"#utility.yul\":22073:22085   */\n      revert\n        /* \"#utility.yul\":22097:22214   */\n    tag_615:\n        /* \"#utility.yul\":22206:22207   */\n      0x00\n        /* \"#utility.yul\":22203:22204   */\n      dup1\n        /* \"#utility.yul\":22196:22208   */\n      revert\n        /* \"#utility.yul\":22220:22337   */\n    tag_603:\n        /* \"#utility.yul\":22329:22330   */\n      0x00\n        /* \"#utility.yul\":22326:22327   */\n      dup1\n        /* \"#utility.yul\":22319:22331   */\n      revert\n        /* \"#utility.yul\":22343:22445   */\n    tag_790:\n        /* \"#utility.yul\":22384:22390   */\n      0x00\n        /* \"#utility.yul\":22435:22437   */\n      0x1f\n        /* \"#utility.yul\":22431:22438   */\n      not\n        /* \"#utility.yul\":22426:22428   */\n      0x1f\n        /* \"#utility.yul\":22419:22424   */\n      dup4\n        /* \"#utility.yul\":22415:22429   */\n      add\n        /* \"#utility.yul\":22411:22439   */\n      and\n        /* \"#utility.yul\":22401:22439   */\n      swap1\n      pop\n        /* \"#utility.yul\":22343:22445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22451:22631   */\n    tag_664:\n        /* \"#utility.yul\":22591:22623   */\n      0x7374616b652076616c75652073686f756c64206e6f74206265207a65726f0000\n        /* \"#utility.yul\":22587:22588   */\n      0x00\n        /* \"#utility.yul\":22579:22585   */\n      dup3\n        /* \"#utility.yul\":22575:22589   */\n      add\n        /* \"#utility.yul\":22568:22624   */\n      mstore\n        /* \"#utility.yul\":22451:22631   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22637:22816   */\n    tag_669:\n        /* \"#utility.yul\":22777:22808   */\n      0x5374616b696e6720706572696f64206973206e6f742065787069726564000000\n        /* \"#utility.yul\":22773:22774   */\n      0x00\n        /* \"#utility.yul\":22765:22771   */\n      dup3\n        /* \"#utility.yul\":22761:22775   */\n      add\n        /* \"#utility.yul\":22754:22809   */\n      mstore\n        /* \"#utility.yul\":22637:22816   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22822:22993   */\n    tag_674:\n        /* \"#utility.yul\":22962:22985   */\n      0x546f6b656e205472616e73666572204661696c65640000000000000000000000\n        /* \"#utility.yul\":22958:22959   */\n      0x00\n        /* \"#utility.yul\":22950:22956   */\n      dup3\n        /* \"#utility.yul\":22946:22960   */\n      add\n        /* \"#utility.yul\":22939:22986   */\n      mstore\n        /* \"#utility.yul\":22822:22993   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22999:23224   */\n    tag_679:\n        /* \"#utility.yul\":23139:23173   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23135:23136   */\n      0x00\n        /* \"#utility.yul\":23127:23133   */\n      dup3\n        /* \"#utility.yul\":23123:23137   */\n      add\n        /* \"#utility.yul\":23116:23174   */\n      mstore\n        /* \"#utility.yul\":23208:23216   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23203:23205   */\n      0x20\n        /* \"#utility.yul\":23195:23201   */\n      dup3\n        /* \"#utility.yul\":23191:23206   */\n      add\n        /* \"#utility.yul\":23184:23217   */\n      mstore\n        /* \"#utility.yul\":22999:23224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23230:23412   */\n    tag_684:\n        /* \"#utility.yul\":23370:23404   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":23366:23367   */\n      0x00\n        /* \"#utility.yul\":23358:23364   */\n      dup3\n        /* \"#utility.yul\":23354:23368   */\n      add\n        /* \"#utility.yul\":23347:23405   */\n      mstore\n        /* \"#utility.yul\":23230:23412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23418:23588   */\n    tag_689:\n        /* \"#utility.yul\":23558:23580   */\n      0x496e76616c6964205374616b6520416d6f756e74000000000000000000000000\n        /* \"#utility.yul\":23554:23555   */\n      0x00\n        /* \"#utility.yul\":23546:23552   */\n      dup3\n        /* \"#utility.yul\":23542:23556   */\n      add\n        /* \"#utility.yul\":23535:23581   */\n      mstore\n        /* \"#utility.yul\":23418:23588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23594:23717   */\n    tag_775:\n        /* \"#utility.yul\":23685:23686   */\n      0x05\n        /* \"#utility.yul\":23678:23683   */\n      dup2\n        /* \"#utility.yul\":23675:23687   */\n      lt\n        /* \"#utility.yul\":23665:23711   */\n      tag_815\n      jumpi\n        /* \"#utility.yul\":23691:23709   */\n      tag_816\n      tag_128\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":23665:23711   */\n    tag_815:\n        /* \"#utility.yul\":23594:23717   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23723:23845   */\n    tag_570:\n        /* \"#utility.yul\":23796:23820   */\n      tag_818\n        /* \"#utility.yul\":23814:23819   */\n      dup2\n        /* \"#utility.yul\":23796:23820   */\n      tag_650\n      jump\t// in\n    tag_818:\n        /* \"#utility.yul\":23789:23794   */\n      dup2\n        /* \"#utility.yul\":23786:23821   */\n      eq\n        /* \"#utility.yul\":23776:23839   */\n      tag_819\n      jumpi\n        /* \"#utility.yul\":23835:23836   */\n      0x00\n        /* \"#utility.yul\":23832:23833   */\n      dup1\n        /* \"#utility.yul\":23825:23837   */\n      revert\n        /* \"#utility.yul\":23776:23839   */\n    tag_819:\n        /* \"#utility.yul\":23723:23845   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23851:23967   */\n    tag_590:\n        /* \"#utility.yul\":23921:23942   */\n      tag_821\n        /* \"#utility.yul\":23936:23941   */\n      dup2\n        /* \"#utility.yul\":23921:23942   */\n      tag_770\n      jump\t// in\n    tag_821:\n        /* \"#utility.yul\":23914:23919   */\n      dup2\n        /* \"#utility.yul\":23911:23943   */\n      eq\n        /* \"#utility.yul\":23901:23961   */\n      tag_822\n      jumpi\n        /* \"#utility.yul\":23957:23958   */\n      0x00\n        /* \"#utility.yul\":23954:23955   */\n      dup1\n        /* \"#utility.yul\":23947:23959   */\n      revert\n        /* \"#utility.yul\":23901:23961   */\n    tag_822:\n        /* \"#utility.yul\":23851:23967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23973:24090   */\n    tag_593:\n        /* \"#utility.yul\":24064:24065   */\n      0x05\n        /* \"#utility.yul\":24057:24062   */\n      dup2\n        /* \"#utility.yul\":24054:24066   */\n      lt\n        /* \"#utility.yul\":24044:24084   */\n      tag_824\n      jumpi\n        /* \"#utility.yul\":24080:24081   */\n      0x00\n        /* \"#utility.yul\":24077:24078   */\n      dup1\n        /* \"#utility.yul\":24070:24082   */\n      revert\n        /* \"#utility.yul\":24044:24084   */\n    tag_824:\n        /* \"#utility.yul\":23973:24090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24096:24218   */\n    tag_596:\n        /* \"#utility.yul\":24169:24193   */\n      tag_826\n        /* \"#utility.yul\":24187:24192   */\n      dup2\n        /* \"#utility.yul\":24169:24193   */\n      tag_693\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":24162:24167   */\n      dup2\n        /* \"#utility.yul\":24159:24194   */\n      eq\n        /* \"#utility.yul\":24149:24212   */\n      tag_827\n      jumpi\n        /* \"#utility.yul\":24208:24209   */\n      0x00\n        /* \"#utility.yul\":24205:24206   */\n      dup1\n        /* \"#utility.yul\":24198:24210   */\n      revert\n        /* \"#utility.yul\":24149:24212   */\n    tag_827:\n        /* \"#utility.yul\":24096:24218   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206aeb2d2cf91f38aba214b6c020df4f78a31488094e13efd8043c16f1fb1e01ae64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1560": {
									"entryPoint": null,
									"id": 1560,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 845,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 853,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1385:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "7:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:1"
															},
															"nodeType": "YulIf",
															"src": "243:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "156:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:1",
														"type": ""
													}
												],
												"src": "513:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:1",
														"type": ""
													}
												],
												"src": "594:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:1",
														"type": ""
													}
												],
												"src": "696:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "856:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "873:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "866:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "970:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "963:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "994:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "997:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "987:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "987:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "828:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1123:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1113:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1113:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1014:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1226:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1137:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1303:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1360:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1369:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1362:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1362:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1362:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1326:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1351:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1333:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1333:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1323:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1323:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:43:1"
															},
															"nodeType": "YulIf",
															"src": "1313:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1296:5:1",
														"type": ""
													}
												],
												"src": "1260:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x375E CODESIZE SUB DUP1 PUSH3 0x375E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x430 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x34D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x355 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x141 PUSH1 0x7 PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xB5 JUMPI PUSH3 0xB4 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xCA JUMPI PUSH3 0xC9 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x307 PUSH1 0x7 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xFA JUMPI PUSH3 0xF9 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x10F JUMPI PUSH3 0x10E PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8A9 PUSH1 0x7 PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x13F JUMPI PUSH3 0x13E PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x154 JUMPI PUSH3 0x153 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1013 PUSH1 0x7 PUSH1 0x0 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x199 JUMPI PUSH3 0x198 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1970 PUSH1 0x7 PUSH1 0x0 PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH3 0x1C8 JUMPI PUSH3 0x1C7 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x1DD JUMPI PUSH3 0x1DC PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x19E PUSH1 0x8 PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x221 JUMPI PUSH3 0x220 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x390 PUSH1 0x8 PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x251 JUMPI PUSH3 0x250 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x266 JUMPI PUSH3 0x265 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12D1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x296 JUMPI PUSH3 0x295 PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2AB JUMPI PUSH3 0x2AA PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C2D PUSH1 0x8 PUSH1 0x0 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2DB JUMPI PUSH3 0x2DA PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x2F0 JUMPI PUSH3 0x2EF PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4650 PUSH1 0x8 PUSH1 0x0 PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH3 0x31F JUMPI PUSH3 0x31E PUSH3 0x496 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x334 JUMPI PUSH3 0x333 PUSH3 0x496 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x4E4 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x42A DUP2 PUSH3 0x4CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x449 JUMPI PUSH3 0x448 PUSH3 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x459 DUP5 DUP3 DUP6 ADD PUSH3 0x419 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x46F DUP3 PUSH3 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4D5 DUP2 PUSH3 0x462 JUMP JUMPDEST DUP2 EQ PUSH3 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x326A DUP1 PUSH3 0x4F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E61BADD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xAD9159FD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE580D976 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE580D976 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xE627F2DB EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xE9917C07 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B8 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xAD9159FD EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x430 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x7E61BADD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x8CFCECE7 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x980B4229 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x9E196CAD EQ PUSH2 0x3B2 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x2B4AFCC3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2B4AFCC3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x2E1E844E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x2F7D122F EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x3027FFC0 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x57D54AED EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x63B35BF EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x66C6DBB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDED03CD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x108B96C4 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x2B28EA29 EQ PUSH2 0x244 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0x100C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1020 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0x1615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0x193A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x1E33 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x5D1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x63E JUMPI PUSH2 0x63D PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x663 DUP3 PUSH1 0x0 ADD MLOAD DUP4 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B0 PUSH1 0x18 PUSH2 0x6A2 PUSH1 0x3C PUSH2 0x694 PUSH1 0x3C DUP9 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x6C0 JUMPI DUP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x6EC DUP2 PUSH2 0x6DE PUSH2 0x16D DUP6 PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x791 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7FF PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B3 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x937 JUMPI PUSH2 0x936 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xB16 JUMPI PUSH2 0x972 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9E2 JUMPI PUSH2 0x9E1 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xACA JUMPI PUSH2 0xAC9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xB0B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xC4D DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD14 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xD99 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD80 JUMPI PUSH2 0xD7F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xE53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0xE66 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x802 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE7D PUSH2 0x1FE7 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEA7 JUMPI PUSH2 0xEA6 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x1FE7 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC3 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD6 JUMPI PUSH2 0xFD5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xFF1 DUP3 PUSH2 0x20F6 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1000 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x101E PUSH1 0x0 PUSH2 0x2228 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105A SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x113E DUP2 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD DUP4 GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CF DUP4 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP PUSH2 0x11E8 DUP5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x2315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x12C2 DUP5 PUSH1 0x1 SLOAD PUSH2 0x2315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x12DD DUP2 PUSH1 0x2 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1338 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x136D JUMPI PUSH2 0x136C CALLER PUSH2 0x232B JUMP JUMPDEST JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CA SWAP3 SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x1463 PUSH2 0x15CE JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1520 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57 DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1572 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x158E PUSH2 0x1FE7 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1708 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1774 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0x17BA PUSH2 0x15CE JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x191A DUP3 PUSH1 0x0 ADD MLOAD DUP4 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1931 PUSH2 0x16D DUP3 PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197E SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A38 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6E SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADE PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1B00 CALLER PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BD6 JUMPI PUSH2 0x1BD5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1BFD DUP3 PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1CF1 DUP4 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1DD5 DUP4 PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1E27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1E3B PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA2 SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x2228 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x1F3D JUMPI PUSH2 0x1F36 PUSH1 0x64 PUSH2 0x1F28 PUSH1 0x64 PUSH2 0x1F1A PUSH1 0x8 PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EFC JUMPI PUSH2 0x1EFB PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x1FB1 PUSH1 0x64 PUSH2 0x1FA3 PUSH1 0x64 PUSH2 0x1F95 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FC9 SWAP2 SWAP1 PUSH2 0x2D94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FDF SWAP2 SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEF PUSH2 0x2453 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200D PUSH2 0x15CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2063 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205A SWAP1 PUSH2 0x2BF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2070 DUP3 PUSH2 0x245B JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x20DC JUMPI PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x20EE SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH2 0x2121 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2216 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x220C JUMPI PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x216B JUMPI PUSH2 0x216A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2202 JUMPI PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21F8 JUMPI PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x21CA JUMPI PUSH2 0x21C9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21E1 JUMPI PUSH2 0x21E0 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21ED JUMPI PUSH1 0x0 PUSH2 0x21F3 JUMP JUMPDEST PUSH4 0x1E13380 JUMPDEST PUSH2 0x21FD JUMP JUMPDEST PUSH3 0x9E3400 JUMPDEST PUSH2 0x2207 JUMP JUMPDEST PUSH3 0x76A700 JUMPDEST PUSH2 0x2211 JUMP JUMPDEST PUSH3 0x278D00 JUMPDEST PUSH2 0x221B JUMP JUMPDEST PUSH3 0x13C680 JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22F8 DUP4 PUSH2 0x20F6 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2307 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2323 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2337 DUP4 PUSH2 0x245B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2435 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2355 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x23FF JUMPI PUSH2 0x23FE PUSH2 0x2FFD JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2449 JUMPI DUP2 PUSH2 0x244B JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2501 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2482 JUMPI PUSH2 0x2481 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24ED JUMPI PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x250A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x24FA SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x2461 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2522 PUSH2 0x251D DUP5 PUSH2 0x2CA9 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2575 JUMPI DUP2 PUSH2 0x255B DUP9 DUP3 PUSH2 0x265F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2548 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2592 PUSH2 0x258D DUP5 PUSH2 0x2CD5 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25E5 JUMPI DUP2 PUSH2 0x25CB DUP9 DUP3 PUSH2 0x2713 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2602 PUSH2 0x25FD DUP5 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2655 JUMPI DUP2 PUSH2 0x263B DUP9 DUP3 PUSH2 0x2728 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2628 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x266E DUP2 PUSH2 0x31DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2689 JUMPI PUSH2 0x2688 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2699 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x250F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26B7 JUMPI PUSH2 0x26B6 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26C7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26F5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x270D DUP2 PUSH2 0x31F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2722 DUP2 PUSH2 0x320D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2737 DUP2 PUSH2 0x321D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x274C DUP2 PUSH2 0x321D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2768 JUMPI PUSH2 0x2767 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP5 DUP3 DUP6 ADD PUSH2 0x265F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2795 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27A4 DUP6 DUP3 DUP7 ADD PUSH2 0x265F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27B5 DUP6 DUP3 DUP7 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F6 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x2803 DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x2830 DUP8 DUP3 DUP9 ADD PUSH2 0x26D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x285D DUP8 DUP3 DUP9 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x288A DUP8 DUP3 DUP9 ADD PUSH2 0x26D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28AC JUMPI PUSH2 0x28AB PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28BA DUP5 DUP3 DUP6 ADD PUSH2 0x26FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28D9 JUMPI PUSH2 0x28D8 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28E7 DUP5 DUP3 DUP6 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2905 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP5 DUP3 DUP6 ADD PUSH2 0x2728 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2933 JUMPI PUSH2 0x2932 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP5 DUP3 DUP6 ADD PUSH2 0x273D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296F DUP6 DUP3 DUP7 ADD PUSH2 0x2728 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2980 DUP6 DUP3 DUP7 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2993 DUP2 PUSH2 0x2E53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29A2 DUP2 PUSH2 0x2EAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29B1 DUP2 PUSH2 0x2EC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C4 PUSH1 0x1E DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29CF DUP3 PUSH2 0x30AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E7 PUSH1 0x1D DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29F2 DUP3 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A PUSH1 0x15 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A15 DUP3 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2D PUSH1 0x26 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A38 DUP3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A50 PUSH1 0x20 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5B DUP3 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A73 PUSH1 0x14 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7E DUP3 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A92 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x298A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AC8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2AD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x298A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2AFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2B0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B28 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2B35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B8B DUP2 PUSH2 0x29B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BAB DUP2 PUSH2 0x29DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BEB DUP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C0B DUP2 PUSH2 0x2A43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C2B DUP2 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C47 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C62 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A89 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29A8 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8E PUSH2 0x2C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9A DUP3 DUP3 PUSH2 0x2EF6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CF0 JUMPI PUSH2 0x2CEF PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D1C JUMPI PUSH2 0x2D1B PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D54 DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x2D88 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9F DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAA DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DBA JUMPI PUSH2 0x2DB9 PUSH2 0x2F9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD0 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDB DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2E14 JUMPI PUSH2 0x2E13 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2A DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E35 DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5E DUP3 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2E7F DUP3 PUSH2 0x31CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB9 DUP3 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECB DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD DUP3 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFF DUP3 PUSH2 0x309E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2F1E JUMPI PUSH2 0x2F1D PUSH2 0x305B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F65 JUMPI PUSH2 0x2F64 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F742065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964205374616B6520416D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x31DC JUMPI PUSH2 0x31DB PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x31E8 DUP2 PUSH2 0x2E53 JUMP JUMPDEST DUP2 EQ PUSH2 0x31F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x31FF DUP2 PUSH2 0x2E65 JUMP JUMPDEST DUP2 EQ PUSH2 0x320A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x321A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3226 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xEB2D2CF91F38ABA214B6C0 KECCAK256 0xDF 0x4F PUSH25 0xA31488094E13EFD8043C16F1FB1E01AE64736F6C6343000807 STOP CALLER ",
							"sourceMap": "25704:8972:0:-:0;;;26641:665;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1591:32;1610:12;:10;;;:12;;:::i;:::-;1591:18;;;:32;;:::i;:::-;26703:8;26686:7;;:26;;;;;;;;;;;;;;;;;;26753:3;26722;:28;26726:23;26722:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;26808:3;26777;:28;26781:23;26777:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;26865:4;26832:3;:30;26836:25;26832:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;;26922:4;26891:3;:28;26895:23;26891:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;26978:4;26948:3;:27;26952:22;26948:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;27041:3;27006:7;:32;27014:23;27006:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;27100:3;27065:7;:32;27073:23;27065:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:38;;;;27161:4;27124:7;:34;27132:25;27124:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;;27222:4;27187:7;:32;27195:23;27187:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;;27282:5;27248:7;:31;27256:22;27248:31;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;;26641:665;25704:8972;;406:96;459:7;485:10;478:17;;406:96;:::o;3088:187::-;3161:16;3180:6;;;;;;;;;;;3161:25;;3205:8;3196:6;;:17;;;;;;;;;;;;;;;;;;3259:8;3228:40;;3249:8;3228:40;;;;;;;;;;;;3151:124;3088:187;:::o;7:143:1:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;828:180::-;876:77;873:1;866:88;973:4;970:1;963:15;997:4;994:1;987:15;1137:117;1246:1;1243;1236:12;1260:122;1333:24;1351:5;1333:24;:::i;:::-;1326:5;1323:35;1313:63;;1372:1;1369;1362:12;1313:63;1260:122;:::o;25704:8972:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_74": {
									"entryPoint": 8167,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 9299,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 8744,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addStakeholder_2351": {
									"entryPoint": 8293,
									"id": 2351,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTokenInContract_1998": {
									"entryPoint": 1794,
									"id": 1998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_393": {
									"entryPoint": 8416,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@apr_1437": {
									"entryPoint": 5629,
									"id": 1437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@apr_old_1442": {
									"entryPoint": 1379,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createOldInvestorList_1979": {
									"entryPoint": 2039,
									"id": 1979,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@createStake_1680": {
									"entryPoint": 6468,
									"id": 1680,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_438": {
									"entryPoint": 8123,
									"id": 438,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDailyRewards_2228": {
									"entryPoint": 1403,
									"id": 2228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getExpiredDay_2292": {
									"entryPoint": 3859,
									"id": 2292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getInvestorRewards_2045": {
									"entryPoint": 7863,
									"id": 2045,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRewardsPerDay_2262": {
									"entryPoint": 6194,
									"id": 2262,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakingPeriodInNumbers_2126": {
									"entryPoint": 8438,
									"id": 2126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalRewards_2392": {
									"entryPoint": 6458,
									"id": 2392,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isStakeholder_2330": {
									"entryPoint": 9307,
									"id": 2330,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@min_571": {
									"entryPoint": 9274,
									"id": 571,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_423": {
									"entryPoint": 8145,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@myToken_1445": {
									"entryPoint": 5783,
									"id": 1445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@oldTimeStamp_1405": {
									"entryPoint": 5623,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_60": {
									"entryPoint": 5582,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingTokens_2450": {
									"entryPoint": 5821,
									"id": 2450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeStakeholder_2384": {
									"entryPoint": 9003,
									"id": 2384,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_88": {
									"entryPoint": 4108,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setApyPercentage_2409": {
									"entryPoint": 3701,
									"id": 2409,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setOldApyPercentage_2426": {
									"entryPoint": 5510,
									"id": 2426,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setOldTimeStamp_2057": {
									"entryPoint": 3773,
									"id": 2057,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeOf_2144": {
									"entryPoint": 5653,
									"id": 2144,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stakes_1432": {
									"entryPoint": 3791,
									"id": 1432,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPeriodOf_2163": {
									"entryPoint": 1236,
									"id": 2163,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_408": {
									"entryPoint": 8981,
									"id": 408,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenAmountInOldInvestorList_1424": {
									"entryPoint": 1788,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_1403": {
									"entryPoint": 1782,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_1401": {
									"entryPoint": 5504,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_111": {
									"entryPoint": 7731,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unStake_1811": {
									"entryPoint": 4128,
									"id": 1811,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@validateStakingPeriod_2080": {
									"entryPoint": 8940,
									"id": 2080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9711,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr": {
									"entryPoint": 9890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_StakingPeriod_$1411": {
									"entryPoint": 10003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 10045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1411": {
									"entryPoint": 10111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_StakingPeriod_$1411": {
									"entryPoint": 10435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1411": {
									"entryPoint": 10570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$218_to_t_address_fromStack": {
									"entryPoint": 10649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack": {
									"entryPoint": 10664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10714,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10784,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10972,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11027,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$218__to_t_address__fromStack_reversed": {
									"entryPoint": 11068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_StakingPeriod_$1411__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 11314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1411_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 11341,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 11396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 11423,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 11433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr": {
									"entryPoint": 11477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 11521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 11859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 11877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_StakingPeriod_$1411": {
									"entryPoint": 11889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 11908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 11940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$218_to_t_address": {
									"entryPoint": 11950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_StakingPeriod_$1411_to_t_uint8": {
									"entryPoint": 11968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 11986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 12004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 12022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 12071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12144,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12191,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 12238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 12285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 12379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 12426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 12431,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 12436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 12441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 12446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392": {
									"entryPoint": 12463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6": {
									"entryPoint": 12504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538": {
									"entryPoint": 12545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 12586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 12665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285": {
									"entryPoint": 12706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_StakingPeriod_$1411": {
									"entryPoint": 12747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 12767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_StakingPeriod_$1411": {
									"entryPoint": 12813,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 12829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24221:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "126:620:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "136:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "218:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "161:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "161:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "145:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "145:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "136:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "235:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "246:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "239:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "268:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "275:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "261:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "291:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "302:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "291:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "335:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "328:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "390:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "404:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "404:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "404:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "360:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "369:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "377:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "365:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "385:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:36:1"
															},
															"nodeType": "YulIf",
															"src": "350:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:178:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "577:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "581:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "619:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "645:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "657:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "624:20:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "624:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:50:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:50:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "675:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "686:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "682:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "682:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "675:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "709:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "725:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "716:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "716:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "709:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "524:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "527:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "521:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "535:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "537:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "546:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "549:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "542:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "542:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "537:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "506:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "508:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "517:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "512:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "502:238:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "96:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "104:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "112:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "120:5:1",
														"type": ""
													}
												],
												"src": "24:722:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "908:656:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "918:108:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1018:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "943:74:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "943:82:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "927:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:99:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "918:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1035:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1046:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1039:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1068:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1075:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1061:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1061:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1091:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1102:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1109:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1098:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1124:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1135:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1128:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1190:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1204:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1204:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1160:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1169:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1177:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1165:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1165:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1156:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1185:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1153:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:36:1"
															},
															"nodeType": "YulIf",
															"src": "1150:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:196:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1377:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1381:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1419:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1463:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1475:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_enum$_StakingPeriod_$1411",
																						"nodeType": "YulIdentifier",
																						"src": "1424:38:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1424:55:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1412:68:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:68:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1493:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1504:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1509:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1500:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1500:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1493:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1527:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1538:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1543:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1534:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1527:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1324:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1327:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1321:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1321:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1335:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1337:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1346:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1342:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1337:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1306:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1308:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1317:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1312:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1302:256:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "878:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "886:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "894:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "902:5:1",
														"type": ""
													}
												],
												"src": "788:776:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1689:620:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1699:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1781:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1724:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1708:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1708:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1798:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1809:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1802:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1831:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1838:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1824:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1824:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1854:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1865:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1861:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1887:17:1",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1898:6:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1891:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1953:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1967:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1967:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1923:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1932:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1940:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1928:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1928:17:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1919:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1919:27:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1948:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1916:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:36:1"
															},
															"nodeType": "YulIf",
															"src": "1913:143:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2125:178:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2140:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "2158:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "2144:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2182:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "2208:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2220:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "2187:20:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2187:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2175:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2175:50:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2175:50:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2238:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2249:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2254:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2245:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2245:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2238:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2272:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2283:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2288:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2279:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2279:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2272:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2087:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2090:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2084:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2098:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2100:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2109:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2112:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2105:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2105:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2100:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2069:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2071:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2080:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "2075:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "2065:238:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1659:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1667:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1675:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1683:5:1",
														"type": ""
													}
												],
												"src": "1587:722:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2377:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2386:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2377:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2442:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2415:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2353:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2361:5:1",
														"type": ""
													}
												],
												"src": "2315:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2554:293:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2603:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2605:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2605:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2605:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2582:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2590:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2578:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2578:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2597:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2574:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:35:1"
															},
															"nodeType": "YulIf",
															"src": "2564:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2695:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2722:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2709:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2699:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2738:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2814:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2822:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2810:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2829:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2837:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2747:62:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2738:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2532:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2548:5:1",
														"type": ""
													}
												],
												"src": "2477:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2984:311:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3033:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3035:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3035:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3035:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3012:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3020:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3008:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3008:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3027:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:35:1"
															},
															"nodeType": "YulIf",
															"src": "2994:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3125:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3152:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3139:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3129:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3168:121:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3262:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3270:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3258:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3277:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3285:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3177:80:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3177:112:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3168:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2962:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2970:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2978:5:1",
														"type": ""
													}
												],
												"src": "2889:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3395:293:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3444:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "3446:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3446:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3446:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3431:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3419:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3419:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3438:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3408:35:1"
															},
															"nodeType": "YulIf",
															"src": "3405:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3536:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3563:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3550:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3540:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3579:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3655:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3663:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3651:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3670:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3588:62:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3579:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3373:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3381:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3389:5:1",
														"type": ""
													}
												],
												"src": "3318:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3754:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3764:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3779:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3773:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3773:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3764:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3819:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3795:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3732:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3740:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3748:5:1",
														"type": ""
													}
												],
												"src": "3694:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3907:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3917:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3939:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3926:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3917:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4000:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_StakingPeriod_$1411",
																	"nodeType": "YulIdentifier",
																	"src": "3955:44:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:51:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3885:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3893:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3901:5:1",
														"type": ""
													}
												],
												"src": "3837:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4070:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4080:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4102:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4089:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4089:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4080:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4145:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4118:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4118:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4118:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4048:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4056:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4064:5:1",
														"type": ""
													}
												],
												"src": "4018:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4226:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4236:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4251:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4245:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4245:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4236:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4294:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4267:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4204:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4212:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4220:5:1",
														"type": ""
													}
												],
												"src": "4163:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4378:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4424:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4426:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4426:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4399:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4391:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:32:1"
															},
															"nodeType": "YulIf",
															"src": "4388:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4517:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4532:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4546:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4536:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4561:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4596:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4607:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4592:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4592:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4616:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4571:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4561:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4371:6:1",
														"type": ""
													}
												],
												"src": "4312:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:409:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4794:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4796:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4796:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4796:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4769:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4778:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:32:1"
															},
															"nodeType": "YulIf",
															"src": "4758:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4887:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4902:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4916:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4906:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4931:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4966:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4977:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4962:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4962:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4986:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4941:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4941:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4931:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5014:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5029:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5033:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5059:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5112:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5123:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5108:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5132:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1411",
																			"nodeType": "YulIdentifier",
																			"src": "5069:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5059:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4710:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4721:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4733:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4741:6:1",
														"type": ""
													}
												],
												"src": "4647:510:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5398:1406:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5445:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5447:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5447:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5447:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5440:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:33:1"
															},
															"nodeType": "YulIf",
															"src": "5408:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5538:302:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5553:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5584:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5595:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5580:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5580:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5567:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5567:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5557:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5645:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5647:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5647:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5647:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5617:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5614:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5614:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5611:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5742:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5802:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5813:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5798:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5798:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5822:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5752:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5752:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5742:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5850:303:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5865:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5896:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5907:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5892:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5892:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5879:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5879:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5869:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5958:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5960:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5960:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5960:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5927:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5927:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "5924:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6055:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6115:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6126:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6111:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6111:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6135:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6065:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6065:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6055:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6163:321:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6178:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6209:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6220:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6205:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6205:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6192:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6182:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6271:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6273:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6273:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6273:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6243:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6251:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6240:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "6237:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6368:106:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6446:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6457:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6442:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6442:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6466:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6378:63:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6378:96:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6368:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6494:303:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6509:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6540:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6551:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6536:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6536:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6523:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6523:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6513:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6602:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6604:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6604:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6604:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6574:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6582:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6571:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6571:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "6568:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6699:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6759:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6770:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6755:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6779:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6709:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6699:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5375:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5383:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5391:6:1",
														"type": ""
													}
												],
												"src": "5163:1641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6884:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6930:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6932:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6932:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6932:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6905:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6926:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:32:1"
															},
															"nodeType": "YulIf",
															"src": "6894:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7023:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7038:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7052:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7042:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7067:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7110:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7121:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7106:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7106:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7130:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7077:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7077:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7067:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6854:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6865:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6877:6:1",
														"type": ""
													}
												],
												"src": "6810:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7245:281:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7291:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7293:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7293:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7293:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7266:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7275:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7262:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7262:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7258:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7258:32:1"
															},
															"nodeType": "YulIf",
															"src": "7255:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7384:135:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7399:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7413:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7428:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7481:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7492:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7477:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7477:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7501:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1411",
																			"nodeType": "YulIdentifier",
																			"src": "7438:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7438:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7428:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7215:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7226:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7238:6:1",
														"type": ""
													}
												],
												"src": "7161:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7644:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7646:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7646:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7646:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7619:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7628:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7615:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7611:32:1"
															},
															"nodeType": "YulIf",
															"src": "7608:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "7737:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7752:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7766:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7756:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7781:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7816:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7827:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7812:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7812:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7836:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7791:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7791:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7781:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7568:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7579:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7591:6:1",
														"type": ""
													}
												],
												"src": "7532:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7944:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7990:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7992:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7992:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7992:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7965:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7974:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7961:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7961:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7986:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7957:32:1"
															},
															"nodeType": "YulIf",
															"src": "7954:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8083:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8098:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8112:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8102:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8127:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8173:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8184:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8169:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8169:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8193:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8137:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8137:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8127:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7914:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7925:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7937:6:1",
														"type": ""
													}
												],
												"src": "7867:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8325:409:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8371:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8373:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8373:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8373:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8346:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8355:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8367:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8338:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:32:1"
															},
															"nodeType": "YulIf",
															"src": "8335:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8464:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8479:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8493:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8483:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8508:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8543:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8554:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8539:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8539:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8563:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8518:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8508:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8591:136:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8606:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8620:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8610:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8636:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8689:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8700:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8685:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8685:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8709:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1411",
																			"nodeType": "YulIdentifier",
																			"src": "8646:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8636:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8287:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8298:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8310:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8318:6:1",
														"type": ""
													}
												],
												"src": "8224:510:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8805:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8822:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8845:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8827:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8827:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8815:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8793:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8800:3:1",
														"type": ""
													}
												],
												"src": "8740:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8943:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8960:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9010:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$218_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8965:44:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8965:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:64:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$218_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8931:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8938:3:1",
														"type": ""
													}
												],
												"src": "8864:159:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9110:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9127:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9179:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_StakingPeriod_$1411_to_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "9132:46:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9120:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9120:66:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9098:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9105:3:1",
														"type": ""
													}
												],
												"src": "9029:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9344:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9354:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9420:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9425:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9361:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9526:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																	"nodeType": "YulIdentifier",
																	"src": "9437:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9437:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9539:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9550:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9555:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9546:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9332:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9340:3:1",
														"type": ""
													}
												],
												"src": "9198:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9716:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9726:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9792:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9797:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9733:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9733:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9898:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9809:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9911:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9922:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9927:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9918:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9911:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9704:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9712:3:1",
														"type": ""
													}
												],
												"src": "9570:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10088:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10098:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10169:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10105:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10105:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10098:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10270:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																	"nodeType": "YulIdentifier",
																	"src": "10181:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10181:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10181:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10283:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10294:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10299:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10290:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10290:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10283:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10084:3:1",
														"type": ""
													}
												],
												"src": "9942:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10460:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10470:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10536:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10541:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10477:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10642:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "10553:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10553:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10655:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10666:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10671:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10662:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10662:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10448:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10456:3:1",
														"type": ""
													}
												],
												"src": "10314:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10832:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10842:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10908:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10913:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10849:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10849:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10842:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11014:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "10925:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10925:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11027:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11038:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11043:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11027:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10820:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10828:3:1",
														"type": ""
													}
												],
												"src": "10686:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11204:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11214:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11280:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11285:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11221:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11221:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11386:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																	"nodeType": "YulIdentifier",
																	"src": "11297:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11297:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11297:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11399:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11410:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11415:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11406:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11399:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11192:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11200:3:1",
														"type": ""
													}
												],
												"src": "11058:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11495:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11512:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11535:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11517:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11517:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11505:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11505:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11505:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11483:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11490:3:1",
														"type": ""
													}
												],
												"src": "11430:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11652:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11662:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11674:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11685:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11670:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11670:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11662:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11742:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11755:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11766:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11751:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11698:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11698:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11698:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11624:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11636:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11647:4:1",
														"type": ""
													}
												],
												"src": "11554:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11908:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11930:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11941:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11926:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11998:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12011:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12022:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12007:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12007:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11954:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11954:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11954:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12079:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12092:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12103:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12088:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12088:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12035:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12035:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12035:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11872:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11884:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11892:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11903:4:1",
														"type": ""
													}
												],
												"src": "11782:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12274:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12284:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12296:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12307:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12292:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12284:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12364:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12377:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12388:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12373:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12320:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12320:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12320:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12445:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12458:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12469:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12454:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12401:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12401:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12401:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12527:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12540:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12551:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12536:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12483:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12483:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12483:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12230:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12242:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12250:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12258:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12269:4:1",
														"type": ""
													}
												],
												"src": "12120:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12694:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12704:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12716:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12727:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12712:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12712:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12704:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12784:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12797:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12808:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12793:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12740:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12740:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12740:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12865:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12878:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12889:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12874:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12874:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12821:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12821:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12658:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12670:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12678:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12689:4:1",
														"type": ""
													}
												],
												"src": "12568:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13018:138:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13028:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13040:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13051:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13036:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13028:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13122:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13146:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13131:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$218_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13064:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13064:85:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13064:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$218__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12990:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13002:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13013:4:1",
														"type": ""
													}
												],
												"src": "12906:250:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13276:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13286:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13298:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13309:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13294:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13286:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13382:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13395:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13406:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13391:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13391:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13322:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13322:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13322:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_StakingPeriod_$1411__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13248:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13260:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13271:4:1",
														"type": ""
													}
												],
												"src": "13162:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13593:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13603:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13615:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13611:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13611:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13603:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13650:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13661:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13646:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13669:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13675:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13665:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13639:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13639:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13639:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13695:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13829:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13703:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13703:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13695:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13573:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13588:4:1",
														"type": ""
													}
												],
												"src": "13422:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14018:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14028:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14040:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14051:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14036:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14036:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14028:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14075:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14086:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14071:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14094:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14100:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14090:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14120:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14254:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14128:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14128:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14120:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13998:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14013:4:1",
														"type": ""
													}
												],
												"src": "13847:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14443:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14453:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14465:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14461:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14461:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14453:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14500:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14496:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14519:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14525:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14515:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14489:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14489:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14545:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14679:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14553:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14553:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14545:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14423:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14438:4:1",
														"type": ""
													}
												],
												"src": "14272:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14868:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14878:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14890:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14901:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14886:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14886:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14878:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14925:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14936:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14921:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14921:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14944:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14950:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14940:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14914:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14914:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14914:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14970:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15104:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14978:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14978:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14970:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14848:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14863:4:1",
														"type": ""
													}
												],
												"src": "14697:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15293:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15303:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15315:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15326:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15311:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15311:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15303:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15350:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15361:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15346:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15346:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15369:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15375:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15365:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15339:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15339:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15395:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15529:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15403:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15403:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15395:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15273:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15288:4:1",
														"type": ""
													}
												],
												"src": "15122:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15718:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15728:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15740:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15751:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15736:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15728:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15775:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15786:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15771:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15771:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15794:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15800:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15790:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15764:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15764:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15764:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15820:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15954:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15828:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15828:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15820:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15698:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15713:4:1",
														"type": ""
													}
												],
												"src": "15547:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16070:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16080:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16092:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16103:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16088:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16080:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16160:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16184:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16169:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16116:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16116:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16116:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16042:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16054:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16065:4:1",
														"type": ""
													}
												],
												"src": "15972:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16370:304:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16380:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16403:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16388:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16380:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16460:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16473:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16484:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16469:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16469:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16416:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16416:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16416:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16557:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16570:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16581:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16566:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16497:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16497:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16497:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16639:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16652:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16663:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16648:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16648:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16595:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16595:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16595:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1411_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16326:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16338:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16346:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16354:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16365:4:1",
														"type": ""
													}
												],
												"src": "16200:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16721:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16731:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "16741:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16741:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16731:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16790:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "16798:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "16770:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16770:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16770:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16705:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16714:6:1",
														"type": ""
													}
												],
												"src": "16680:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16855:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16865:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16881:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16875:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16875:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16865:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16848:6:1",
														"type": ""
													}
												],
												"src": "16815:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16978:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17083:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17085:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17085:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17085:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17055:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17063:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17052:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17052:30:1"
															},
															"nodeType": "YulIf",
															"src": "17049:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17115:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17127:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17135:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17123:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17115:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17177:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17189:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17195:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17185:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17185:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17177:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16962:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16973:4:1",
														"type": ""
													}
												],
												"src": "16896:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17313:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17418:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17420:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17420:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17420:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17390:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17398:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17387:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17387:30:1"
															},
															"nodeType": "YulIf",
															"src": "17384:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17450:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17462:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17470:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17458:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17450:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17512:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17524:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17530:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17520:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17512:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17297:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17308:4:1",
														"type": ""
													}
												],
												"src": "17213:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17630:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17735:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "17737:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17737:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17737:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17707:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17715:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17704:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17704:30:1"
															},
															"nodeType": "YulIf",
															"src": "17701:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17767:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17779:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17787:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17775:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17767:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17829:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17841:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17847:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17837:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17837:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17829:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17614:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17625:4:1",
														"type": ""
													}
												],
												"src": "17548:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17961:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17978:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17983:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17971:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17971:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17971:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17999:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18018:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18023:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18014:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18014:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17999:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17933:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17938:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17949:11:1",
														"type": ""
													}
												],
												"src": "17865:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18084:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18094:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18117:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18099:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18099:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18094:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18128:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18151:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18133:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18133:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18128:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18291:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18293:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18293:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18293:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18212:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18219:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18287:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18215:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18209:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18209:81:1"
															},
															"nodeType": "YulIf",
															"src": "18206:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18323:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18334:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18337:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18330:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "18323:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18071:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18074:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "18080:3:1",
														"type": ""
													}
												],
												"src": "18040:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18393:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18403:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18426:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18408:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18408:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18403:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18437:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18460:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18442:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18442:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18437:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18484:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "18486:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18486:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18486:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18481:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18474:9:1"
															},
															"nodeType": "YulIf",
															"src": "18471:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18516:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18525:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18528:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18521:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "18516:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18382:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18385:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "18391:1:1",
														"type": ""
													}
												],
												"src": "18351:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18590:300:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18600:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18623:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18605:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18605:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18600:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18634:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18657:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18639:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18639:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18634:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18832:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18834:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18834:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18834:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18744:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "18737:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18737:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18730:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18730:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "18752:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18759:66:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "18827:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "18755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18755:74:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18749:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18749:81:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18726:105:1"
															},
															"nodeType": "YulIf",
															"src": "18723:131:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18864:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18879:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "18882:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "18875:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18875:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "18864:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18573:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18576:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "18582:7:1",
														"type": ""
													}
												],
												"src": "18542:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18941:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18951:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "18974:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18956:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18956:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "18951:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18985:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19008:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "18990:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18990:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "18985:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19032:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19034:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19034:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19034:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19026:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19029:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19023:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19023:8:1"
															},
															"nodeType": "YulIf",
															"src": "19020:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19064:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19076:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19079:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19072:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19064:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "18927:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "18930:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "18936:4:1",
														"type": ""
													}
												],
												"src": "18896:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19138:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19148:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19177:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "19159:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19159:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19148:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19120:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19130:7:1",
														"type": ""
													}
												],
												"src": "19093:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19237:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19247:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19272:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "19265:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19265:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19258:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19258:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19247:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19219:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19229:7:1",
														"type": ""
													}
												],
												"src": "19195:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19354:84:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19364:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19375:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19364:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19426:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_StakingPeriod_$1411",
																	"nodeType": "YulIdentifier",
																	"src": "19381:44:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19381:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19381:51:1"
														}
													]
												},
												"name": "cleanup_t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19336:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19346:7:1",
														"type": ""
													}
												],
												"src": "19291:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19489:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19499:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19514:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19521:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19510:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19499:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19481:7:1",
														"type": ""
													}
												],
												"src": "19444:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19621:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19631:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19642:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19631:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19603:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19613:7:1",
														"type": ""
													}
												],
												"src": "19576:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19733:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19743:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19787:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "19756:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19756:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19743:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$218_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19713:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19723:9:1",
														"type": ""
													}
												],
												"src": "19659:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19881:71:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19891:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19940:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_StakingPeriod_$1411",
																	"nodeType": "YulIdentifier",
																	"src": "19904:35:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19904:42:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "19891:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_StakingPeriod_$1411_to_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19861:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "19871:9:1",
														"type": ""
													}
												],
												"src": "19805:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20018:66:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20028:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20072:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20041:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20041:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20028:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19998:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20008:9:1",
														"type": ""
													}
												],
												"src": "19958:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20150:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20160:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20191:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "20173:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20173:24:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "20160:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20130:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "20140:9:1",
														"type": ""
													}
												],
												"src": "20090:113:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20252:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20262:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "20284:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "20314:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "20292:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20292:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20280:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "20266:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20431:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "20433:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20433:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20433:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "20374:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20386:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20371:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20371:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "20410:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20422:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "20407:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20407:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "20368:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20368:62:1"
															},
															"nodeType": "YulIf",
															"src": "20365:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20469:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "20473:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20462:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20462:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20238:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "20246:4:1",
														"type": ""
													}
												],
												"src": "20209:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20539:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20549:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20576:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20558:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20558:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20549:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20672:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20674:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20674:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20674:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20597:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20604:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20594:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20594:77:1"
															},
															"nodeType": "YulIf",
															"src": "20591:103:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20703:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20714:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20721:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20710:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20703:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20525:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20535:3:1",
														"type": ""
													}
												],
												"src": "20496:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20763:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20780:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20783:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20773:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20773:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20877:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20880:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20870:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20870:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20870:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20901:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20904:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20894:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20894:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20735:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20949:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20966:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20969:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20959:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20959:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20959:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21063:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21066:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21056:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21056:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21090:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21080:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21080:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "20921:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21135:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21152:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21155:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21145:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21145:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21249:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21252:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21242:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21242:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21242:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21273:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21276:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21266:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21266:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "21107:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21321:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21338:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21341:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21331:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21331:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21435:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21438:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21428:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21428:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21459:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21462:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21452:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21452:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "21293:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21507:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21524:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21527:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21517:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21517:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21621:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21624:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21614:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21614:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21614:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21645:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21648:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21638:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21638:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "21479:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21693:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21710:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21713:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21703:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21703:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21807:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21810:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21800:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21800:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21800:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21831:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21834:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21824:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21824:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21824:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "21665:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21940:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21957:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21960:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21950:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21950:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "21851:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22063:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22080:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22083:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22073:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22073:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "21974:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22186:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22203:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22206:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22196:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22196:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22196:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "22097:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22309:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22326:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22329:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22319:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22319:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22319:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "22220:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22391:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22401:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22419:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22426:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22415:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22435:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "22431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22431:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "22411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22411:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "22401:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22374:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "22384:6:1",
														"type": ""
													}
												],
												"src": "22343:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22557:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22579:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22575:14:1"
																	},
																	{
																		"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22591:32:1",
																		"type": "",
																		"value": "stake value should not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22568:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22568:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22568:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22549:6:1",
														"type": ""
													}
												],
												"src": "22451:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22743:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22765:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22773:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22761:14:1"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206973206e6f742065787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22777:31:1",
																		"type": "",
																		"value": "Staking period is not expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22754:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22754:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22735:6:1",
														"type": ""
													}
												],
												"src": "22637:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22928:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22950:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22958:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22946:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22946:14:1"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22962:23:1",
																		"type": "",
																		"value": "Token Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22939:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22939:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22939:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22920:6:1",
														"type": ""
													}
												],
												"src": "22822:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23105:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23127:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23135:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23123:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23139:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23116:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23116:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23195:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23203:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23191:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23208:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23184:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23184:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23097:6:1",
														"type": ""
													}
												],
												"src": "22999:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23336:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23358:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23366:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23354:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23370:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23347:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23347:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23328:6:1",
														"type": ""
													}
												],
												"src": "23230:182:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23524:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23546:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23554:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23542:14:1"
																	},
																	{
																		"hexValue": "496e76616c6964205374616b6520416d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23558:22:1",
																		"type": "",
																		"value": "Invalid Stake Amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23535:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23535:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23516:6:1",
														"type": ""
													}
												],
												"src": "23418:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23655:62:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23689:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nodeType": "YulIdentifier",
																				"src": "23691:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23691:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23691:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23678:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23685:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "23675:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23675:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23668:20:1"
															},
															"nodeType": "YulIf",
															"src": "23665:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23648:5:1",
														"type": ""
													}
												],
												"src": "23594:123:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23766:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23823:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23832:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23835:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23825:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23825:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23825:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23789:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23814:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "23796:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23796:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23786:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23786:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23779:43:1"
															},
															"nodeType": "YulIf",
															"src": "23776:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23759:5:1",
														"type": ""
													}
												],
												"src": "23723:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23891:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23945:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23954:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "23957:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "23947:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23947:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23947:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23914:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23936:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "23921:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23921:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "23911:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23911:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23904:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23904:40:1"
															},
															"nodeType": "YulIf",
															"src": "23901:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23884:5:1",
														"type": ""
													}
												],
												"src": "23851:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24034:56:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24057:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24064:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "24054:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24054:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24047:20:1"
															},
															"nodeType": "YulIf",
															"src": "24044:40:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_StakingPeriod_$1411",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24027:5:1",
														"type": ""
													}
												],
												"src": "23973:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24139:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24196:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24205:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24208:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24198:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24198:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24198:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24162:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "24187:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "24169:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24169:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "24159:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24159:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24152:43:1"
															},
															"nodeType": "YulIf",
															"src": "24149:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24132:5:1",
														"type": ""
													}
												],
												"src": "24096:122:1"
											}
										]
									},
									"contents": "{\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // enum Staking.StakingPeriod[]\n    function abi_decode_available_length_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_enum$_StakingPeriod_$1411(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let src := offset\n        if gt(add(src, mul(length, 0x20)), end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // enum Staking.StakingPeriod[]\n    function abi_decode_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_enum$_StakingPeriod_$1411(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_StakingPeriod_$1411(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1411(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$1411(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_StakingPeriod_$1411(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_StakingPeriod_$1411(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1411(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$1411(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$218_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$218_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakingPeriod_$1411_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$218__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$218_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_enum$_StakingPeriod_$1411__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1411_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_StakingPeriod_$1411_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_StakingPeriod_$1411(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakingPeriod_$1411(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$218_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_enum$_StakingPeriod_$1411_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakingPeriod_$1411(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392(memPtr) {\n\n        mstore(add(memPtr, 0), \"stake value should not be zero\")\n\n    }\n\n    function store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period is not expired\")\n\n    }\n\n    function store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer Failed\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Stake Amount\")\n\n    }\n\n    function validator_assert_t_enum$_StakingPeriod_$1411(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_StakingPeriod_$1411(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101735760003560e01c80637e61badd116100de578063ad9159fd11610097578063e580d97611610071578063e580d9761461044e578063e627f2db1461047e578063e9917c071461049c578063f2fde38b146104b857610173565b8063ad9159fd146103e2578063b8fcf93714610412578063bf5839031461043057610173565b80637e61badd146103205780638b0e9f3f1461033c5780638cfcece71461035a5780638da5cb5b14610376578063980b4229146103945780639e196cad146103b257610173565b80632b4afcc3116101305780632b4afcc3146102605780632e1e844e1461027c5780632f7d122f146102985780633027ffc0146102b457806357d54aed146102e6578063715018a61461031657610173565b8063063b35bf14610178578063066c6dbb146101a85780630ded03cd146101d85780630e15561a14610208578063108b96c4146102265780632b28ea2914610244575b600080fd5b610192600480360381019061018d919061277f565b6104d4565b60405161019f9190612b57565b60405180910390f35b6101c260048036038101906101bd91906128c3565b610563565b6040516101cf9190612c32565b60405180910390f35b6101f260048036038101906101ed91906128c3565b61057b565b6040516101ff9190612c32565b60405180910390f35b6102106106f6565b60405161021d9190612c32565b60405180910390f35b61022e6106fc565b60405161023b9190612c32565b60405180910390f35b61025e60048036038101906102599190612752565b610702565b005b61027a600480360381019061027591906127bf565b6107f7565b005b6102966004803603810190610291919061294a565b610e75565b005b6102b260048036038101906102ad91906128f0565b610ebd565b005b6102ce60048036038101906102c9919061277f565b610ecf565b6040516102dd93929190612c4d565b60405180910390f35b61030060048036038101906102fb91906128c3565b610f13565b60405161030d9190612c32565b60405180910390f35b61031e61100c565b005b61033a6004803603810190610335919061294a565b611020565b005b610344611580565b6040516103519190612c32565b60405180910390f35b610374600480360381019061036f919061294a565b611586565b005b61037e6115ce565b60405161038b9190612a98565b60405180910390f35b61039c6115f7565b6040516103a99190612c32565b60405180910390f35b6103cc60048036038101906103c791906128c3565b6115fd565b6040516103d99190612c32565b60405180910390f35b6103fc60048036038101906103f7919061277f565b611615565b6040516104099190612c32565b60405180910390f35b61041a611697565b6040516104279190612b3c565b60405180910390f35b6104386116bd565b6040516104459190612c32565b60405180910390f35b610468600480360381019061046391906128c3565b611832565b6040516104759190612c32565b60405180910390f35b61048661193a565b6040516104939190612c32565b60405180910390f35b6104b660048036038101906104b1919061294a565b611944565b005b6104d260048036038101906104cd9190612752565b611e33565b005b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600481111561052a57610529612fce565b5b600481111561053c5761053b612fce565b5b815260200190815260200160002060010160009054906101000a900460ff16905092915050565b60086020528060005260406000206000915090505481565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008460048111156105d2576105d1612fce565b5b60048111156105e4576105e3612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600481111561062c5761062b612fce565b5b600481111561063e5761063d612fce565b5b8152602001600282015481525050905060006106638260000151838460400151611eb7565b905060006106b060186106a2603c610694603c8860400151426106869190612e1f565b611fbb90919063ffffffff16565b611fbb90919063ffffffff16565b611fbb90919063ffffffff16565b9050600181106106c057806106c3565b60015b90506106ec816106de61016d85611fbb90919063ffffffff16565b611fd190919063ffffffff16565b9350505050919050565b60025481565b60055481565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd82306005546040518463ffffffff1660e01b815260040161076393929190612adc565b602060405180830381600087803b15801561077d57600080fd5b505af1158015610791573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b59190612896565b6107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb90612bb2565b60405180910390fd5b50565b6107ff611fe7565b60005b8451811015610e6e5760008482815181106108205761081f61302c565b5b602002602001015111610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90612b72565b60405180910390fd5b83818151811061087b5761087a61302c565b5b6020026020010151600560008282546108949190612d3e565b925050819055506000600660008784815181106108b4576108b361302c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085848151811061090b5761090a61302c565b5b6020026020010151600481111561092557610924612fce565b5b600481111561093757610936612fce565b5b8152602001908152602001600020600001541415610b16576109728582815181106109655761096461302c565b5b6020026020010151612065565b60405180606001604052808583815181106109905761098f61302c565b5b602002602001015181526020018483815181106109b0576109af61302c565b5b602002602001015160048111156109ca576109c9612fce565b5b81526020018383815181106109e2576109e161302c565b5b602002602001015181525060066000878481518110610a0457610a0361302c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858481518110610a5b57610a5a61302c565b5b60200260200101516004811115610a7557610a74612fce565b5b6004811115610a8757610a86612fce565b5b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836004811115610aca57610ac9612fce565b5b021790555060408201518160020155905050610b0b848281518110610af257610af161302c565b5b60200260200101516001546120e090919063ffffffff16565b600181905550610da1565b600060066000878481518110610b2f57610b2e61302c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858481518110610b8657610b8561302c565b5b60200260200101516004811115610ba057610b9f612fce565b5b6004811115610bb257610bb1612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166004811115610bfa57610bf9612fce565b5b6004811115610c0c57610c0b612fce565b5b81526020016002820154815250509050610c4d858381518110610c3257610c3161302c565b5b602002602001015182600001516120e090919063ffffffff16565b816000018181525050828281518110610c6957610c6861302c565b5b60200260200101518160400181815250508060066000888581518110610c9257610c9161302c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000868581518110610ce957610ce861302c565b5b60200260200101516004811115610d0357610d02612fce565b5b6004811115610d1557610d14612fce565b5b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836004811115610d5857610d57612fce565b5b021790555060408201518160020155905050610d99858381518110610d8057610d7f61302c565b5b60200260200101516001546120e090919063ffffffff16565b600181905550505b848181518110610db457610db361302c565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff167fadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c858381518110610e0657610e0561302c565b5b6020026020010151858481518110610e2157610e2061302c565b5b6020026020010151858581518110610e3c57610e3b61302c565b5b6020026020010151604051610e5393929190612c4d565b60405180910390a28080610e6690612f27565b915050610802565b5050505050565b610e7d611fe7565b8160076000836004811115610e9557610e94612fce565b5b6004811115610ea757610ea6612fce565b5b8152602001908152602001600020819055505050565b610ec5611fe7565b8060038190555050565b6006602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900460ff16908060020154905083565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846004811115610f6a57610f69612fce565b5b6004811115610f7c57610f7b612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166004811115610fc457610fc3612fce565b5b6004811115610fd657610fd5612fce565b5b815260200160028201548152505090506000610ff1826120f6565b82604001516110009190612d3e565b90508092505050919050565b611014611fe7565b61101e6000612228565b565b60008211611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a90612b72565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360048111156110b9576110b8612fce565b5b60048111156110cb576110ca612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff16600481111561111357611112612fce565b5b600481111561112557611124612fce565b5b8152602001600282015481525050905061113e816122ec565b61117d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117490612b92565b60405180910390fd5b80600001518311156111c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111bb90612c12565b60405180910390fd5b60006111cf8361057b565b90506111e884836000015161231590919063ffffffff16565b82600001818152505081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600481111561124657611245612fce565b5b600481111561125857611257612fce565b5b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600481111561129b5761129a612fce565b5b0217905550604082015181600201559050506112c28460015461231590919063ffffffff16565b6001819055506112dd816002546120e090919063ffffffff16565b6002819055506000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085600481111561133957611338612fce565b5b600481111561134b5761134a612fce565b5b815260200190815260200160002060000154141561136d5761136c3361232b565b5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016113ca929190612b13565b602060405180830381600087803b1580156113e457600080fd5b505af11580156113f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141c9190612896565b50600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd6114636115ce565b33846040518463ffffffff1660e01b815260040161148393929190612adc565b602060405180830381600087803b15801561149d57600080fd5b505af11580156114b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d59190612896565b503373ffffffffffffffffffffffffffffffffffffffff167f20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f5685854260405161152093929190612c4d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c5782854260405161157293929190612c4d565b60405180910390a250505050565b60015481565b61158e611fe7565b81600860008360048111156115a6576115a5612fce565b5b60048111156115b8576115b7612fce565b5b8152602001908152602001600020819055505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b60076020528060005260406000206000915090505481565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083600481111561166b5761166a612fce565b5b600481111561167d5761167c612fce565b5b815260200190815260200160002060000154905092915050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061182d600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a082316117086115ce565b6040518263ffffffff1660e01b81526004016117249190612a98565b60206040518083038186803b15801561173c57600080fd5b505afa158015611750573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611774919061291d565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e6117ba6115ce565b306040518363ffffffff1660e01b81526004016117d8929190612ab3565b60206040518083038186803b1580156117f057600080fd5b505afa158015611804573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611828919061291d565b61243a565b905090565b600080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084600481111561188957611888612fce565b5b600481111561189b5761189a612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1660048111156118e3576118e2612fce565b5b60048111156118f5576118f4612fce565b5b81526020016002820154815250509050600061191a8260000151838460400151611eb7565b905061193161016d82611fbb90919063ffffffff16565b92505050919050565b6000600254905090565b60008211611987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161197e90612b72565b60405180910390fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016119e693929190612adc565b602060405180830381600087803b158015611a0057600080fd5b505af1158015611a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a389190612896565b611a77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6e90612bb2565b60405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836004811115611acd57611acc612fce565b5b6004811115611adf57611ade612fce565b5b8152602001908152602001600020600001541415611c0857611b0033612065565b6040518060600160405280838152602001826004811115611b2457611b23612fce565b5b815260200142815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836004811115611b8157611b80612fce565b5b6004811115611b9357611b92612fce565b5b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836004811115611bd657611bd5612fce565b5b021790555060408201518160020155905050611bfd826001546120e090919063ffffffff16565b600181905550611ddd565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000836004811115611c5e57611c5d612fce565b5b6004811115611c7057611c6f612fce565b5b8152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff166004811115611cb857611cb7612fce565b5b6004811115611cca57611cc9612fce565b5b81526020016002820154815250509050611cf18382600001516120e090919063ffffffff16565b8160000181815250504281604001818152505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000846004811115611d5957611d58612fce565b5b6004811115611d6b57611d6a612fce565b5b81526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690836004811115611dae57611dad612fce565b5b021790555060408201518160020155905050611dd5836001546120e090919063ffffffff16565b600181905550505b3373ffffffffffffffffffffffffffffffffffffffff167fadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c838342604051611e2793929190612c4d565b60405180910390a25050565b611e3b611fe7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ea290612bd2565b60405180910390fd5b611eb481612228565b50565b60006003548211611f3d57611f366064611f286064611f1a6008600089602001516004811115611eea57611ee9612fce565b5b6004811115611efc57611efb612fce565b5b81526020019081526020016000205489611fd190919063ffffffff16565b611fbb90919063ffffffff16565b611fbb90919063ffffffff16565b9050611fb4565b611fb16064611fa36064611f956007600089602001516004811115611f6557611f64612fce565b5b6004811115611f7757611f76612fce565b5b81526020019081526020016000205489611fd190919063ffffffff16565b611fbb90919063ffffffff16565b611fbb90919063ffffffff16565b90505b9392505050565b60008183611fc99190612d94565b905092915050565b60008183611fdf9190612dc5565b905092915050565b611fef612453565b73ffffffffffffffffffffffffffffffffffffffff1661200d6115ce565b73ffffffffffffffffffffffffffffffffffffffff1614612063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161205a90612bf2565b60405180910390fd5b565b60006120708261245b565b509050806120dc576004829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b600081836120ee9190612d3e565b905092915050565b600080600481111561210b5761210a612fce565b5b8260200151600481111561212257612121612fce565b5b14612216576001600481111561213b5761213a612fce565b5b8260200151600481111561215257612151612fce565b5b1461220c576002600481111561216b5761216a612fce565b5b8260200151600481111561218257612181612fce565b5b14612202576003600481111561219b5761219a612fce565b5b826020015160048111156121b2576121b1612fce565b5b146121f8576004808111156121ca576121c9612fce565b5b826020015160048111156121e1576121e0612fce565b5b146121ed5760006121f3565b6301e133805b6121fd565b629e34005b612207565b6276a7005b612211565b62278d005b61221b565b6213c6805b63ffffffff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000806122f8836120f6565b83604001516123079190612d3e565b905080421015915050919050565b600081836123239190612e1f565b905092915050565b6000806123378361245b565b91509150811561243557600460016004805490506123559190612e1f565b815481106123665761236561302c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600482815481106123a5576123a461302c565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060048054806123ff576123fe612ffd565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b505050565b6000818310612449578161244b565b825b905092915050565b600033905090565b60008060005b60048054905081101561250157600481815481106124825761248161302c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156124ed57600181925092505061250a565b6001816124fa9190612d3e565b9050612461565b50600080915091505b915091565b600061252261251d84612ca9565b612c84565b905080838252602082019050828560208602820111156125455761254461308f565b5b60005b85811015612575578161255b888261265f565b845260208401935060208301925050600181019050612548565b5050509392505050565b600061259261258d84612cd5565b612c84565b905080838252602082019050828560208602820111156125b5576125b461308f565b5b60005b858110156125e557816125cb8882612713565b8452602084019350602083019250506001810190506125b8565b5050509392505050565b60006126026125fd84612d01565b612c84565b905080838252602082019050828560208602820111156126255761262461308f565b5b60005b85811015612655578161263b8882612728565b845260208401935060208301925050600181019050612628565b5050509392505050565b60008135905061266e816131df565b92915050565b600082601f8301126126895761268861308a565b5b813561269984826020860161250f565b91505092915050565b600082601f8301126126b7576126b661308a565b5b81356126c784826020860161257f565b91505092915050565b600082601f8301126126e5576126e461308a565b5b81356126f58482602086016125ef565b91505092915050565b60008151905061270d816131f6565b92915050565b6000813590506127228161320d565b92915050565b6000813590506127378161321d565b92915050565b60008151905061274c8161321d565b92915050565b60006020828403121561276857612767613099565b5b60006127768482850161265f565b91505092915050565b6000806040838503121561279657612795613099565b5b60006127a48582860161265f565b92505060206127b585828601612713565b9150509250929050565b600080600080608085870312156127d9576127d8613099565b5b600085013567ffffffffffffffff8111156127f7576127f6613094565b5b61280387828801612674565b945050602085013567ffffffffffffffff81111561282457612823613094565b5b612830878288016126d0565b935050604085013567ffffffffffffffff81111561285157612850613094565b5b61285d878288016126a2565b925050606085013567ffffffffffffffff81111561287e5761287d613094565b5b61288a878288016126d0565b91505092959194509250565b6000602082840312156128ac576128ab613099565b5b60006128ba848285016126fe565b91505092915050565b6000602082840312156128d9576128d8613099565b5b60006128e784828501612713565b91505092915050565b60006020828403121561290657612905613099565b5b600061291484828501612728565b91505092915050565b60006020828403121561293357612932613099565b5b60006129418482850161273d565b91505092915050565b6000806040838503121561296157612960613099565b5b600061296f85828601612728565b925050602061298085828601612713565b9150509250929050565b61299381612e53565b82525050565b6129a281612eae565b82525050565b6129b181612ec0565b82525050565b60006129c4601e83612d2d565b91506129cf826130af565b602082019050919050565b60006129e7601d83612d2d565b91506129f2826130d8565b602082019050919050565b6000612a0a601583612d2d565b9150612a1582613101565b602082019050919050565b6000612a2d602683612d2d565b9150612a388261312a565b604082019050919050565b6000612a50602083612d2d565b9150612a5b82613179565b602082019050919050565b6000612a73601483612d2d565b9150612a7e826131a2565b602082019050919050565b612a9281612ea4565b82525050565b6000602082019050612aad600083018461298a565b92915050565b6000604082019050612ac8600083018561298a565b612ad5602083018461298a565b9392505050565b6000606082019050612af1600083018661298a565b612afe602083018561298a565b612b0b6040830184612a89565b949350505050565b6000604082019050612b28600083018561298a565b612b356020830184612a89565b9392505050565b6000602082019050612b516000830184612999565b92915050565b6000602082019050612b6c60008301846129a8565b92915050565b60006020820190508181036000830152612b8b816129b7565b9050919050565b60006020820190508181036000830152612bab816129da565b9050919050565b60006020820190508181036000830152612bcb816129fd565b9050919050565b60006020820190508181036000830152612beb81612a20565b9050919050565b60006020820190508181036000830152612c0b81612a43565b9050919050565b60006020820190508181036000830152612c2b81612a66565b9050919050565b6000602082019050612c476000830184612a89565b92915050565b6000606082019050612c626000830186612a89565b612c6f60208301856129a8565b612c7c6040830184612a89565b949350505050565b6000612c8e612c9f565b9050612c9a8282612ef6565b919050565b6000604051905090565b600067ffffffffffffffff821115612cc457612cc361305b565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612cf057612cef61305b565b5b602082029050602081019050919050565b600067ffffffffffffffff821115612d1c57612d1b61305b565b5b602082029050602081019050919050565b600082825260208201905092915050565b6000612d4982612ea4565b9150612d5483612ea4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612d8957612d88612f70565b5b828201905092915050565b6000612d9f82612ea4565b9150612daa83612ea4565b925082612dba57612db9612f9f565b5b828204905092915050565b6000612dd082612ea4565b9150612ddb83612ea4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612e1457612e13612f70565b5b828202905092915050565b6000612e2a82612ea4565b9150612e3583612ea4565b925082821015612e4857612e47612f70565b5b828203905092915050565b6000612e5e82612e84565b9050919050565b60008115159050919050565b6000819050612e7f826131cb565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000612eb982612ed2565b9050919050565b6000612ecb82612e71565b9050919050565b6000612edd82612ee4565b9050919050565b6000612eef82612e84565b9050919050565b612eff8261309e565b810181811067ffffffffffffffff82111715612f1e57612f1d61305b565b5b80604052505050565b6000612f3282612ea4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612f6557612f64612f70565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f7374616b652076616c75652073686f756c64206e6f74206265207a65726f0000600082015250565b7f5374616b696e6720706572696f64206973206e6f742065787069726564000000600082015250565b7f546f6b656e205472616e73666572204661696c65640000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e76616c6964205374616b6520416d6f756e74000000000000000000000000600082015250565b600581106131dc576131db612fce565b5b50565b6131e881612e53565b81146131f357600080fd5b50565b6131ff81612e65565b811461320a57600080fd5b50565b6005811061321a57600080fd5b50565b61322681612ea4565b811461323157600080fd5b5056fea26469706673582212206aeb2d2cf91f38aba214b6c020df4f78a31488094e13efd8043c16f1fb1e01ae64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7E61BADD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xAD9159FD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE580D976 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE580D976 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xE627F2DB EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xE9917C07 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4B8 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xAD9159FD EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x430 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x7E61BADD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x8CFCECE7 EQ PUSH2 0x35A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0x980B4229 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x9E196CAD EQ PUSH2 0x3B2 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x2B4AFCC3 GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x2B4AFCC3 EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x2E1E844E EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x2F7D122F EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x3027FFC0 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x57D54AED EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x316 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x63B35BF EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x66C6DBB EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0xDED03CD EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x108B96C4 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x2B28EA29 EQ PUSH2 0x244 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0x4D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x6FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x27BF JUMP JUMPDEST PUSH2 0x7F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31E PUSH2 0x100C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1020 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x344 PUSH2 0x1580 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1586 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37E PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x15FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x277F JUMP JUMPDEST PUSH2 0x1615 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x409 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH2 0x1697 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x2B3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH2 0x16BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x468 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x463 SWAP2 SWAP1 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x486 PUSH2 0x193A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x294A JUMP JUMPDEST PUSH2 0x1944 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x1E33 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5D2 JUMPI PUSH2 0x5D1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x5E4 JUMPI PUSH2 0x5E3 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x62C JUMPI PUSH2 0x62B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x63E JUMPI PUSH2 0x63D PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x663 DUP3 PUSH1 0x0 ADD MLOAD DUP4 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B0 PUSH1 0x18 PUSH2 0x6A2 PUSH1 0x3C PUSH2 0x694 PUSH1 0x3C DUP9 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x6C0 JUMPI DUP1 PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x6EC DUP2 PUSH2 0x6DE PUSH2 0x16D DUP6 PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x791 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7B5 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7FF PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xE6E JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x820 JUMPI PUSH2 0x81F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD GT PUSH2 0x868 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85F SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8B4 JUMPI PUSH2 0x8B3 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x90B JUMPI PUSH2 0x90A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x937 JUMPI PUSH2 0x936 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0xB16 JUMPI PUSH2 0x972 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x965 JUMPI PUSH2 0x964 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9B0 JUMPI PUSH2 0x9AF PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9CA JUMPI PUSH2 0x9C9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9E2 JUMPI PUSH2 0x9E1 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA04 JUMPI PUSH2 0xA03 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xA5B JUMPI PUSH2 0xA5A PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA87 JUMPI PUSH2 0xA86 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xACA JUMPI PUSH2 0xAC9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xB0B DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAF2 JUMPI PUSH2 0xAF1 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0xB85 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBA0 JUMPI PUSH2 0xB9F PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBB2 JUMPI PUSH2 0xBB1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBFA JUMPI PUSH2 0xBF9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0xC4D DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC32 JUMPI PUSH2 0xC31 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC69 JUMPI PUSH2 0xC68 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x6 PUSH1 0x0 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC92 JUMPI PUSH2 0xC91 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xCE9 JUMPI PUSH2 0xCE8 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD03 JUMPI PUSH2 0xD02 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD15 JUMPI PUSH2 0xD14 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD58 JUMPI PUSH2 0xD57 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xD99 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD80 JUMPI PUSH2 0xD7F PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xDB4 JUMPI PUSH2 0xDB3 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xE21 JUMPI PUSH2 0xE20 PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0x302C JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0xE53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 DUP1 PUSH2 0xE66 SWAP1 PUSH2 0x2F27 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x802 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE7D PUSH2 0x1FE7 JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xEA7 JUMPI PUSH2 0xEA6 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xEC5 PUSH2 0x1FE7 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF6A JUMPI PUSH2 0xF69 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF7C JUMPI PUSH2 0xF7B PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFC4 JUMPI PUSH2 0xFC3 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xFD6 JUMPI PUSH2 0xFD5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xFF1 DUP3 PUSH2 0x20F6 JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x1000 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1014 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0x101E PUSH1 0x0 PUSH2 0x2228 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105A SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10CB JUMPI PUSH2 0x10CA PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1125 JUMPI PUSH2 0x1124 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x113E DUP2 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x117D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP1 PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 ADD MLOAD DUP4 GT ISZERO PUSH2 0x11C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11BB SWAP1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11CF DUP4 PUSH2 0x57B JUMP JUMPDEST SWAP1 POP PUSH2 0x11E8 DUP5 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x2315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1246 JUMPI PUSH2 0x1245 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1258 JUMPI PUSH2 0x1257 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x129B JUMPI PUSH2 0x129A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x12C2 DUP5 PUSH1 0x1 SLOAD PUSH2 0x2315 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x12DD DUP2 PUSH1 0x2 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1339 JUMPI PUSH2 0x1338 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x136D JUMPI PUSH2 0x136C CALLER PUSH2 0x232B JUMP JUMPDEST JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CA SWAP3 SWAP2 SWAP1 PUSH2 0x2B13 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141C SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x1463 PUSH2 0x15CE JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14D5 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1520 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57 DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1572 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x158E PUSH2 0x1FE7 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15A6 JUMPI PUSH2 0x15A5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x166B JUMPI PUSH2 0x166A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0x1708 PUSH2 0x15CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1724 SWAP2 SWAP1 PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x173C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1750 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1774 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0x17BA PUSH2 0x15CE JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D8 SWAP3 SWAP2 SWAP1 PUSH2 0x2AB3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1804 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1828 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH2 0x243A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1889 JUMPI PUSH2 0x1888 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x189B JUMPI PUSH2 0x189A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18E2 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x18F5 JUMPI PUSH2 0x18F4 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x191A DUP3 PUSH1 0x0 ADD MLOAD DUP4 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1EB7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1931 PUSH2 0x16D DUP3 PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x1987 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x197E SWAP1 PUSH2 0x2B72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A38 SWAP2 SWAP1 PUSH2 0x2896 JUMP JUMPDEST PUSH2 0x1A77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6E SWAP1 PUSH2 0x2BB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACC PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADE PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1B00 CALLER PUSH2 0x2065 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B23 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B81 JUMPI PUSH2 0x1B80 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B93 JUMPI PUSH2 0x1B92 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BD6 JUMPI PUSH2 0x1BD5 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1BFD DUP3 PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C5E JUMPI PUSH2 0x1C5D PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C70 JUMPI PUSH2 0x1C6F PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CB8 JUMPI PUSH2 0x1CB7 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CC9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1CF1 DUP4 DUP3 PUSH1 0x0 ADD MLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1D6B JUMPI PUSH2 0x1D6A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1DAD PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1DD5 DUP4 PUSH1 0x1 SLOAD PUSH2 0x20E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1E27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1E3B PUSH2 0x1FE7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1EAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA2 SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x2228 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x1F3D JUMPI PUSH2 0x1F36 PUSH1 0x64 PUSH2 0x1F28 PUSH1 0x64 PUSH2 0x1F1A PUSH1 0x8 PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1EFC JUMPI PUSH2 0x1EFB PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB4 JUMP JUMPDEST PUSH2 0x1FB1 PUSH1 0x64 PUSH2 0x1FA3 PUSH1 0x64 PUSH2 0x1F95 PUSH1 0x7 PUSH1 0x0 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP10 PUSH2 0x1FD1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1FBB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FC9 SWAP2 SWAP1 PUSH2 0x2D94 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1FDF SWAP2 SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEF PUSH2 0x2453 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x200D PUSH2 0x15CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2063 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205A SWAP1 PUSH2 0x2BF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2070 DUP3 PUSH2 0x245B JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x20DC JUMPI PUSH1 0x4 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x20EE SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x210B JUMPI PUSH2 0x210A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2122 JUMPI PUSH2 0x2121 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2216 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2152 JUMPI PUSH2 0x2151 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x220C JUMPI PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x216B JUMPI PUSH2 0x216A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2182 JUMPI PUSH2 0x2181 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2202 JUMPI PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x219B JUMPI PUSH2 0x219A PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21B2 JUMPI PUSH2 0x21B1 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21F8 JUMPI PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x21CA JUMPI PUSH2 0x21C9 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x21E1 JUMPI PUSH2 0x21E0 PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x21ED JUMPI PUSH1 0x0 PUSH2 0x21F3 JUMP JUMPDEST PUSH4 0x1E13380 JUMPDEST PUSH2 0x21FD JUMP JUMPDEST PUSH3 0x9E3400 JUMPDEST PUSH2 0x2207 JUMP JUMPDEST PUSH3 0x76A700 JUMPDEST PUSH2 0x2211 JUMP JUMPDEST PUSH3 0x278D00 JUMPDEST PUSH2 0x221B JUMP JUMPDEST PUSH3 0x13C680 JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x22F8 DUP4 PUSH2 0x20F6 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x2307 SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2323 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2337 DUP4 PUSH2 0x245B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x2435 JUMPI PUSH1 0x4 PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x2355 SWAP2 SWAP1 PUSH2 0x2E1F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23A5 JUMPI PUSH2 0x23A4 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x4 DUP1 SLOAD DUP1 PUSH2 0x23FF JUMPI PUSH2 0x23FE PUSH2 0x2FFD JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x2449 JUMPI DUP2 PUSH2 0x244B JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x2501 JUMPI PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2482 JUMPI PUSH2 0x2481 PUSH2 0x302C JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24ED JUMPI PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x250A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x24FA SWAP2 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST SWAP1 POP PUSH2 0x2461 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2522 PUSH2 0x251D DUP5 PUSH2 0x2CA9 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2575 JUMPI DUP2 PUSH2 0x255B DUP9 DUP3 PUSH2 0x265F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2548 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2592 PUSH2 0x258D DUP5 PUSH2 0x2CD5 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x25E5 JUMPI DUP2 PUSH2 0x25CB DUP9 DUP3 PUSH2 0x2713 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x25B8 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2602 PUSH2 0x25FD DUP5 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x2C84 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x20 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x2625 JUMPI PUSH2 0x2624 PUSH2 0x308F JUMP JUMPDEST JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2655 JUMPI DUP2 PUSH2 0x263B DUP9 DUP3 PUSH2 0x2728 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2628 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x266E DUP2 PUSH2 0x31DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2689 JUMPI PUSH2 0x2688 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2699 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x250F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26B7 JUMPI PUSH2 0x26B6 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26C7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x257F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x308A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26F5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x25EF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x270D DUP2 PUSH2 0x31F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2722 DUP2 PUSH2 0x320D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2737 DUP2 PUSH2 0x321D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x274C DUP2 PUSH2 0x321D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2768 JUMPI PUSH2 0x2767 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP5 DUP3 DUP6 ADD PUSH2 0x265F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2796 JUMPI PUSH2 0x2795 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27A4 DUP6 DUP3 DUP7 ADD PUSH2 0x265F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x27B5 DUP6 DUP3 DUP7 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x27D9 JUMPI PUSH2 0x27D8 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F6 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x2803 DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2824 JUMPI PUSH2 0x2823 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x2830 DUP8 DUP3 DUP9 ADD PUSH2 0x26D0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2851 JUMPI PUSH2 0x2850 PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x285D DUP8 DUP3 DUP9 ADD PUSH2 0x26A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x287E JUMPI PUSH2 0x287D PUSH2 0x3094 JUMP JUMPDEST JUMPDEST PUSH2 0x288A DUP8 DUP3 DUP9 ADD PUSH2 0x26D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28AC JUMPI PUSH2 0x28AB PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28BA DUP5 DUP3 DUP6 ADD PUSH2 0x26FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28D9 JUMPI PUSH2 0x28D8 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28E7 DUP5 DUP3 DUP6 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2906 JUMPI PUSH2 0x2905 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP5 DUP3 DUP6 ADD PUSH2 0x2728 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2933 JUMPI PUSH2 0x2932 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP5 DUP3 DUP6 ADD PUSH2 0x273D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x3099 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x296F DUP6 DUP3 DUP7 ADD PUSH2 0x2728 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2980 DUP6 DUP3 DUP7 ADD PUSH2 0x2713 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2993 DUP2 PUSH2 0x2E53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29A2 DUP2 PUSH2 0x2EAE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x29B1 DUP2 PUSH2 0x2EC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C4 PUSH1 0x1E DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29CF DUP3 PUSH2 0x30AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E7 PUSH1 0x1D DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29F2 DUP3 PUSH2 0x30D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A0A PUSH1 0x15 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A15 DUP3 PUSH2 0x3101 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A2D PUSH1 0x26 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A38 DUP3 PUSH2 0x312A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A50 PUSH1 0x20 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A5B DUP3 PUSH2 0x3179 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A73 PUSH1 0x14 DUP4 PUSH2 0x2D2D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7E DUP3 PUSH2 0x31A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A92 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AAD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x298A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2AC8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2AD5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x298A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2AF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2AFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2B0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B28 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x298A JUMP JUMPDEST PUSH2 0x2B35 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B51 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B8B DUP2 PUSH2 0x29B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BAB DUP2 PUSH2 0x29DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BCB DUP2 PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BEB DUP2 PUSH2 0x2A20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C0B DUP2 PUSH2 0x2A43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C2B DUP2 PUSH2 0x2A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C47 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C62 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2A89 JUMP JUMPDEST PUSH2 0x2C6F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x29A8 JUMP JUMPDEST PUSH2 0x2C7C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2A89 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8E PUSH2 0x2C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9A DUP3 DUP3 PUSH2 0x2EF6 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CC4 JUMPI PUSH2 0x2CC3 PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CF0 JUMPI PUSH2 0x2CEF PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2D1C JUMPI PUSH2 0x2D1B PUSH2 0x305B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D49 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D54 DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2D89 JUMPI PUSH2 0x2D88 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D9F DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAA DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2DBA JUMPI PUSH2 0x2DB9 PUSH2 0x2F9F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DD0 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DDB DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2E14 JUMPI PUSH2 0x2E13 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2A DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E35 DUP4 PUSH2 0x2EA4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2E48 JUMPI PUSH2 0x2E47 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5E DUP3 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2E7F DUP3 PUSH2 0x31CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EB9 DUP3 PUSH2 0x2ED2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ECB DUP3 PUSH2 0x2E71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD DUP3 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EEF DUP3 PUSH2 0x2E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EFF DUP3 PUSH2 0x309E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2F1E JUMPI PUSH2 0x2F1D PUSH2 0x305B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F32 DUP3 PUSH2 0x2EA4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2F65 JUMPI PUSH2 0x2F64 PUSH2 0x2F70 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F742065787069726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E76616C6964205374616B6520416D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x31DC JUMPI PUSH2 0x31DB PUSH2 0x2FCE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x31E8 DUP2 PUSH2 0x2E53 JUMP JUMPDEST DUP2 EQ PUSH2 0x31F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x31FF DUP2 PUSH2 0x2E65 JUMP JUMPDEST DUP2 EQ PUSH2 0x320A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x321A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3226 DUP2 PUSH2 0x2EA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0xEB2D2CF91F38ABA214B6C0 KECCAK256 0xDF 0x4F PUSH25 0xA31488094E13EFD8043C16F1FB1E01AE64736F6C6343000807 STOP CALLER ",
							"sourceMap": "25704:8972:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31946:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26265:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32134:454;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25801:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26096:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30399:176;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29319:1075;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34217:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30963:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26147:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;32901:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2486:101;;;:::i;:::-;;28234:1079;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25770:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34361:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1856:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25834:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26218:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31750:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26318:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34512:160;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32595:299;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34049:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27351:876;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2736:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;31946:181;32042:13;32074:6;:20;32081:12;32074:20;;;;;;;;;;;;;;;:34;32095:12;32074:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:46;;;;;;;;;;;;32067:53;;31946:181;;;;:::o;26265:45::-;;;;;;;;;;;;;;;;;:::o;32134:454::-;32208:7;32227:22;32252:6;:18;32259:10;32252:18;;;;;;;;;;;;;;;:32;32271:12;32252:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;32227:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;32294:21;32318:68;32337:9;:16;;;32355:9;32366;:19;;;32318:18;:68::i;:::-;32294:92;;32396:16;32415:63;32475:2;32415:55;32467:2;32415:47;32459:2;32434:9;:19;;;32416:15;:37;;;;:::i;:::-;32415:43;;:47;;;;:::i;:::-;:51;;:55;;;;:::i;:::-;:59;;:63;;;;:::i;:::-;32396:82;;32511:1;32500:8;:12;32499:29;;32520:8;32499:29;;;32516:1;32499:29;32488:40;;32545:36;32572:8;32545:22;32563:3;32545:13;:17;;:22;;;;:::i;:::-;:26;;:36;;;;:::i;:::-;32538:43;;;;;32134:454;;;:::o;25801:27::-;;;;:::o;26096:43::-;;;;:::o;30399:176::-;30469:7;;;;;;;;;;;:20;;;30490:6;30506:4;30513:28;;30469:73;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30461:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;30399:176;:::o;29319:1075::-;1749:13;:11;:13::i;:::-;29496:6:::1;29492:896;29513:8;:15;29509:1;:19;29492:896;;;29570:1;29558:6;29565:1;29558:9;;;;;;;;:::i;:::-;;;;;;;;:13;29550:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;29652:6;29659:1;29652:9;;;;;;;;:::i;:::-;;;;;;;;29620:28;;:41;;;;;;;:::i;:::-;;;;;;;;29725:1;29678:6;:19;29685:8;29694:1;29685:11;;;;;;;;:::i;:::-;;;;;;;;29678:19;;;;;;;;;;;;;;;:36;29698:12;29711:1;29698:15;;;;;;;;:::i;:::-;;;;;;;;29678:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:43;;;:48;29675:617;;;29746:27;29761:8;29770:1;29761:11;;;;;;;;:::i;:::-;;;;;;;;29746:14;:27::i;:::-;29830:48;;;;;;;;29836:6;29843:1;29836:9;;;;;;;;:::i;:::-;;;;;;;;29830:48;;;;29847:12;29860:1;29847:15;;;;;;;;:::i;:::-;;;;;;;;29830:48;;;;;;;;:::i;:::-;;;;;;29864:10;29875:1;29864:13;;;;;;;;:::i;:::-;;;;;;;;29830:48;;::::0;29791:6:::1;:19;29798:8;29807:1;29798:11;;;;;;;;:::i;:::-;;;;;;;;29791:19;;;;;;;;;;;;;;;:36;29811:12;29824:1;29811:15;;;;;;;;:::i;:::-;;;;;;;;29791:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;29909:25;29924:6;29931:1;29924:9;;;;;;;;:::i;:::-;;;;;;;;29909:10;;:14;;:25;;;;:::i;:::-;29896:10;:38;;;;29675:617;;;29973:22;29998:6;:19;30005:8;30014:1;30005:11;;;;;;;;:::i;:::-;;;;;;;;29998:19;;;;;;;;;;;;;;;:36;30018:12;30031:1;30018:15;;;;;;;;:::i;:::-;;;;;;;;29998:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;29973:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;::::0;::::1;;;30071:31;30092:6;30099:1;30092:9;;;;;;;;:::i;:::-;;;;;;;;30071;:16;;;:20;;:31;;;;:::i;:::-;30052:9;:16;;:50;;;::::0;::::1;30142:10;30153:1;30142:13;;;;;;;;:::i;:::-;;;;;;;;30120:9;:19;;:35;;;::::0;::::1;30212:9;30173:6;:19;30180:8;30189:1;30180:11;;;;;;;;:::i;:::-;;;;;;;;30173:19;;;;;;;;;;;;;;;:36;30193:12;30206:1;30193:15;;;;;;;;:::i;:::-;;;;;;;;30173:36;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;30252:25;30267:6;30274:1;30267:9;;;;;;;;:::i;:::-;;;;;;;;30252:10;;:14;;:25;;;;:::i;:::-;30239:10;:38;;;;29955:337;29675:617;30322:8;30331:1;30322:11;;;;;;;;:::i;:::-;;;;;;;;30310:67;;;30335:6;30342:1;30335:9;;;;;;;;:::i;:::-;;;;;;;;30346:12;30359:1;30346:15;;;;;;;;:::i;:::-;;;;;;;;30363:10;30374:1;30363:13;;;;;;;;:::i;:::-;;;;;;;;30310:67;;;;;;;;:::i;:::-;;;;;;;;29531:3;;;;;:::i;:::-;;;;29492:896;;;;29319:1075:::0;;;;:::o;34217:137::-;1749:13;:11;:13::i;:::-;34336:11:::1;34316:3;:17;34320:12;34316:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;34217:137:::0;;:::o;30963:103::-;1749:13;:11;:13::i;:::-;31049:10:::1;31034:12;:25;;;;30963:103:::0;:::o;26147:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;32901:271::-;32973:7;32992:22;33017:6;:18;33024:10;33017:18;;;;;;;;;;;;;;;:32;33036:12;33017:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;32992:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;33059:18;33102:36;33128:9;33102:25;:36::i;:::-;33080:9;:19;;;:58;;;;:::i;:::-;33059:79;;33155:10;33148:17;;;;32901:271;;;:::o;2486:101::-;1749:13;:11;:13::i;:::-;2550:30:::1;2577:1;2550:18;:30::i;:::-;2486:101::o:0;28234:1079::-;28329:1;28320:6;:10;28312:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;28375:22;28400:6;:18;28407:10;28400:18;;;;;;;;;;;;;;;:32;28419:12;28400:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;28375:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;28450:32;28472:9;28450:21;:32::i;:::-;28442:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;28544:9;:16;;;28534:6;:26;;28526:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;28595:23;28621:29;28637:12;28621:15;:29::i;:::-;28595:55;;28679:28;28700:6;28679:9;:16;;;:20;;:28;;;;:::i;:::-;28660:9;:16;;:47;;;;;28752:9;28717:6;:18;28724:10;28717:18;;;;;;;;;;;;;;;:32;28736:12;28717:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;28784:22;28799:6;28784:10;;:14;;:22;;;;:::i;:::-;28771:10;:35;;;;28831:33;28848:15;28831:12;;:16;;:33;;;;:::i;:::-;28816:12;:48;;;;28988:1;28945:6;:18;28952:10;28945:18;;;;;;;;;;;;;;;:32;28964:12;28945:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:44;28942:78;;;28991:29;29009:10;28991:17;:29::i;:::-;28942:78;29030:7;;;;;;;;;;;:16;;;29047:10;29059:6;29030:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29076:7;;;;;;;;;;;:20;;;29097:7;:5;:7::i;:::-;29106:10;29118:15;29076:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;29163:10;29149:64;;;29175:6;29183:12;29197:15;29149:64;;;;;;;;:::i;:::-;;;;;;;;29247:10;29228:78;;;29259:15;29276:12;29290:15;29228:78;;;;;;;;:::i;:::-;;;;;;;;28302:1011;;28234:1079;;:::o;25770:25::-;;;;:::o;34361:144::-;1749:13;:11;:13::i;:::-;34487:11:::1;34463:7;:21;34471:12;34463:21;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;34361:144:::0;;:::o;1856:85::-;1902:7;1928:6;;;;;;;;;;;1921:13;;1856:85;:::o;25834:24::-;;;;:::o;26218:41::-;;;;;;;;;;;;;;;;;:::o;31750:189::-;31861:7;31891:6;:20;31898:12;31891:20;;;;;;;;;;;;;;;:34;31912:12;31891:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;31884:48;;31750:189;;;;:::o;26318:21::-;;;;;;;;;;;;;:::o;34512:160::-;34560:7;34586:79;34595:7;;;;;;;;;;;:17;;;34613:7;:5;:7::i;:::-;34595:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34623:7;;;;;;;;;;;:17;;;34641:7;:5;:7::i;:::-;34658:4;34623:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34586:8;:79::i;:::-;34579:86;;34512:160;:::o;32595:299::-;32670:7;32689:22;32714:6;:18;32721:10;32714:18;;;;;;;;;;;;;;;:32;32733:12;32714:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;32689:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;32756:21;32780:68;32799:9;:16;;;32817:9;32828;:19;;;32780:18;:68::i;:::-;32756:92;;32865:22;32883:3;32865:13;:17;;:22;;;;:::i;:::-;32858:29;;;;32595:299;;;:::o;34049:120::-;34120:7;34150:12;;34143:19;;34049:120;:::o;27351:876::-;27450:1;27441:6;:10;27433:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;27504:7;;;;;;;;;;;:20;;;27525:10;27545:4;27552:6;27504:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27496:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;27641:1;27598:6;:18;27605:10;27598:18;;;;;;;;;;;;;;;:32;27617:12;27598:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:44;27595:549;;;27658:26;27673:10;27658:14;:26::i;:::-;27733:44;;;;;;;;27739:6;27733:44;;;;27747:12;27733:44;;;;;;;;:::i;:::-;;;;;;27761:15;27733:44;;;27698:6;:18;27705:10;27698:18;;;;;;;;;;;;;;;:32;27717:12;27698:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;27804:22;27819:6;27804:10;;:14;;:22;;;;:::i;:::-;27791:10;:35;;;;27595:549;;;27857:22;27882:6;:18;27889:10;27882:18;;;;;;;;;;;;;;;:32;27901:12;27882:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;27857:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;27947:28;27968:6;27947:9;:16;;;:20;;:28;;;;:::i;:::-;27928:9;:16;;:47;;;;;28011:15;27989:9;:19;;:37;;;;;28075:9;28040:6;:18;28047:10;28040:18;;;;;;;;;;;;;;;:32;28059:12;28040:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;28111:22;28126:6;28111:10;;:14;;:22;;;;:::i;:::-;28098:10;:35;;;;27843:301;27595:549;28170:10;28158:62;;;28182:6;28190:12;28204:15;28158:62;;;;;;;;:::i;:::-;;;;;;;;27351:876;;:::o;2736:198::-;1749:13;:11;:13::i;:::-;2844:1:::1;2824:22;;:8;:22;;;;2816:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2899:28;2918:8;2899:18;:28::i;:::-;2736:198:::0;:::o;30582:373::-;30698:7;30734:12;;30720:10;:26;30717:232;;30768:68;30832:3;30768:59;30823:3;30768:50;30787:7;:30;30795:9;:21;;;30787:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;30768:14;:18;;:50;;;;:::i;:::-;:54;;:59;;;;:::i;:::-;:63;;:68;;;;:::i;:::-;30761:75;;;;30717:232;30874:64;30934:3;30874:55;30925:3;30874:46;30893:3;:26;30897:9;:21;;;30893:26;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;30874:14;:18;;:46;;;;:::i;:::-;:50;;:55;;;;:::i;:::-;:59;;:64;;;;:::i;:::-;30867:71;;30582:373;;;;;;:::o;10140:96::-;10198:7;10228:1;10224;:5;;;;:::i;:::-;10217:12;;10140:96;;;;:::o;9755:::-;9813:7;9843:1;9839;:5;;;;:::i;:::-;9832:12;;9755:96;;;;:::o;2014:130::-;2088:12;:10;:12::i;:::-;2077:23;;:7;:5;:7::i;:::-;:23;;;2069:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2014:130::o;33507:198::-;33585:19;33610:27;33624:12;33610:13;:27::i;:::-;33584:53;;;33651:14;33647:51;;33667:12;33685;33667:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33647:51;33574:131;33507:198;:::o;9045:96::-;9103:7;9133:1;9129;:5;;;;:::i;:::-;9122:12;;9045:96;;;;:::o;31319:424::-;31401:7;31451:23;31426:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:309;;31512:23;31487:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:248;;31573:25;31548:50;;;;;;;;:::i;:::-;;:9;:21;;;:50;;;;;;;;:::i;:::-;;;:187;;31636:23;31611:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:124;;31698:22;31673:47;;;;;;;;:::i;:::-;;:9;:21;;;:47;;;;;;;;:::i;:::-;;;:62;;31734:1;31673:62;;;31723:8;31673:62;31611:124;;;31662:8;31611:124;31548:187;;;31601:7;31548:187;31487:248;;;31538:7;31487:248;31426:309;;;31477:7;31426:309;31419:316;;;;31319:424;;;:::o;3088:187::-;3161:16;3180:6;;;;;;;;;;;3161:25;;3205:8;3196:6;;:17;;;;;;;;;;;;;;;;;;3259:8;3228:40;;3249:8;3228:40;;;;;;;;;;;;3151:124;3088:187;:::o;31073:238::-;31150:4;31166:24;31215:36;31241:9;31215:25;:36::i;:::-;31193:9;:19;;;:58;;;;:::i;:::-;31166:85;;31287:16;31268:15;:35;;31261:42;;;31073:238;;;:::o;9412:96::-;9470:7;9500:1;9496;:5;;;;:::i;:::-;9489:12;;9412:96;;;;:::o;33714:289::-;33795:19;33816:9;33829:27;33843:12;33829:13;:27::i;:::-;33794:62;;;;33869:14;33866:130;;;33916:12;33951:1;33929:12;:19;;;;:23;;;;:::i;:::-;33916:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33898:12;33911:1;33898:15;;;;;;;;:::i;:::-;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;33967:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;33866:130;33784:219;;33714:289;:::o;13738:104::-;13796:7;13826:1;13822;:5;:13;;13834:1;13822:13;;;13830:1;13822:13;13815:20;;13738:104;;;;:::o;406:96::-;459:7;485:10;478:17;;406:96;:::o;33223:275::-;33310:4;33316:7;33344:9;33339:126;33363:12;:19;;;;33359:1;:23;33339:126;;;33421:12;33434:1;33421:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;33409:27;;:8;:27;;;33405:49;;;33446:4;33452:1;33438:16;;;;;;;33405:49;33389:1;33384:6;;;;;:::i;:::-;;;33339:126;;;;33482:5;33489:1;33474:17;;;;33223:275;;;;:::o;24:722:1:-;120:5;145:81;161:64;218:6;161:64;:::i;:::-;145:81;:::i;:::-;136:90;;246:5;275:6;268:5;261:21;309:4;302:5;298:16;291:23;;335:6;385:3;377:4;369:6;365:17;360:3;356:27;353:36;350:143;;;404:79;;:::i;:::-;350:143;517:1;502:238;527:6;524:1;521:13;502:238;;;595:3;624:37;657:3;645:10;624:37;:::i;:::-;619:3;612:50;691:4;686:3;682:14;675:21;;725:4;720:3;716:14;709:21;;562:178;549:1;546;542:9;537:14;;502:238;;;506:14;126:620;;24:722;;;;;:::o;788:776::-;902:5;927:99;943:82;1018:6;943:82;:::i;:::-;927:99;:::i;:::-;918:108;;1046:5;1075:6;1068:5;1061:21;1109:4;1102:5;1098:16;1091:23;;1135:6;1185:3;1177:4;1169:6;1165:17;1160:3;1156:27;1153:36;1150:143;;;1204:79;;:::i;:::-;1150:143;1317:1;1302:256;1327:6;1324:1;1321:13;1302:256;;;1395:3;1424:55;1475:3;1463:10;1424:55;:::i;:::-;1419:3;1412:68;1509:4;1504:3;1500:14;1493:21;;1543:4;1538:3;1534:14;1527:21;;1362:196;1349:1;1346;1342:9;1337:14;;1302:256;;;1306:14;908:656;;788:776;;;;;:::o;1587:722::-;1683:5;1708:81;1724:64;1781:6;1724:64;:::i;:::-;1708:81;:::i;:::-;1699:90;;1809:5;1838:6;1831:5;1824:21;1872:4;1865:5;1861:16;1854:23;;1898:6;1948:3;1940:4;1932:6;1928:17;1923:3;1919:27;1916:36;1913:143;;;1967:79;;:::i;:::-;1913:143;2080:1;2065:238;2090:6;2087:1;2084:13;2065:238;;;2158:3;2187:37;2220:3;2208:10;2187:37;:::i;:::-;2182:3;2175:50;2254:4;2249:3;2245:14;2238:21;;2288:4;2283:3;2279:14;2272:21;;2125:178;2112:1;2109;2105:9;2100:14;;2065:238;;;2069:14;1689:620;;1587:722;;;;;:::o;2315:139::-;2361:5;2399:6;2386:20;2377:29;;2415:33;2442:5;2415:33;:::i;:::-;2315:139;;;;:::o;2477:370::-;2548:5;2597:3;2590:4;2582:6;2578:17;2574:27;2564:122;;2605:79;;:::i;:::-;2564:122;2722:6;2709:20;2747:94;2837:3;2829:6;2822:4;2814:6;2810:17;2747:94;:::i;:::-;2738:103;;2554:293;2477:370;;;;:::o;2889:406::-;2978:5;3027:3;3020:4;3012:6;3008:17;3004:27;2994:122;;3035:79;;:::i;:::-;2994:122;3152:6;3139:20;3177:112;3285:3;3277:6;3270:4;3262:6;3258:17;3177:112;:::i;:::-;3168:121;;2984:311;2889:406;;;;:::o;3318:370::-;3389:5;3438:3;3431:4;3423:6;3419:17;3415:27;3405:122;;3446:79;;:::i;:::-;3405:122;3563:6;3550:20;3588:94;3678:3;3670:6;3663:4;3655:6;3651:17;3588:94;:::i;:::-;3579:103;;3395:293;3318:370;;;;:::o;3694:137::-;3748:5;3779:6;3773:13;3764:22;;3795:30;3819:5;3795:30;:::i;:::-;3694:137;;;;:::o;3837:175::-;3901:5;3939:6;3926:20;3917:29;;3955:51;4000:5;3955:51;:::i;:::-;3837:175;;;;:::o;4018:139::-;4064:5;4102:6;4089:20;4080:29;;4118:33;4145:5;4118:33;:::i;:::-;4018:139;;;;:::o;4163:143::-;4220:5;4251:6;4245:13;4236:22;;4267:33;4294:5;4267:33;:::i;:::-;4163:143;;;;:::o;4312:329::-;4371:6;4420:2;4408:9;4399:7;4395:23;4391:32;4388:119;;;4426:79;;:::i;:::-;4388:119;4546:1;4571:53;4616:7;4607:6;4596:9;4592:22;4571:53;:::i;:::-;4561:63;;4517:117;4312:329;;;;:::o;4647:510::-;4733:6;4741;4790:2;4778:9;4769:7;4765:23;4761:32;4758:119;;;4796:79;;:::i;:::-;4758:119;4916:1;4941:53;4986:7;4977:6;4966:9;4962:22;4941:53;:::i;:::-;4931:63;;4887:117;5043:2;5069:71;5132:7;5123:6;5112:9;5108:22;5069:71;:::i;:::-;5059:81;;5014:136;4647:510;;;;;:::o;5163:1641::-;5367:6;5375;5383;5391;5440:3;5428:9;5419:7;5415:23;5411:33;5408:120;;;5447:79;;:::i;:::-;5408:120;5595:1;5584:9;5580:17;5567:31;5625:18;5617:6;5614:30;5611:117;;;5647:79;;:::i;:::-;5611:117;5752:78;5822:7;5813:6;5802:9;5798:22;5752:78;:::i;:::-;5742:88;;5538:302;5907:2;5896:9;5892:18;5879:32;5938:18;5930:6;5927:30;5924:117;;;5960:79;;:::i;:::-;5924:117;6065:78;6135:7;6126:6;6115:9;6111:22;6065:78;:::i;:::-;6055:88;;5850:303;6220:2;6209:9;6205:18;6192:32;6251:18;6243:6;6240:30;6237:117;;;6273:79;;:::i;:::-;6237:117;6378:96;6466:7;6457:6;6446:9;6442:22;6378:96;:::i;:::-;6368:106;;6163:321;6551:2;6540:9;6536:18;6523:32;6582:18;6574:6;6571:30;6568:117;;;6604:79;;:::i;:::-;6568:117;6709:78;6779:7;6770:6;6759:9;6755:22;6709:78;:::i;:::-;6699:88;;6494:303;5163:1641;;;;;;;:::o;6810:345::-;6877:6;6926:2;6914:9;6905:7;6901:23;6897:32;6894:119;;;6932:79;;:::i;:::-;6894:119;7052:1;7077:61;7130:7;7121:6;7110:9;7106:22;7077:61;:::i;:::-;7067:71;;7023:125;6810:345;;;;:::o;7161:365::-;7238:6;7287:2;7275:9;7266:7;7262:23;7258:32;7255:119;;;7293:79;;:::i;:::-;7255:119;7413:1;7438:71;7501:7;7492:6;7481:9;7477:22;7438:71;:::i;:::-;7428:81;;7384:135;7161:365;;;;:::o;7532:329::-;7591:6;7640:2;7628:9;7619:7;7615:23;7611:32;7608:119;;;7646:79;;:::i;:::-;7608:119;7766:1;7791:53;7836:7;7827:6;7816:9;7812:22;7791:53;:::i;:::-;7781:63;;7737:117;7532:329;;;;:::o;7867:351::-;7937:6;7986:2;7974:9;7965:7;7961:23;7957:32;7954:119;;;7992:79;;:::i;:::-;7954:119;8112:1;8137:64;8193:7;8184:6;8173:9;8169:22;8137:64;:::i;:::-;8127:74;;8083:128;7867:351;;;;:::o;8224:510::-;8310:6;8318;8367:2;8355:9;8346:7;8342:23;8338:32;8335:119;;;8373:79;;:::i;:::-;8335:119;8493:1;8518:53;8563:7;8554:6;8543:9;8539:22;8518:53;:::i;:::-;8508:63;;8464:117;8620:2;8646:71;8709:7;8700:6;8689:9;8685:22;8646:71;:::i;:::-;8636:81;;8591:136;8224:510;;;;;:::o;8740:118::-;8827:24;8845:5;8827:24;:::i;:::-;8822:3;8815:37;8740:118;;:::o;8864:159::-;8965:51;9010:5;8965:51;:::i;:::-;8960:3;8953:64;8864:159;;:::o;9029:163::-;9132:53;9179:5;9132:53;:::i;:::-;9127:3;9120:66;9029:163;;:::o;9198:366::-;9340:3;9361:67;9425:2;9420:3;9361:67;:::i;:::-;9354:74;;9437:93;9526:3;9437:93;:::i;:::-;9555:2;9550:3;9546:12;9539:19;;9198:366;;;:::o;9570:::-;9712:3;9733:67;9797:2;9792:3;9733:67;:::i;:::-;9726:74;;9809:93;9898:3;9809:93;:::i;:::-;9927:2;9922:3;9918:12;9911:19;;9570:366;;;:::o;9942:::-;10084:3;10105:67;10169:2;10164:3;10105:67;:::i;:::-;10098:74;;10181:93;10270:3;10181:93;:::i;:::-;10299:2;10294:3;10290:12;10283:19;;9942:366;;;:::o;10314:::-;10456:3;10477:67;10541:2;10536:3;10477:67;:::i;:::-;10470:74;;10553:93;10642:3;10553:93;:::i;:::-;10671:2;10666:3;10662:12;10655:19;;10314:366;;;:::o;10686:::-;10828:3;10849:67;10913:2;10908:3;10849:67;:::i;:::-;10842:74;;10925:93;11014:3;10925:93;:::i;:::-;11043:2;11038:3;11034:12;11027:19;;10686:366;;;:::o;11058:::-;11200:3;11221:67;11285:2;11280:3;11221:67;:::i;:::-;11214:74;;11297:93;11386:3;11297:93;:::i;:::-;11415:2;11410:3;11406:12;11399:19;;11058:366;;;:::o;11430:118::-;11517:24;11535:5;11517:24;:::i;:::-;11512:3;11505:37;11430:118;;:::o;11554:222::-;11647:4;11685:2;11674:9;11670:18;11662:26;;11698:71;11766:1;11755:9;11751:17;11742:6;11698:71;:::i;:::-;11554:222;;;;:::o;11782:332::-;11903:4;11941:2;11930:9;11926:18;11918:26;;11954:71;12022:1;12011:9;12007:17;11998:6;11954:71;:::i;:::-;12035:72;12103:2;12092:9;12088:18;12079:6;12035:72;:::i;:::-;11782:332;;;;;:::o;12120:442::-;12269:4;12307:2;12296:9;12292:18;12284:26;;12320:71;12388:1;12377:9;12373:17;12364:6;12320:71;:::i;:::-;12401:72;12469:2;12458:9;12454:18;12445:6;12401:72;:::i;:::-;12483;12551:2;12540:9;12536:18;12527:6;12483:72;:::i;:::-;12120:442;;;;;;:::o;12568:332::-;12689:4;12727:2;12716:9;12712:18;12704:26;;12740:71;12808:1;12797:9;12793:17;12784:6;12740:71;:::i;:::-;12821:72;12889:2;12878:9;12874:18;12865:6;12821:72;:::i;:::-;12568:332;;;;;:::o;12906:250::-;13013:4;13051:2;13040:9;13036:18;13028:26;;13064:85;13146:1;13135:9;13131:17;13122:6;13064:85;:::i;:::-;12906:250;;;;:::o;13162:254::-;13271:4;13309:2;13298:9;13294:18;13286:26;;13322:87;13406:1;13395:9;13391:17;13382:6;13322:87;:::i;:::-;13162:254;;;;:::o;13422:419::-;13588:4;13626:2;13615:9;13611:18;13603:26;;13675:9;13669:4;13665:20;13661:1;13650:9;13646:17;13639:47;13703:131;13829:4;13703:131;:::i;:::-;13695:139;;13422:419;;;:::o;13847:::-;14013:4;14051:2;14040:9;14036:18;14028:26;;14100:9;14094:4;14090:20;14086:1;14075:9;14071:17;14064:47;14128:131;14254:4;14128:131;:::i;:::-;14120:139;;13847:419;;;:::o;14272:::-;14438:4;14476:2;14465:9;14461:18;14453:26;;14525:9;14519:4;14515:20;14511:1;14500:9;14496:17;14489:47;14553:131;14679:4;14553:131;:::i;:::-;14545:139;;14272:419;;;:::o;14697:::-;14863:4;14901:2;14890:9;14886:18;14878:26;;14950:9;14944:4;14940:20;14936:1;14925:9;14921:17;14914:47;14978:131;15104:4;14978:131;:::i;:::-;14970:139;;14697:419;;;:::o;15122:::-;15288:4;15326:2;15315:9;15311:18;15303:26;;15375:9;15369:4;15365:20;15361:1;15350:9;15346:17;15339:47;15403:131;15529:4;15403:131;:::i;:::-;15395:139;;15122:419;;;:::o;15547:::-;15713:4;15751:2;15740:9;15736:18;15728:26;;15800:9;15794:4;15790:20;15786:1;15775:9;15771:17;15764:47;15828:131;15954:4;15828:131;:::i;:::-;15820:139;;15547:419;;;:::o;15972:222::-;16065:4;16103:2;16092:9;16088:18;16080:26;;16116:71;16184:1;16173:9;16169:17;16160:6;16116:71;:::i;:::-;15972:222;;;;:::o;16200:474::-;16365:4;16403:2;16392:9;16388:18;16380:26;;16416:71;16484:1;16473:9;16469:17;16460:6;16416:71;:::i;:::-;16497:88;16581:2;16570:9;16566:18;16557:6;16497:88;:::i;:::-;16595:72;16663:2;16652:9;16648:18;16639:6;16595:72;:::i;:::-;16200:474;;;;;;:::o;16680:129::-;16714:6;16741:20;;:::i;:::-;16731:30;;16770:33;16798:4;16790:6;16770:33;:::i;:::-;16680:129;;;:::o;16815:75::-;16848:6;16881:2;16875:9;16865:19;;16815:75;:::o;16896:311::-;16973:4;17063:18;17055:6;17052:30;17049:56;;;17085:18;;:::i;:::-;17049:56;17135:4;17127:6;17123:17;17115:25;;17195:4;17189;17185:15;17177:23;;16896:311;;;:::o;17213:329::-;17308:4;17398:18;17390:6;17387:30;17384:56;;;17420:18;;:::i;:::-;17384:56;17470:4;17462:6;17458:17;17450:25;;17530:4;17524;17520:15;17512:23;;17213:329;;;:::o;17548:311::-;17625:4;17715:18;17707:6;17704:30;17701:56;;;17737:18;;:::i;:::-;17701:56;17787:4;17779:6;17775:17;17767:25;;17847:4;17841;17837:15;17829:23;;17548:311;;;:::o;17865:169::-;17949:11;17983:6;17978:3;17971:19;18023:4;18018:3;18014:14;17999:29;;17865:169;;;;:::o;18040:305::-;18080:3;18099:20;18117:1;18099:20;:::i;:::-;18094:25;;18133:20;18151:1;18133:20;:::i;:::-;18128:25;;18287:1;18219:66;18215:74;18212:1;18209:81;18206:107;;;18293:18;;:::i;:::-;18206:107;18337:1;18334;18330:9;18323:16;;18040:305;;;;:::o;18351:185::-;18391:1;18408:20;18426:1;18408:20;:::i;:::-;18403:25;;18442:20;18460:1;18442:20;:::i;:::-;18437:25;;18481:1;18471:35;;18486:18;;:::i;:::-;18471:35;18528:1;18525;18521:9;18516:14;;18351:185;;;;:::o;18542:348::-;18582:7;18605:20;18623:1;18605:20;:::i;:::-;18600:25;;18639:20;18657:1;18639:20;:::i;:::-;18634:25;;18827:1;18759:66;18755:74;18752:1;18749:81;18744:1;18737:9;18730:17;18726:105;18723:131;;;18834:18;;:::i;:::-;18723:131;18882:1;18879;18875:9;18864:20;;18542:348;;;;:::o;18896:191::-;18936:4;18956:20;18974:1;18956:20;:::i;:::-;18951:25;;18990:20;19008:1;18990:20;:::i;:::-;18985:25;;19029:1;19026;19023:8;19020:34;;;19034:18;;:::i;:::-;19020:34;19079:1;19076;19072:9;19064:17;;18896:191;;;;:::o;19093:96::-;19130:7;19159:24;19177:5;19159:24;:::i;:::-;19148:35;;19093:96;;;:::o;19195:90::-;19229:7;19272:5;19265:13;19258:21;19247:32;;19195:90;;;:::o;19291:147::-;19346:7;19375:5;19364:16;;19381:51;19426:5;19381:51;:::i;:::-;19291:147;;;:::o;19444:126::-;19481:7;19521:42;19514:5;19510:54;19499:65;;19444:126;;;:::o;19576:77::-;19613:7;19642:5;19631:16;;19576:77;;;:::o;19659:140::-;19723:9;19756:37;19787:5;19756:37;:::i;:::-;19743:50;;19659:140;;;:::o;19805:147::-;19871:9;19904:42;19940:5;19904:42;:::i;:::-;19891:55;;19805:147;;;:::o;19958:126::-;20008:9;20041:37;20072:5;20041:37;:::i;:::-;20028:50;;19958:126;;;:::o;20090:113::-;20140:9;20173:24;20191:5;20173:24;:::i;:::-;20160:37;;20090:113;;;:::o;20209:281::-;20292:27;20314:4;20292:27;:::i;:::-;20284:6;20280:40;20422:6;20410:10;20407:22;20386:18;20374:10;20371:34;20368:62;20365:88;;;20433:18;;:::i;:::-;20365:88;20473:10;20469:2;20462:22;20252:238;20209:281;;:::o;20496:233::-;20535:3;20558:24;20576:5;20558:24;:::i;:::-;20549:33;;20604:66;20597:5;20594:77;20591:103;;;20674:18;;:::i;:::-;20591:103;20721:1;20714:5;20710:13;20703:20;;20496:233;;;:::o;20735:180::-;20783:77;20780:1;20773:88;20880:4;20877:1;20870:15;20904:4;20901:1;20894:15;20921:180;20969:77;20966:1;20959:88;21066:4;21063:1;21056:15;21090:4;21087:1;21080:15;21107:180;21155:77;21152:1;21145:88;21252:4;21249:1;21242:15;21276:4;21273:1;21266:15;21293:180;21341:77;21338:1;21331:88;21438:4;21435:1;21428:15;21462:4;21459:1;21452:15;21479:180;21527:77;21524:1;21517:88;21624:4;21621:1;21614:15;21648:4;21645:1;21638:15;21665:180;21713:77;21710:1;21703:88;21810:4;21807:1;21800:15;21834:4;21831:1;21824:15;21851:117;21960:1;21957;21950:12;21974:117;22083:1;22080;22073:12;22097:117;22206:1;22203;22196:12;22220:117;22329:1;22326;22319:12;22343:102;22384:6;22435:2;22431:7;22426:2;22419:5;22415:14;22411:28;22401:38;;22343:102;;;:::o;22451:180::-;22591:32;22587:1;22579:6;22575:14;22568:56;22451:180;:::o;22637:179::-;22777:31;22773:1;22765:6;22761:14;22754:55;22637:179;:::o;22822:171::-;22962:23;22958:1;22950:6;22946:14;22939:47;22822:171;:::o;22999:225::-;23139:34;23135:1;23127:6;23123:14;23116:58;23208:8;23203:2;23195:6;23191:15;23184:33;22999:225;:::o;23230:182::-;23370:34;23366:1;23358:6;23354:14;23347:58;23230:182;:::o;23418:170::-;23558:22;23554:1;23546:6;23542:14;23535:46;23418:170;:::o;23594:123::-;23685:1;23678:5;23675:12;23665:46;;23691:18;;:::i;:::-;23665:46;23594:123;:::o;23723:122::-;23796:24;23814:5;23796:24;:::i;:::-;23789:5;23786:35;23776:63;;23835:1;23832;23825:12;23776:63;23723:122;:::o;23851:116::-;23921:21;23936:5;23921:21;:::i;:::-;23914:5;23911:32;23901:60;;23957:1;23954;23947:12;23901:60;23851:116;:::o;23973:117::-;24064:1;24057:5;24054:12;24044:40;;24080:1;24077;24070:12;24044:40;23973:117;:::o;24096:122::-;24169:24;24187:5;24169:24;:::i;:::-;24162:5;24159:35;24149:63;;24208:1;24205;24198:12;24149:63;24096:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2581200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addTokenInContract(address)": "infinite",
								"apr(uint8)": "2855",
								"apr_old(uint8)": "2768",
								"createOldInvestorList(address[],uint256[],uint8[],uint256[])": "infinite",
								"createStake(uint256,uint8)": "infinite",
								"getDailyRewards(uint8)": "infinite",
								"getExpiredDay(uint8)": "infinite",
								"getRewardsPerDay(uint8)": "infinite",
								"getTotalRewards()": "2503",
								"myToken()": "2667",
								"oldTimeStamp()": "2540",
								"owner()": "2611",
								"remainingTokens()": "infinite",
								"renounceOwnership()": "30531",
								"setApyPercentage(uint256,uint8)": "25089",
								"setOldApyPercentage(uint256,uint8)": "25111",
								"setOldTimeStamp(uint256)": "24851",
								"stakeOf(address,uint8)": "3152",
								"stakes(address,uint8)": "infinite",
								"stakingPeriodOf(address,uint8)": "3262",
								"tokenAmountInOldInvestorList()": "2541",
								"totalRewards()": "2519",
								"totalStake()": "2474",
								"transferOwnership(address)": "30857",
								"unStake(uint256,uint8)": "infinite"
							},
							"internal": {
								"addStakeholder(address)": "infinite",
								"getInvestorRewards(uint256,struct Staking.stake memory,uint256)": "infinite",
								"getStakingPeriodInNumbers(struct Staking.stake memory)": "infinite",
								"isStakeholder(address)": "infinite",
								"removeStakeholder(address)": "infinite",
								"validateStakingPeriod(struct Staking.stake memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1610,
									"end": 1620,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1610,
									"end": 1620,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1620,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1610,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1591,
									"end": 1609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1591,
									"end": 1609,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1591,
									"end": 1609,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1591,
									"end": 1623,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26703,
									"end": 26711,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26693,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 26686,
									"end": 26693,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26686,
									"end": 26712,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26753,
									"end": 26756,
									"name": "PUSH",
									"source": 0,
									"value": "141"
								},
								{
									"begin": 26722,
									"end": 26725,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26726,
									"end": 26749,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26722,
									"end": 26750,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26756,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26756,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26722,
									"end": 26756,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26808,
									"end": 26811,
									"name": "PUSH",
									"source": 0,
									"value": "307"
								},
								{
									"begin": 26777,
									"end": 26780,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26781,
									"end": 26804,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26777,
									"end": 26805,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26811,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26811,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26811,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26777,
									"end": 26811,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26865,
									"end": 26869,
									"name": "PUSH",
									"source": 0,
									"value": "8A9"
								},
								{
									"begin": 26832,
									"end": 26835,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26836,
									"end": 26861,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26832,
									"end": 26862,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26869,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26869,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26869,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26832,
									"end": 26869,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26922,
									"end": 26926,
									"name": "PUSH",
									"source": 0,
									"value": "1013"
								},
								{
									"begin": 26891,
									"end": 26894,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26895,
									"end": 26918,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26891,
									"end": 26919,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26926,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26926,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26926,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26891,
									"end": 26926,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26978,
									"end": 26982,
									"name": "PUSH",
									"source": 0,
									"value": "1970"
								},
								{
									"begin": 26948,
									"end": 26951,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26952,
									"end": 26974,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26948,
									"end": 26975,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26982,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26982,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26982,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26948,
									"end": 26982,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27041,
									"end": 27044,
									"name": "PUSH",
									"source": 0,
									"value": "19E"
								},
								{
									"begin": 27006,
									"end": 27013,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27014,
									"end": 27037,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27006,
									"end": 27038,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27044,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27044,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27044,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27006,
									"end": 27044,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27100,
									"end": 27103,
									"name": "PUSH",
									"source": 0,
									"value": "390"
								},
								{
									"begin": 27065,
									"end": 27072,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27073,
									"end": 27096,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27065,
									"end": 27097,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27103,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27103,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27103,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27065,
									"end": 27103,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27161,
									"end": 27165,
									"name": "PUSH",
									"source": 0,
									"value": "12D1"
								},
								{
									"begin": 27124,
									"end": 27131,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27132,
									"end": 27157,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27124,
									"end": 27158,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27165,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27165,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27165,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27124,
									"end": 27165,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27222,
									"end": 27226,
									"name": "PUSH",
									"source": 0,
									"value": "1C2D"
								},
								{
									"begin": 27187,
									"end": 27194,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27195,
									"end": 27218,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "tag",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27187,
									"end": 27219,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27226,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27226,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27226,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27187,
									"end": 27226,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27282,
									"end": 27287,
									"name": "PUSH",
									"source": 0,
									"value": "4650"
								},
								{
									"begin": 27248,
									"end": 27255,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27256,
									"end": 27278,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "tag",
									"source": 0,
									"value": "49"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27248,
									"end": 27279,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27287,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27287,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27287,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 27248,
									"end": 27287,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26641,
									"end": 27306,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 502,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 406,
									"end": 502,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 459,
									"end": 466,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 495,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 478,
									"end": 495,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 406,
									"end": 502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 406,
									"end": 502,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 3088,
									"end": 3275,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3088,
									"end": 3275,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3161,
									"end": 3177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3180,
									"end": 3186,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3161,
									"end": 3186,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3161,
									"end": 3186,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3205,
									"end": 3213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3196,
									"end": 3202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3196,
									"end": 3213,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3259,
									"end": 3267,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3249,
									"end": 3257,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3228,
									"end": 3268,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3151,
									"end": 3275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3275,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3088,
									"end": 3275,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 828,
									"end": 1008,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 828,
									"end": 1008,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 876,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 873,
									"end": 874,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 866,
									"end": 954,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 973,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 963,
									"end": 978,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 997,
									"end": 1001,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 994,
									"end": 995,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 987,
									"end": 1002,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1254,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1137,
									"end": 1254,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1247,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1236,
									"end": 1248,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1382,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1260,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1351,
									"end": 1356,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1333,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1326,
									"end": 1331,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1358,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1376,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1313,
									"end": 1376,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1376,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1313,
									"end": 1376,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1382,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1260,
									"end": 1382,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25704,
									"end": 34676,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206aeb2d2cf91f38aba214b6c020df4f78a31488094e13efd8043c16f1fb1e01ae64736f6c63430008070033",
									".code": [
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "7E61BADD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "AD9159FD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E580D976"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E580D976"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E627F2DB"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E9917C07"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "AD9159FD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "B8FCF937"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "BF583903"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "7E61BADD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "8CFCECE7"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "980B4229"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "9E196CAD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "2B4AFCC3"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "2B4AFCC3"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "2E1E844E"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "2F7D122F"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "3027FFC0"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "57D54AED"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "63B35BF"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "66C6DBB"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "DED03CD"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "E15561A"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "108B96C4"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "2B28EA29"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25704,
											"end": 34676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32042,
											"end": 32055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32074,
											"end": 32080,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32081,
											"end": 32093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32074,
											"end": 32094,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32095,
											"end": 32107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32074,
											"end": 32108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32074,
											"end": 32120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32067,
											"end": 32120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32067,
											"end": 32120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32127,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26265,
											"end": 26310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32208,
											"end": 32215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32227,
											"end": 32249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32258,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32259,
											"end": 32269,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32252,
											"end": 32270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32271,
											"end": 32283,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32252,
											"end": 32284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32227,
											"end": 32284,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32294,
											"end": 32315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32318,
											"end": 32386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32337,
											"end": 32346,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32337,
											"end": 32353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32337,
											"end": 32353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32355,
											"end": 32364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32375,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32366,
											"end": 32385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32366,
											"end": 32385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32318,
											"end": 32336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32318,
											"end": 32386,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32318,
											"end": 32386,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 32318,
											"end": 32386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32294,
											"end": 32386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32294,
											"end": 32386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32475,
											"end": 32477,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32467,
											"end": 32469,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32459,
											"end": 32461,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 32434,
											"end": 32443,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32434,
											"end": 32453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32434,
											"end": 32453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32431,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 32416,
											"end": 32453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32415,
											"end": 32458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 32415,
											"end": 32462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32415,
											"end": 32466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 32415,
											"end": 32470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32415,
											"end": 32474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 32415,
											"end": 32478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32511,
											"end": 32512,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32500,
											"end": 32508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32500,
											"end": 32512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32520,
											"end": 32528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32516,
											"end": 32517,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 32499,
											"end": 32528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32488,
											"end": 32528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32572,
											"end": 32580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32563,
											"end": 32566,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 32545,
											"end": 32558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32545,
											"end": 32562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 32545,
											"end": 32567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 32545,
											"end": 32571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 32545,
											"end": 32581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32538,
											"end": 32581,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 32538,
											"end": 32581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32538,
											"end": 32581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32538,
											"end": 32581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32538,
											"end": 32581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32134,
											"end": 32588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25801,
											"end": 25828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26096,
											"end": 26139,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30469,
											"end": 30476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30469,
											"end": 30489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30489,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 30490,
											"end": 30496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30506,
											"end": 30510,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30513,
											"end": 30541,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 30513,
											"end": 30541,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 30469,
											"end": 30542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 30461,
											"end": 30568,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30399,
											"end": 30575,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29496,
											"end": 29502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29513,
											"end": 29521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29513,
											"end": 29528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29509,
											"end": 29510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29509,
											"end": 29528,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29570,
											"end": 29571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29558,
											"end": 29564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29565,
											"end": 29566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29558,
											"end": 29571,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 29550,
											"end": 29606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29652,
											"end": 29661,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29648,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29620,
											"end": 29648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29620,
											"end": 29661,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29725,
											"end": 29726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29678,
											"end": 29684,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29685,
											"end": 29693,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29694,
											"end": 29695,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29685,
											"end": 29696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29678,
											"end": 29697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29698,
											"end": 29710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29711,
											"end": 29712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29698,
											"end": 29713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29678,
											"end": 29714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29678,
											"end": 29721,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29678,
											"end": 29726,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29746,
											"end": 29773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29761,
											"end": 29769,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29761,
											"end": 29772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29746,
											"end": 29760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 29746,
											"end": 29773,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29746,
											"end": 29773,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 29746,
											"end": 29773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29842,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29843,
											"end": 29844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29836,
											"end": 29845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29859,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29860,
											"end": 29861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29847,
											"end": 29862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29875,
											"end": 29876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29864,
											"end": 29877,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29830,
											"end": 29878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29797,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29798,
											"end": 29806,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29807,
											"end": 29808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29798,
											"end": 29809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29811,
											"end": 29823,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29824,
											"end": 29825,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29811,
											"end": 29826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29827,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29791,
											"end": 29878,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 29924,
											"end": 29930,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29931,
											"end": 29932,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29924,
											"end": 29933,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29919,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29909,
											"end": 29919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 29909,
											"end": 29923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 29909,
											"end": 29934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29896,
											"end": 29906,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29896,
											"end": 29934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29896,
											"end": 29934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29896,
											"end": 29934,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29896,
											"end": 29934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 29995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 30004,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30005,
											"end": 30013,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30014,
											"end": 30015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30005,
											"end": 30016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 30017,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30018,
											"end": 30030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30031,
											"end": 30032,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30018,
											"end": 30033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29998,
											"end": 30034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29973,
											"end": 30034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30092,
											"end": 30098,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30099,
											"end": 30100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30092,
											"end": 30101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30071,
											"end": 30087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 30071,
											"end": 30091,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 30071,
											"end": 30102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30052,
											"end": 30068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30052,
											"end": 30102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30153,
											"end": 30154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30142,
											"end": 30155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30120,
											"end": 30139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30120,
											"end": 30155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30212,
											"end": 30221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30179,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30180,
											"end": 30188,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30189,
											"end": 30190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30193,
											"end": 30205,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30206,
											"end": 30207,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30193,
											"end": 30208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30209,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30173,
											"end": 30221,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30267,
											"end": 30273,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30274,
											"end": 30275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30267,
											"end": 30276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30262,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30252,
											"end": 30262,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 30252,
											"end": 30266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30252,
											"end": 30277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30239,
											"end": 30249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30239,
											"end": 30277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30239,
											"end": 30277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30239,
											"end": 30277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30239,
											"end": 30277,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29955,
											"end": 30292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 29675,
											"end": 30292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30330,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30331,
											"end": 30332,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30322,
											"end": 30333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "ADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C"
										},
										{
											"begin": 30335,
											"end": 30341,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30342,
											"end": 30343,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30335,
											"end": 30344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30359,
											"end": 30360,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30346,
											"end": 30361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30373,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30374,
											"end": 30375,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30310,
											"end": 30377,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29531,
											"end": 29534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29492,
											"end": 30388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29319,
											"end": 30394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34336,
											"end": 34347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34319,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34320,
											"end": 34332,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34316,
											"end": 34333,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34347,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34316,
											"end": 34347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34217,
											"end": 34354,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31049,
											"end": 31059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31034,
											"end": 31059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31059,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30963,
											"end": 31066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26147,
											"end": 26212,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32973,
											"end": 32980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33023,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33024,
											"end": 33034,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33036,
											"end": 33048,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33017,
											"end": 33049,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32992,
											"end": 33049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33059,
											"end": 33077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33102,
											"end": 33138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33128,
											"end": 33137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33102,
											"end": 33127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 33102,
											"end": 33138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33102,
											"end": 33138,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 33102,
											"end": 33138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33089,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 33080,
											"end": 33138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33059,
											"end": 33138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33059,
											"end": 33138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33155,
											"end": 33165,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 33165,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 33165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 33165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33148,
											"end": 33165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32901,
											"end": 33172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2577,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 2550,
											"end": 2580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2587,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28329,
											"end": 28330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28320,
											"end": 28326,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28320,
											"end": 28330,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 28312,
											"end": 28365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28400,
											"end": 28406,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28407,
											"end": 28417,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28400,
											"end": 28418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28419,
											"end": 28431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28400,
											"end": 28432,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28375,
											"end": 28432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28450,
											"end": 28482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28472,
											"end": 28481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28450,
											"end": 28471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 28450,
											"end": 28482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28450,
											"end": 28482,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 28450,
											"end": 28482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 28442,
											"end": 28516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28544,
											"end": 28560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28544,
											"end": 28560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28534,
											"end": 28540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28534,
											"end": 28560,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28534,
											"end": 28560,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 28526,
											"end": 28585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28595,
											"end": 28618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28621,
											"end": 28650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 28637,
											"end": 28649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 28621,
											"end": 28650,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28621,
											"end": 28650,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 28621,
											"end": 28650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28595,
											"end": 28650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28595,
											"end": 28650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 28700,
											"end": 28706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28679,
											"end": 28695,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28695,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28679,
											"end": 28699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 28679,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28660,
											"end": 28676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28660,
											"end": 28707,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28752,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28723,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28724,
											"end": 28734,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28736,
											"end": 28748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28749,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28717,
											"end": 28761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 28799,
											"end": 28805,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28784,
											"end": 28794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 28784,
											"end": 28798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 28784,
											"end": 28806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28781,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28771,
											"end": 28806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28806,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 28806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28848,
											"end": 28863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28843,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28831,
											"end": 28843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28831,
											"end": 28847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 28831,
											"end": 28864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28816,
											"end": 28828,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28816,
											"end": 28864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28816,
											"end": 28864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28816,
											"end": 28864,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28816,
											"end": 28864,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28988,
											"end": 28989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28951,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28952,
											"end": 28962,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28963,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28964,
											"end": 28976,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28977,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28945,
											"end": 28984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28989,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28942,
											"end": 29020,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28942,
											"end": 29020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28942,
											"end": 29020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 29009,
											"end": 29019,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28991,
											"end": 29008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 28991,
											"end": 29020,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28991,
											"end": 29020,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 28991,
											"end": 29020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28942,
											"end": 29020,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 28942,
											"end": 29020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29030,
											"end": 29037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29046,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29030,
											"end": 29046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29046,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 29047,
											"end": 29057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29059,
											"end": 29065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29030,
											"end": 29066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29076,
											"end": 29083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29076,
											"end": 29096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29096,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 29097,
											"end": 29104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29097,
											"end": 29102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 29097,
											"end": 29104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29097,
											"end": 29104,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29097,
											"end": 29104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29106,
											"end": 29116,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29118,
											"end": 29133,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29076,
											"end": 29134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29163,
											"end": 29173,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH",
											"source": 0,
											"value": "20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56"
										},
										{
											"begin": 29175,
											"end": 29181,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29183,
											"end": 29195,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29212,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29149,
											"end": 29213,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 29247,
											"end": 29257,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH",
											"source": 0,
											"value": "6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57"
										},
										{
											"begin": 29259,
											"end": 29274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29276,
											"end": 29288,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29290,
											"end": 29305,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29228,
											"end": 29306,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28302,
											"end": 29313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28302,
											"end": 29313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28234,
											"end": 29313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25795,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34487,
											"end": 34498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34470,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34471,
											"end": 34483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34463,
											"end": 34484,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34498,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34463,
											"end": 34498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34361,
											"end": 34505,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1902,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1941,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25834,
											"end": 25858,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26218,
											"end": 26259,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31861,
											"end": 31868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31891,
											"end": 31897,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31898,
											"end": 31910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31891,
											"end": 31911,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31912,
											"end": 31924,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31891,
											"end": 31925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31891,
											"end": 31932,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 31932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31884,
											"end": 31932,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31750,
											"end": 31939,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26318,
											"end": 26339,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34560,
											"end": 34567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34586,
											"end": 34665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34602,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34612,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34612,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34612,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34613,
											"end": 34620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 34613,
											"end": 34618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 34613,
											"end": 34620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34613,
											"end": 34620,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 34613,
											"end": 34620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 34595,
											"end": 34621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34623,
											"end": 34630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34623,
											"end": 34640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34640,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 34641,
											"end": 34648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 34641,
											"end": 34646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 34641,
											"end": 34648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34641,
											"end": 34648,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 34641,
											"end": 34648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34658,
											"end": 34662,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 34623,
											"end": 34664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34586,
											"end": 34594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 34586,
											"end": 34665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34586,
											"end": 34665,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 34586,
											"end": 34665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34579,
											"end": 34665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34579,
											"end": 34665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34512,
											"end": 34672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32670,
											"end": 32677,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32689,
											"end": 32711,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32720,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32721,
											"end": 32731,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32714,
											"end": 32732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32733,
											"end": 32745,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32714,
											"end": 32746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32689,
											"end": 32746,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32756,
											"end": 32777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32780,
											"end": 32848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 32799,
											"end": 32808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32799,
											"end": 32815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32799,
											"end": 32815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32817,
											"end": 32826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32837,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32828,
											"end": 32847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32828,
											"end": 32847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32780,
											"end": 32798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32780,
											"end": 32848,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32780,
											"end": 32848,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 32780,
											"end": 32848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32756,
											"end": 32848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32756,
											"end": 32848,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 32883,
											"end": 32886,
											"name": "PUSH",
											"source": 0,
											"value": "16D"
										},
										{
											"begin": 32865,
											"end": 32878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32865,
											"end": 32882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 32865,
											"end": 32887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32887,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32858,
											"end": 32887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32595,
											"end": 32894,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34120,
											"end": 34127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34150,
											"end": 34162,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34150,
											"end": 34162,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34143,
											"end": 34162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34049,
											"end": 34169,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27450,
											"end": 27451,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27441,
											"end": 27447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27441,
											"end": 27451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 27433,
											"end": 27486,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27524,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 27525,
											"end": 27535,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27545,
											"end": 27549,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27552,
											"end": 27558,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 27504,
											"end": 27559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 27496,
											"end": 27585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27641,
											"end": 27642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27604,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27605,
											"end": 27615,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27617,
											"end": 27629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27598,
											"end": 27637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27637,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27598,
											"end": 27642,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 27673,
											"end": 27683,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27658,
											"end": 27672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 27658,
											"end": 27684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27658,
											"end": 27684,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 27658,
											"end": 27684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27739,
											"end": 27745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27747,
											"end": 27759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27761,
											"end": 27776,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27733,
											"end": 27777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27704,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27705,
											"end": 27715,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27698,
											"end": 27716,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27717,
											"end": 27729,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27698,
											"end": 27730,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27698,
											"end": 27777,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 27819,
											"end": 27825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27814,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27804,
											"end": 27814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27804,
											"end": 27818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 27804,
											"end": 27826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27801,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27791,
											"end": 27826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27826,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27791,
											"end": 27826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27882,
											"end": 27888,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27889,
											"end": 27899,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27882,
											"end": 27900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27901,
											"end": 27913,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27882,
											"end": 27914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "tag",
											"source": 0,
											"value": "410"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27857,
											"end": 27914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 27968,
											"end": 27974,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27947,
											"end": 27963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27947,
											"end": 27967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "tag",
											"source": 0,
											"value": "412"
										},
										{
											"begin": 27947,
											"end": 27975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27928,
											"end": 27944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27975,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27928,
											"end": 27975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28011,
											"end": 28026,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 27998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27989,
											"end": 28008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27989,
											"end": 28026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28075,
											"end": 28084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28046,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28047,
											"end": 28057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28059,
											"end": 28071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 28126,
											"end": 28132,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28111,
											"end": 28121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 28111,
											"end": 28125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 28111,
											"end": 28133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28108,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28098,
											"end": 28133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28133,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28098,
											"end": 28133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27843,
											"end": 28144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 27595,
											"end": 28144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28170,
											"end": 28180,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH",
											"source": 0,
											"value": "ADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C"
										},
										{
											"begin": 28182,
											"end": 28188,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28204,
											"end": 28219,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28220,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27351,
											"end": 28227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1749,
											"end": 1760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 1749,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2844,
											"end": 2845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2824,
											"end": 2846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "425"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 2816,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2918,
											"end": 2926,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2899,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 2899,
											"end": 2927,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2899,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2934,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30698,
											"end": 30705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30734,
											"end": 30746,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30734,
											"end": 30746,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30720,
											"end": 30730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30720,
											"end": 30746,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30717,
											"end": 30949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 30717,
											"end": 30949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 30832,
											"end": 30835,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 30823,
											"end": 30826,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 30787,
											"end": 30794,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30795,
											"end": 30804,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30816,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30795,
											"end": 30816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30787,
											"end": 30817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30782,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30768,
											"end": 30786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 30768,
											"end": 30818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30768,
											"end": 30822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 30768,
											"end": 30827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30768,
											"end": 30831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "tag",
											"source": 0,
											"value": "430"
										},
										{
											"begin": 30768,
											"end": 30836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30761,
											"end": 30836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30761,
											"end": 30836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30761,
											"end": 30836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 30761,
											"end": 30836,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30717,
											"end": 30949,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 30717,
											"end": 30949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 30934,
											"end": 30937,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 30925,
											"end": 30928,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 30893,
											"end": 30896,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30897,
											"end": 30906,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30918,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30897,
											"end": 30918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30897,
											"end": 30918,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30893,
											"end": 30919,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30888,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 30874,
											"end": 30892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 30874,
											"end": 30920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30874,
											"end": 30924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 30874,
											"end": 30929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30874,
											"end": 30933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 30874,
											"end": 30938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30867,
											"end": 30938,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30867,
											"end": 30938,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30582,
											"end": 30955,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10205,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10224,
											"end": 10225,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10217,
											"end": 10229,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10140,
											"end": 10236,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9813,
											"end": 9820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 9839,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 9844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 9844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9755,
											"end": 9851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2014,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "tag",
											"source": 0,
											"value": "452"
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2077,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2100,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "457"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "tag",
											"source": 0,
											"value": "456"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "tag",
											"source": 0,
											"value": "455"
										},
										{
											"begin": 2069,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2144,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33507,
											"end": 33705,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 33507,
											"end": 33705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33585,
											"end": 33604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33610,
											"end": 33637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 33624,
											"end": 33636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33610,
											"end": 33623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 33610,
											"end": 33637,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33610,
											"end": 33637,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 33610,
											"end": 33637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33584,
											"end": 33637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33584,
											"end": 33637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33584,
											"end": 33637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33651,
											"end": 33665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33647,
											"end": 33698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 33647,
											"end": 33698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33679,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33685,
											"end": 33697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33667,
											"end": 33698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33647,
											"end": 33698,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 33647,
											"end": 33698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33574,
											"end": 33705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33507,
											"end": 33705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33507,
											"end": 33705,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 9129,
											"end": 9134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9134,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9134,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9045,
											"end": 9141,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31401,
											"end": 31408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31451,
											"end": 31474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31447,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31426,
											"end": 31447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31474,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31512,
											"end": 31535,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31508,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31487,
											"end": 31508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "tag",
											"source": 0,
											"value": "473"
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31535,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31573,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31548,
											"end": 31569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31636,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31611,
											"end": 31632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31698,
											"end": 31720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31694,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31673,
											"end": 31694,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31734,
											"end": 31735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31723,
											"end": 31731,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 31673,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31662,
											"end": 31670,
											"name": "PUSH",
											"source": 0,
											"value": "9E3400"
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 31611,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31601,
											"end": 31608,
											"name": "PUSH",
											"source": 0,
											"value": "76A700"
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "493"
										},
										{
											"begin": 31548,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31538,
											"end": 31545,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 31487,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31477,
											"end": 31484,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 31426,
											"end": 31735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31419,
											"end": 31735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 31419,
											"end": 31735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31419,
											"end": 31735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31419,
											"end": 31735,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31743,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3088,
											"end": 3275,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3088,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 3213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3259,
											"end": 3267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3249,
											"end": 3257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3268,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3088,
											"end": 3275,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31150,
											"end": 31154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31166,
											"end": 31190,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 31241,
											"end": 31250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31215,
											"end": 31240,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 31215,
											"end": 31251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31215,
											"end": 31251,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 31215,
											"end": 31251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31193,
											"end": 31212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 31193,
											"end": 31251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31166,
											"end": 31251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31166,
											"end": 31251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31287,
											"end": 31303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31268,
											"end": 31283,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 31268,
											"end": 31303,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31268,
											"end": 31303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31261,
											"end": 31303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31261,
											"end": 31303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31261,
											"end": 31303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31073,
											"end": 31311,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9470,
											"end": 9477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "501"
										},
										{
											"begin": 9496,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9489,
											"end": 9501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9508,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33714,
											"end": 34003,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 33714,
											"end": 34003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33795,
											"end": 33814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33816,
											"end": 33825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33829,
											"end": 33856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 33843,
											"end": 33855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33829,
											"end": 33842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 33829,
											"end": 33856,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33829,
											"end": 33856,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 33829,
											"end": 33856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33794,
											"end": 33856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33794,
											"end": 33856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33794,
											"end": 33856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33794,
											"end": 33856,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33869,
											"end": 33883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33866,
											"end": 33996,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33866,
											"end": 33996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 33866,
											"end": 33996,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33951,
											"end": 33952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33929,
											"end": 33941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33929,
											"end": 33948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33948,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 33929,
											"end": 33952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33916,
											"end": 33953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33911,
											"end": 33912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33898,
											"end": 33953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33967,
											"end": 33985,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33866,
											"end": 33996,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 33866,
											"end": 33996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 34003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33784,
											"end": 34003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 34003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 34003,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13796,
											"end": 13803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13826,
											"end": 13827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13834,
											"end": 13835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13830,
											"end": 13831,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 13822,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13815,
											"end": 13835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13738,
											"end": 13842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 502,
											"name": "tag",
											"source": 0,
											"value": "453"
										},
										{
											"begin": 406,
											"end": 502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 459,
											"end": 466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 495,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 478,
											"end": 495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 502,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33310,
											"end": 33314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33316,
											"end": 33323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33344,
											"end": 33353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33363,
											"end": 33375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33363,
											"end": 33382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33363,
											"end": 33382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33363,
											"end": 33382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33363,
											"end": 33382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33359,
											"end": 33382,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33434,
											"end": 33435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "tag",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33421,
											"end": 33436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33409,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33409,
											"end": 33436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33409,
											"end": 33417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33409,
											"end": 33436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33409,
											"end": 33436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33409,
											"end": 33436,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 33405,
											"end": 33454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33446,
											"end": 33450,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33452,
											"end": 33453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 33438,
											"end": 33454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33405,
											"end": 33454,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 33405,
											"end": 33454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33389,
											"end": 33390,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33384,
											"end": 33390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33339,
											"end": 33465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33482,
											"end": 33487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33489,
											"end": 33490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33223,
											"end": 33498,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 218,
											"end": 224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 161,
											"end": 225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 161,
											"end": 225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 226,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 145,
											"end": 226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 136,
											"end": 226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 136,
											"end": 226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 246,
											"end": 251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 275,
											"end": 281,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 268,
											"end": 273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 282,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 298,
											"end": 314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 291,
											"end": 314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 291,
											"end": 314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 335,
											"end": 341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 385,
											"end": 388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 377,
											"end": 381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 375,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 365,
											"end": 382,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 360,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 356,
											"end": 383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 353,
											"end": 389,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 350,
											"end": 493,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 350,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 404,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 350,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 517,
											"end": 518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 527,
											"end": 533,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 524,
											"end": 525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 534,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 502,
											"end": 740,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 595,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 657,
											"end": 660,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 645,
											"end": 655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 624,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 624,
											"end": 661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 619,
											"end": 622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 612,
											"end": 662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 691,
											"end": 695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 682,
											"end": 696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 675,
											"end": 696,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 675,
											"end": 696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 725,
											"end": 729,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 720,
											"end": 723,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 716,
											"end": 730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 709,
											"end": 730,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 709,
											"end": 730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 562,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 549,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 546,
											"end": 547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 542,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 537,
											"end": 551,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 537,
											"end": 551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 502,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 126,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 746,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 902,
											"end": 907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 943,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 1018,
											"end": 1024,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 943,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 943,
											"end": 1025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 1025,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 943,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 927,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 927,
											"end": 1026,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 927,
											"end": 1026,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 927,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 918,
											"end": 1026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1051,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1081,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1061,
											"end": 1082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1188,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1181,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1175,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1165,
											"end": 1182,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1189,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1293,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 1150,
											"end": 1293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 1204,
											"end": 1283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 1204,
											"end": 1283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1283,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 1204,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1293,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 1150,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1324,
											"end": 1325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1334,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 1475,
											"end": 1478,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 1424,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1422,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1548,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 1302,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 908,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 788,
											"end": 1564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1708,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 1724,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 1724,
											"end": 1788,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 1724,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1708,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 1708,
											"end": 1789,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1789,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 1708,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1809,
											"end": 1814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 1844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1872,
											"end": 1876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1854,
											"end": 1877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1951,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1946,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1952,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2056,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 1913,
											"end": 2056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1967,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 1967,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 1967,
											"end": 2046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1967,
											"end": 2046,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 1967,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 1913,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2097,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 2187,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2175,
											"end": 2225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2258,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2252,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2286,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2293,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 2065,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 2309,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2582,
											"end": 2588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2595,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2601,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 2564,
											"end": 2686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 2605,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2686,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 2564,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2729,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2837,
											"end": 2840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2826,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2814,
											"end": 2820,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 2747,
											"end": 2841,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2841,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 2747,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2847,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3024,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3031,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 2994,
											"end": 3116,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3035,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 3035,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 3035,
											"end": 3114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3035,
											"end": 3114,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 3035,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2994,
											"end": 3116,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 2994,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3152,
											"end": 3158,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 3285,
											"end": 3288,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 3177,
											"end": 3289,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3177,
											"end": 3289,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 3177,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3289,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3168,
											"end": 3289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2889,
											"end": 3295,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3435,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3442,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 3405,
											"end": 3527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3446,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 3446,
											"end": 3525,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3446,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 3446,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3527,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 3405,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3570,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3676,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 3588,
											"end": 3682,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3588,
											"end": 3682,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 3588,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3682,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3395,
											"end": 3688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3688,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3748,
											"end": 3753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 3819,
											"end": 3824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 3795,
											"end": 3825,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3795,
											"end": 3825,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 3795,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3694,
											"end": 3831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3939,
											"end": 3945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3946,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 4000,
											"end": 4005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 3955,
											"end": 4006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3955,
											"end": 4006,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 3955,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3837,
											"end": 4012,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4109,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4080,
											"end": 4109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 4145,
											"end": 4150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4118,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 4118,
											"end": 4151,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4151,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 4118,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4018,
											"end": 4157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4258,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4258,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 4294,
											"end": 4299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 4267,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4306,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4408,
											"end": 4417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4399,
											"end": 4406,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4395,
											"end": 4418,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4423,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 4426,
											"end": 4505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "tag",
											"source": 1,
											"value": "601"
										},
										{
											"begin": 4388,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 4571,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4312,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4792,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4778,
											"end": 4787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4793,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 4796,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "tag",
											"source": 1,
											"value": "606"
										},
										{
											"begin": 4758,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4962,
											"end": 4984,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 4941,
											"end": 4994,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4941,
											"end": 4994,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 4941,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4994,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 5004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5069,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 5132,
											"end": 5139,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5123,
											"end": 5129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5121,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5069,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 5069,
											"end": 5140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5069,
											"end": 5140,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 5069,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 5157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5375,
											"end": 5381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5440,
											"end": 5443,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5428,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5411,
											"end": 5444,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 5408,
											"end": 5528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 5447,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 5447,
											"end": 5526,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5447,
											"end": 5526,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 5447,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5528,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 5408,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5580,
											"end": 5597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5598,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5643,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5644,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5728,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 5611,
											"end": 5728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 5647,
											"end": 5726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5728,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 5611,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 5822,
											"end": 5829,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5813,
											"end": 5819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5811,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 5752,
											"end": 5830,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5830,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 5752,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5830,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5742,
											"end": 5830,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5907,
											"end": 5909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5879,
											"end": 5911,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5930,
											"end": 5936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5957,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 5924,
											"end": 6041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5960,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 5960,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 5960,
											"end": 6039,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5960,
											"end": 6039,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 5960,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5924,
											"end": 6041,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 5924,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 6135,
											"end": 6142,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6143,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6055,
											"end": 6143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 6153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6220,
											"end": 6222,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6209,
											"end": 6218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6224,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6269,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6243,
											"end": 6249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 6273,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 6237,
											"end": 6354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 6466,
											"end": 6473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6457,
											"end": 6463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6446,
											"end": 6455,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6378,
											"end": 6474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 6378,
											"end": 6474,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6378,
											"end": 6474,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 6378,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6474,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6484,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6551,
											"end": 6553,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6540,
											"end": 6549,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6555,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6582,
											"end": 6600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6601,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 6604,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 6568,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6779,
											"end": 6786,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6759,
											"end": 6768,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6755,
											"end": 6777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 6709,
											"end": 6787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6709,
											"end": 6787,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 6709,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6494,
											"end": 6797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5163,
											"end": 6804,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6928,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6924,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 6932,
											"end": 7011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 6894,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 7130,
											"end": 7137,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7121,
											"end": 7127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7110,
											"end": 7119,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 7077,
											"end": 7138,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7077,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 7077,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7148,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 7155,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7238,
											"end": 7244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7289,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7275,
											"end": 7284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7273,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7285,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7290,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 7255,
											"end": 7374,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 7293,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 7293,
											"end": 7372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7293,
											"end": 7372,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 7293,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7374,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 7255,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 7501,
											"end": 7508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7438,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 7438,
											"end": 7509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7438,
											"end": 7509,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 7438,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7161,
											"end": 7526,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7619,
											"end": 7626,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7611,
											"end": 7643,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 7646,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 7836,
											"end": 7843,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 7844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 7791,
											"end": 7844,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7791,
											"end": 7844,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 7791,
											"end": 7844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7737,
											"end": 7854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7937,
											"end": 7943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7974,
											"end": 7983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7989,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8073,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 7954,
											"end": 8073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7992,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 7992,
											"end": 8071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7992,
											"end": 8071,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 7992,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 8073,
											"name": "tag",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 7954,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8137,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 8193,
											"end": 8200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 8137,
											"end": 8201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8137,
											"end": 8201,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 8137,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8083,
											"end": 8211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7867,
											"end": 8218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8367,
											"end": 8369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8346,
											"end": 8353,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8342,
											"end": 8365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8370,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 8335,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8373,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 8373,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 8373,
											"end": 8452,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8373,
											"end": 8452,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 8373,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8335,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "643"
										},
										{
											"begin": 8335,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 8563,
											"end": 8570,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8554,
											"end": 8560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8543,
											"end": 8552,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8539,
											"end": 8561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8518,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 8518,
											"end": 8571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8518,
											"end": 8571,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 8518,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8620,
											"end": 8622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 8709,
											"end": 8716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8689,
											"end": 8698,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 8646,
											"end": 8717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8734,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8740,
											"end": 8858,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 8740,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 8845,
											"end": 8850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8827,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 8827,
											"end": 8851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8827,
											"end": 8851,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 8827,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8822,
											"end": 8825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8815,
											"end": 8852,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8740,
											"end": 8858,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8864,
											"end": 9023,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 8864,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 9010,
											"end": 9015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8965,
											"end": 9016,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8965,
											"end": 9016,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 8965,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8960,
											"end": 8963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 9023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 9023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 9023,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9029,
											"end": 9192,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 9029,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 9179,
											"end": 9184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 9132,
											"end": 9185,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9132,
											"end": 9185,
											"name": "tag",
											"source": 1,
											"value": "657"
										},
										{
											"begin": 9132,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9127,
											"end": 9130,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9120,
											"end": 9186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9029,
											"end": 9192,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "tag",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 9425,
											"end": 9427,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 9420,
											"end": 9423,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 9361,
											"end": 9428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9361,
											"end": 9428,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 9361,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 9526,
											"end": 9529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 9437,
											"end": 9530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9437,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 9437,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9555,
											"end": 9557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9539,
											"end": 9558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9712,
											"end": 9715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9733,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 9797,
											"end": 9799,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9792,
											"end": 9795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 9733,
											"end": 9800,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9733,
											"end": 9800,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 9733,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 9898,
											"end": 9901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 9809,
											"end": 9902,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9809,
											"end": 9902,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 9809,
											"end": 9902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9927,
											"end": 9929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9936,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "tag",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10105,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 10169,
											"end": 10171,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10164,
											"end": 10167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10105,
											"end": 10172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 10105,
											"end": 10172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10105,
											"end": 10172,
											"name": "tag",
											"source": 1,
											"value": "672"
										},
										{
											"begin": 10105,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10098,
											"end": 10172,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10098,
											"end": 10172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10181,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 10270,
											"end": 10273,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10181,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 10181,
											"end": 10274,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10181,
											"end": 10274,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 10181,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10294,
											"end": 10297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 10308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10459,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10477,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 10541,
											"end": 10543,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 10536,
											"end": 10539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10477,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 10477,
											"end": 10544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10477,
											"end": 10544,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 10477,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10470,
											"end": 10544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10470,
											"end": 10544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 10642,
											"end": 10645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 10553,
											"end": 10646,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10553,
											"end": 10646,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 10553,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10671,
											"end": 10673,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10666,
											"end": 10669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10674,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 10913,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10908,
											"end": 10911,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "tag",
											"source": 1,
											"value": "682"
										},
										{
											"begin": 10849,
											"end": 10916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10916,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 11014,
											"end": 11017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "tag",
											"source": 1,
											"value": "683"
										},
										{
											"begin": 10925,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11043,
											"end": 11045,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11038,
											"end": 11041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11034,
											"end": 11046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10686,
											"end": 11052,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11200,
											"end": 11203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11221,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 11285,
											"end": 11287,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 11280,
											"end": 11283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11221,
											"end": 11288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 11221,
											"end": 11288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11221,
											"end": 11288,
											"name": "tag",
											"source": 1,
											"value": "687"
										},
										{
											"begin": 11221,
											"end": 11288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11214,
											"end": 11288,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 11386,
											"end": 11389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 11297,
											"end": 11390,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11297,
											"end": 11390,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 11297,
											"end": 11390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11415,
											"end": 11417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11410,
											"end": 11413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11406,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11399,
											"end": 11418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11058,
											"end": 11424,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11430,
											"end": 11548,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 11430,
											"end": 11548,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11517,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 11535,
											"end": 11540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11517,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 11517,
											"end": 11541,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11517,
											"end": 11541,
											"name": "tag",
											"source": 1,
											"value": "692"
										},
										{
											"begin": 11517,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11505,
											"end": 11542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11548,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11430,
											"end": 11548,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11651,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11674,
											"end": 11683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11670,
											"end": 11688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 11766,
											"end": 11767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11764,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11748,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11698,
											"end": 11769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11698,
											"end": 11769,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 11698,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11776,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11941,
											"end": 11943,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11918,
											"end": 11944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11918,
											"end": 11944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 12022,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12011,
											"end": 12020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12007,
											"end": 12024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11998,
											"end": 12004,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 11954,
											"end": 12025,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11954,
											"end": 12025,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 11954,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 12103,
											"end": 12105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12092,
											"end": 12101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12088,
											"end": 12106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12085,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12035,
											"end": 12107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12035,
											"end": 12107,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 12035,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 12114,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12307,
											"end": 12309,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12296,
											"end": 12305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12310,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 12388,
											"end": 12389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12377,
											"end": 12386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12373,
											"end": 12390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12364,
											"end": 12370,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12320,
											"end": 12391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12320,
											"end": 12391,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12320,
											"end": 12391,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 12320,
											"end": 12391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 12469,
											"end": 12471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12458,
											"end": 12467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12454,
											"end": 12472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12445,
											"end": 12451,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12401,
											"end": 12473,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12473,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 12401,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 12551,
											"end": 12553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12549,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12527,
											"end": 12533,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 12483,
											"end": 12555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12483,
											"end": 12555,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 12483,
											"end": 12555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12562,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12689,
											"end": 12693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12727,
											"end": 12729,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12716,
											"end": 12725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12704,
											"end": 12730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 12808,
											"end": 12809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12806,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12793,
											"end": 12810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 12790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 12740,
											"end": 12811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 12889,
											"end": 12891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12878,
											"end": 12887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12865,
											"end": 12871,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12821,
											"end": 12893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 12821,
											"end": 12893,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12821,
											"end": 12893,
											"name": "tag",
											"source": 1,
											"value": "705"
										},
										{
											"begin": 12821,
											"end": 12893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12900,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13013,
											"end": 13017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13051,
											"end": 13053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13040,
											"end": 13049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13036,
											"end": 13054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 13146,
											"end": 13147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13135,
											"end": 13144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13131,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13122,
											"end": 13128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 13064,
											"end": 13149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13064,
											"end": 13149,
											"name": "tag",
											"source": 1,
											"value": "707"
										},
										{
											"begin": 13064,
											"end": 13149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 13156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13271,
											"end": 13275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13309,
											"end": 13311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13298,
											"end": 13307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13294,
											"end": 13312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13286,
											"end": 13312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13286,
											"end": 13312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 13406,
											"end": 13407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13395,
											"end": 13404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13391,
											"end": 13408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13388,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13322,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 13322,
											"end": 13409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13322,
											"end": 13409,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 13322,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13162,
											"end": 13416,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13588,
											"end": 13592,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13615,
											"end": 13624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13603,
											"end": 13629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13603,
											"end": 13629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13675,
											"end": 13684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13669,
											"end": 13673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13665,
											"end": 13685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13661,
											"end": 13662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13650,
											"end": 13659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13646,
											"end": 13663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13639,
											"end": 13686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 13829,
											"end": 13833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13834,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "659"
										},
										{
											"begin": 13703,
											"end": 13834,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13703,
											"end": 13834,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 13703,
											"end": 13834,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13695,
											"end": 13834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13695,
											"end": 13834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13841,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14013,
											"end": 14017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14051,
											"end": 14053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14040,
											"end": 14049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14028,
											"end": 14054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14100,
											"end": 14109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14090,
											"end": 14110,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14086,
											"end": 14087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14075,
											"end": 14084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14111,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 14254,
											"end": 14258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 14128,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14120,
											"end": 14259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13847,
											"end": 14266,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14438,
											"end": 14442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14476,
											"end": 14478,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14465,
											"end": 14474,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14525,
											"end": 14534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14519,
											"end": 14523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14515,
											"end": 14535,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14512,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 14679,
											"end": 14683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14553,
											"end": 14684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "670"
										},
										{
											"begin": 14553,
											"end": 14684,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14553,
											"end": 14684,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 14553,
											"end": 14684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 14684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14545,
											"end": 14684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14272,
											"end": 14691,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14863,
											"end": 14867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14901,
											"end": 14903,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14886,
											"end": 14904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14878,
											"end": 14904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14950,
											"end": 14959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14944,
											"end": 14948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14940,
											"end": 14960,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14936,
											"end": 14937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14925,
											"end": 14934,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14914,
											"end": 14961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 15104,
											"end": 15108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "tag",
											"source": 1,
											"value": "717"
										},
										{
											"begin": 14978,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14970,
											"end": 15109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14970,
											"end": 15109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 15116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15326,
											"end": 15328,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15315,
											"end": 15324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15311,
											"end": 15329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15329,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15369,
											"end": 15373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15365,
											"end": 15385,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15350,
											"end": 15359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15339,
											"end": 15386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 15529,
											"end": 15533,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15403,
											"end": 15534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 15403,
											"end": 15534,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15403,
											"end": 15534,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 15403,
											"end": 15534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15395,
											"end": 15534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15395,
											"end": 15534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15713,
											"end": 15717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15751,
											"end": 15753,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15740,
											"end": 15749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15754,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15754,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15800,
											"end": 15809,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 15810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15786,
											"end": 15787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15775,
											"end": 15784,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15764,
											"end": 15811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15954,
											"end": 15958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "tag",
											"source": 1,
											"value": "721"
										},
										{
											"begin": 15828,
											"end": 15959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15820,
											"end": 15959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15820,
											"end": 15959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15547,
											"end": 15966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16065,
											"end": 16069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16103,
											"end": 16105,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16092,
											"end": 16101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16088,
											"end": 16106,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 16184,
											"end": 16185,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16173,
											"end": 16182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16169,
											"end": 16186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16160,
											"end": 16166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 16116,
											"end": 16187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 16194,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16365,
											"end": 16369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16403,
											"end": 16405,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16392,
											"end": 16401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16388,
											"end": 16406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16380,
											"end": 16406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 16484,
											"end": 16485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16473,
											"end": 16482,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16469,
											"end": 16486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16466,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "tag",
											"source": 1,
											"value": "725"
										},
										{
											"begin": 16416,
											"end": 16487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 16581,
											"end": 16583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16570,
											"end": 16579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16566,
											"end": 16584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16557,
											"end": 16563,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 16497,
											"end": 16585,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16497,
											"end": 16585,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 16497,
											"end": 16585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 16663,
											"end": 16665,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16652,
											"end": 16661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16648,
											"end": 16666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16639,
											"end": 16645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16595,
											"end": 16667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 16595,
											"end": 16667,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16595,
											"end": 16667,
											"name": "tag",
											"source": 1,
											"value": "727"
										},
										{
											"begin": 16595,
											"end": 16667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16200,
											"end": 16674,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16714,
											"end": 16720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16731,
											"end": 16761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 16798,
											"end": 16802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16790,
											"end": 16796,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 16770,
											"end": 16803,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16770,
											"end": 16803,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 16770,
											"end": 16803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 16809,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16848,
											"end": 16854,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16881,
											"end": 16883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16875,
											"end": 16884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16865,
											"end": 16884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16815,
											"end": 16890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16973,
											"end": 16977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17063,
											"end": 17081,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17055,
											"end": 17061,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17082,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17049,
											"end": 17105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17049,
											"end": 17105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 17049,
											"end": 17105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "tag",
											"source": 1,
											"value": "736"
										},
										{
											"begin": 17085,
											"end": 17103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17049,
											"end": 17105,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 17049,
											"end": 17105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17135,
											"end": 17139,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17127,
											"end": 17133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17140,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17115,
											"end": 17140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17115,
											"end": 17140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17195,
											"end": 17199,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17189,
											"end": 17193,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17185,
											"end": 17200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17177,
											"end": 17200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17177,
											"end": 17200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17207,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17308,
											"end": 17312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17398,
											"end": 17416,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17390,
											"end": 17396,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17387,
											"end": 17417,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17384,
											"end": 17440,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17384,
											"end": 17440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 17384,
											"end": 17440,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 17420,
											"end": 17438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17384,
											"end": 17440,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 17384,
											"end": 17440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17470,
											"end": 17474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17462,
											"end": 17468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17458,
											"end": 17475,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17450,
											"end": 17475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17450,
											"end": 17475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17530,
											"end": 17534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17524,
											"end": 17528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 17535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17512,
											"end": 17535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17512,
											"end": 17535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17213,
											"end": 17542,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17625,
											"end": 17629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17715,
											"end": 17733,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17707,
											"end": 17713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17704,
											"end": 17734,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17701,
											"end": 17757,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17701,
											"end": 17757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 17701,
											"end": 17757,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17737,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 17737,
											"end": 17755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 17737,
											"end": 17755,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 17737,
											"end": 17755,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 17737,
											"end": 17755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17701,
											"end": 17757,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 17701,
											"end": 17757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17787,
											"end": 17791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17779,
											"end": 17785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17775,
											"end": 17792,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 17767,
											"end": 17792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17767,
											"end": 17792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17847,
											"end": 17851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17841,
											"end": 17845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17837,
											"end": 17852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17829,
											"end": 17852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17829,
											"end": 17852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17548,
											"end": 17859,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17949,
											"end": 17960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 17989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17978,
											"end": 17981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17971,
											"end": 17990,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18023,
											"end": 18027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18018,
											"end": 18021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18014,
											"end": 18028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17865,
											"end": 18034,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18080,
											"end": 18083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18099,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 18117,
											"end": 18118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18099,
											"end": 18119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18099,
											"end": 18119,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18099,
											"end": 18119,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 18099,
											"end": 18119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18094,
											"end": 18119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18094,
											"end": 18119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 18151,
											"end": 18152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 18133,
											"end": 18153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18128,
											"end": 18153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18128,
											"end": 18153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18287,
											"end": 18288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18219,
											"end": 18285,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18215,
											"end": 18289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18212,
											"end": 18213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18209,
											"end": 18290,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18206,
											"end": 18313,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18206,
											"end": 18313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 18206,
											"end": 18313,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 18293,
											"end": 18311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18206,
											"end": 18313,
											"name": "tag",
											"source": 1,
											"value": "748"
										},
										{
											"begin": 18206,
											"end": 18313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18337,
											"end": 18338,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18334,
											"end": 18335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18330,
											"end": 18339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18339,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18323,
											"end": 18339,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18040,
											"end": 18345,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18391,
											"end": 18392,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18408,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 18426,
											"end": 18427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18408,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18408,
											"end": 18428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18408,
											"end": 18428,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 18408,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18403,
											"end": 18428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18403,
											"end": 18428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 18460,
											"end": 18461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18442,
											"end": 18462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18442,
											"end": 18462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18442,
											"end": 18462,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 18442,
											"end": 18462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18437,
											"end": 18462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18437,
											"end": 18462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18481,
											"end": 18482,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18471,
											"end": 18506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 18471,
											"end": 18506,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18486,
											"end": 18504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 18486,
											"end": 18504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 18486,
											"end": 18504,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18486,
											"end": 18504,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 18486,
											"end": 18504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18471,
											"end": 18506,
											"name": "tag",
											"source": 1,
											"value": "754"
										},
										{
											"begin": 18471,
											"end": 18506,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18528,
											"end": 18529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18525,
											"end": 18526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18521,
											"end": 18530,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18516,
											"end": 18530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18516,
											"end": 18530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18351,
											"end": 18536,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18582,
											"end": 18589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18605,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 18623,
											"end": 18624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18605,
											"end": 18625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18605,
											"end": 18625,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18605,
											"end": 18625,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 18605,
											"end": 18625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18600,
											"end": 18625,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18600,
											"end": 18625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 18657,
											"end": 18658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18639,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18639,
											"end": 18659,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18639,
											"end": 18659,
											"name": "tag",
											"source": 1,
											"value": "759"
										},
										{
											"begin": 18639,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18634,
											"end": 18659,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18634,
											"end": 18659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18827,
											"end": 18828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18759,
											"end": 18825,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18755,
											"end": 18829,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 18752,
											"end": 18753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18749,
											"end": 18830,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18737,
											"end": 18746,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18730,
											"end": 18747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18726,
											"end": 18831,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18723,
											"end": 18854,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18723,
											"end": 18854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 18723,
											"end": 18854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18834,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 18834,
											"end": 18852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 18834,
											"end": 18852,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18834,
											"end": 18852,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 18834,
											"end": 18852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18723,
											"end": 18854,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 18723,
											"end": 18854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18882,
											"end": 18883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18879,
											"end": 18880,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18875,
											"end": 18884,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 18864,
											"end": 18884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18864,
											"end": 18884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18542,
											"end": 18890,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18936,
											"end": 18940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18956,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 18974,
											"end": 18975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18956,
											"end": 18976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18956,
											"end": 18976,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18956,
											"end": 18976,
											"name": "tag",
											"source": 1,
											"value": "763"
										},
										{
											"begin": 18956,
											"end": 18976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18976,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18951,
											"end": 18976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18990,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 19008,
											"end": 19009,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18990,
											"end": 19010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 18990,
											"end": 19010,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 18990,
											"end": 19010,
											"name": "tag",
											"source": 1,
											"value": "764"
										},
										{
											"begin": 18990,
											"end": 19010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18985,
											"end": 19010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18985,
											"end": 19010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19029,
											"end": 19030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19026,
											"end": 19027,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19023,
											"end": 19031,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "tag",
											"source": 1,
											"value": "766"
										},
										{
											"begin": 19034,
											"end": 19052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 19020,
											"end": 19054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19079,
											"end": 19080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19076,
											"end": 19077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19072,
											"end": 19081,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19064,
											"end": 19081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19064,
											"end": 19081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18896,
											"end": 19087,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19130,
											"end": 19137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19159,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 19177,
											"end": 19182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19159,
											"end": 19183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 19159,
											"end": 19183,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19159,
											"end": 19183,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 19159,
											"end": 19183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19148,
											"end": 19183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19148,
											"end": 19183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19093,
											"end": 19189,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "tag",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19229,
											"end": 19236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19272,
											"end": 19277,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19265,
											"end": 19278,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19258,
											"end": 19279,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19247,
											"end": 19279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19247,
											"end": 19279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19195,
											"end": 19285,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 19353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19375,
											"end": 19380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19364,
											"end": 19380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19364,
											"end": 19380,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 19426,
											"end": 19431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19381,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 19381,
											"end": 19432,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19381,
											"end": 19432,
											"name": "tag",
											"source": 1,
											"value": "774"
										},
										{
											"begin": 19381,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19291,
											"end": 19438,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "tag",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19481,
											"end": 19488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19521,
											"end": 19563,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19514,
											"end": 19519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19510,
											"end": 19564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19499,
											"end": 19564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19499,
											"end": 19564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19444,
											"end": 19570,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19613,
											"end": 19620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19642,
											"end": 19647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19631,
											"end": 19647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19631,
											"end": 19647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19576,
											"end": 19653,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19723,
											"end": 19732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 19787,
											"end": 19792,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19756,
											"end": 19793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 19756,
											"end": 19793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19756,
											"end": 19793,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 19756,
											"end": 19793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19743,
											"end": 19793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19743,
											"end": 19793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19659,
											"end": 19799,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "tag",
											"source": 1,
											"value": "658"
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19871,
											"end": 19880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19904,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 19940,
											"end": 19945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19904,
											"end": 19946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 19904,
											"end": 19946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 19904,
											"end": 19946,
											"name": "tag",
											"source": 1,
											"value": "782"
										},
										{
											"begin": 19904,
											"end": 19946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19891,
											"end": 19946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19891,
											"end": 19946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19805,
											"end": 19952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20008,
											"end": 20017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 20072,
											"end": 20077,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20041,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 20041,
											"end": 20078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20041,
											"end": 20078,
											"name": "tag",
											"source": 1,
											"value": "784"
										},
										{
											"begin": 20041,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20028,
											"end": 20078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19958,
											"end": 20084,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "tag",
											"source": 1,
											"value": "785"
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20140,
											"end": 20149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20173,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 20191,
											"end": 20196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20173,
											"end": 20197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "769"
										},
										{
											"begin": 20173,
											"end": 20197,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20173,
											"end": 20197,
											"name": "tag",
											"source": 1,
											"value": "787"
										},
										{
											"begin": 20173,
											"end": 20197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20160,
											"end": 20197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20160,
											"end": 20197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20090,
											"end": 20203,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20209,
											"end": 20490,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 20209,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20292,
											"end": 20319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 20314,
											"end": 20318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20292,
											"end": 20319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "790"
										},
										{
											"begin": 20292,
											"end": 20319,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20292,
											"end": 20319,
											"name": "tag",
											"source": 1,
											"value": "789"
										},
										{
											"begin": 20292,
											"end": 20319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20284,
											"end": 20290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20280,
											"end": 20320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20422,
											"end": 20428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20410,
											"end": 20420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20407,
											"end": 20429,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20386,
											"end": 20404,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20374,
											"end": 20384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20371,
											"end": 20405,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20430,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 20365,
											"end": 20453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20365,
											"end": 20453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 20365,
											"end": 20453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20433,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 20433,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 20433,
											"end": 20451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20433,
											"end": 20451,
											"name": "tag",
											"source": 1,
											"value": "792"
										},
										{
											"begin": 20433,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20365,
											"end": 20453,
											"name": "tag",
											"source": 1,
											"value": "791"
										},
										{
											"begin": 20365,
											"end": 20453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20473,
											"end": 20483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20469,
											"end": 20471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20462,
											"end": 20484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20252,
											"end": 20490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20209,
											"end": 20490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20209,
											"end": 20490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20209,
											"end": 20490,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20535,
											"end": 20538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 20576,
											"end": 20581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "tag",
											"source": 1,
											"value": "794"
										},
										{
											"begin": 20558,
											"end": 20582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20549,
											"end": 20582,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20549,
											"end": 20582,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20604,
											"end": 20670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20597,
											"end": 20602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20594,
											"end": 20671,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 20591,
											"end": 20694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20591,
											"end": 20694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 20591,
											"end": 20694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "tag",
											"source": 1,
											"value": "796"
										},
										{
											"begin": 20674,
											"end": 20692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20591,
											"end": 20694,
											"name": "tag",
											"source": 1,
											"value": "795"
										},
										{
											"begin": 20591,
											"end": 20694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20721,
											"end": 20722,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20714,
											"end": 20719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20710,
											"end": 20723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20703,
											"end": 20723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20703,
											"end": 20723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20496,
											"end": 20729,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 20735,
											"end": 20915,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 20735,
											"end": 20915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20783,
											"end": 20860,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20773,
											"end": 20861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20880,
											"end": 20884,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 20877,
											"end": 20878,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20870,
											"end": 20885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20904,
											"end": 20908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20901,
											"end": 20902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20894,
											"end": 20909,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20921,
											"end": 21101,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 20921,
											"end": 21101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20969,
											"end": 21046,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20966,
											"end": 20967,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20959,
											"end": 21047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21066,
											"end": 21070,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 21063,
											"end": 21064,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21056,
											"end": 21071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21090,
											"end": 21094,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21087,
											"end": 21088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21080,
											"end": 21095,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21107,
											"end": 21287,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 21107,
											"end": 21287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21155,
											"end": 21232,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21152,
											"end": 21153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21145,
											"end": 21233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21252,
											"end": 21256,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 21249,
											"end": 21250,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21242,
											"end": 21257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21276,
											"end": 21280,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21273,
											"end": 21274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21266,
											"end": 21281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21293,
											"end": 21473,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 21293,
											"end": 21473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21341,
											"end": 21418,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21338,
											"end": 21339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21331,
											"end": 21419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21438,
											"end": 21442,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 21435,
											"end": 21436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21428,
											"end": 21443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21462,
											"end": 21466,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21459,
											"end": 21460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21452,
											"end": 21467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21479,
											"end": 21659,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 21479,
											"end": 21659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21527,
											"end": 21604,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21524,
											"end": 21525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21517,
											"end": 21605,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21624,
											"end": 21628,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 21621,
											"end": 21622,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21614,
											"end": 21629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21648,
											"end": 21652,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21645,
											"end": 21646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21638,
											"end": 21653,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21665,
											"end": 21845,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 21665,
											"end": 21845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21713,
											"end": 21790,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21710,
											"end": 21711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21703,
											"end": 21791,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21810,
											"end": 21814,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 21807,
											"end": 21808,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21800,
											"end": 21815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21834,
											"end": 21838,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21831,
											"end": 21832,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21824,
											"end": 21839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21851,
											"end": 21968,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 21851,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21960,
											"end": 21961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21957,
											"end": 21958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 21950,
											"end": 21962,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21974,
											"end": 22091,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 21974,
											"end": 22091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22083,
											"end": 22084,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22080,
											"end": 22081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22073,
											"end": 22085,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22097,
											"end": 22214,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 22097,
											"end": 22214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22206,
											"end": 22207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22203,
											"end": 22204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22196,
											"end": 22208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22220,
											"end": 22337,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 22220,
											"end": 22337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22329,
											"end": 22330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22326,
											"end": 22327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22319,
											"end": 22331,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "tag",
											"source": 1,
											"value": "790"
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22384,
											"end": 22390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22435,
											"end": 22437,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22431,
											"end": 22438,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 22426,
											"end": 22428,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22419,
											"end": 22424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22415,
											"end": 22429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22411,
											"end": 22439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22401,
											"end": 22439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22401,
											"end": 22439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22343,
											"end": 22445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22451,
											"end": 22631,
											"name": "tag",
											"source": 1,
											"value": "664"
										},
										{
											"begin": 22451,
											"end": 22631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22591,
											"end": 22623,
											"name": "PUSH",
											"source": 1,
											"value": "7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000"
										},
										{
											"begin": 22587,
											"end": 22588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22579,
											"end": 22585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22575,
											"end": 22589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22568,
											"end": 22624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22451,
											"end": 22631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22451,
											"end": 22631,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22637,
											"end": 22816,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 22637,
											"end": 22816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22777,
											"end": 22808,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B696E6720706572696F64206973206E6F742065787069726564000000"
										},
										{
											"begin": 22773,
											"end": 22774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22765,
											"end": 22771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22761,
											"end": 22775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22754,
											"end": 22809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22637,
											"end": 22816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22637,
											"end": 22816,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22822,
											"end": 22993,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 22822,
											"end": 22993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22962,
											"end": 22985,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E205472616E73666572204661696C65640000000000000000000000"
										},
										{
											"begin": 22958,
											"end": 22959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22950,
											"end": 22956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22946,
											"end": 22960,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22939,
											"end": 22986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22822,
											"end": 22993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22822,
											"end": 22993,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 22999,
											"end": 23224,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 22999,
											"end": 23224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23139,
											"end": 23173,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23135,
											"end": 23136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23127,
											"end": 23133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23123,
											"end": 23137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23116,
											"end": 23174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23208,
											"end": 23216,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23203,
											"end": 23205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23195,
											"end": 23201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23191,
											"end": 23206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23184,
											"end": 23217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22999,
											"end": 23224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22999,
											"end": 23224,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23230,
											"end": 23412,
											"name": "tag",
											"source": 1,
											"value": "684"
										},
										{
											"begin": 23230,
											"end": 23412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23370,
											"end": 23404,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 23366,
											"end": 23367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23358,
											"end": 23364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23354,
											"end": 23368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23347,
											"end": 23405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23230,
											"end": 23412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23230,
											"end": 23412,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23418,
											"end": 23588,
											"name": "tag",
											"source": 1,
											"value": "689"
										},
										{
											"begin": 23418,
											"end": 23588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23558,
											"end": 23580,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964205374616B6520416D6F756E74000000000000000000000000"
										},
										{
											"begin": 23554,
											"end": 23555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23546,
											"end": 23552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23542,
											"end": 23556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23535,
											"end": 23581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23418,
											"end": 23588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23418,
											"end": 23588,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23594,
											"end": 23717,
											"name": "tag",
											"source": 1,
											"value": "775"
										},
										{
											"begin": 23594,
											"end": 23717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23685,
											"end": 23686,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 23678,
											"end": 23683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23675,
											"end": 23687,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23665,
											"end": 23711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 23665,
											"end": 23711,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23691,
											"end": 23709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 23691,
											"end": 23709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 23691,
											"end": 23709,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23691,
											"end": 23709,
											"name": "tag",
											"source": 1,
											"value": "816"
										},
										{
											"begin": 23691,
											"end": 23709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23665,
											"end": 23711,
											"name": "tag",
											"source": 1,
											"value": "815"
										},
										{
											"begin": 23665,
											"end": 23711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23594,
											"end": 23717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23594,
											"end": 23717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23723,
											"end": 23845,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 23723,
											"end": 23845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23796,
											"end": 23820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 23814,
											"end": 23819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23796,
											"end": 23820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 23796,
											"end": 23820,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23796,
											"end": 23820,
											"name": "tag",
											"source": 1,
											"value": "818"
										},
										{
											"begin": 23796,
											"end": 23820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23789,
											"end": 23794,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23786,
											"end": 23821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 23776,
											"end": 23839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 23776,
											"end": 23839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23835,
											"end": 23836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23832,
											"end": 23833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23825,
											"end": 23837,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23776,
											"end": 23839,
											"name": "tag",
											"source": 1,
											"value": "819"
										},
										{
											"begin": 23776,
											"end": 23839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23723,
											"end": 23845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23723,
											"end": 23845,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23851,
											"end": 23967,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 23851,
											"end": 23967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23921,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 23936,
											"end": 23941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23921,
											"end": 23942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "770"
										},
										{
											"begin": 23921,
											"end": 23942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 23921,
											"end": 23942,
											"name": "tag",
											"source": 1,
											"value": "821"
										},
										{
											"begin": 23921,
											"end": 23942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23914,
											"end": 23919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23911,
											"end": 23943,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 23901,
											"end": 23961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 23901,
											"end": 23961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23957,
											"end": 23958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23954,
											"end": 23955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 23947,
											"end": 23959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 23901,
											"end": 23961,
											"name": "tag",
											"source": 1,
											"value": "822"
										},
										{
											"begin": 23901,
											"end": 23961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23851,
											"end": 23967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23851,
											"end": 23967,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 23973,
											"end": 24090,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 23973,
											"end": 24090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24064,
											"end": 24065,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 24057,
											"end": 24062,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24054,
											"end": 24066,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24044,
											"end": 24084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 24044,
											"end": 24084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24080,
											"end": 24081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24077,
											"end": 24078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24082,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24044,
											"end": 24084,
											"name": "tag",
											"source": 1,
											"value": "824"
										},
										{
											"begin": 24044,
											"end": 24084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23973,
											"end": 24090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23973,
											"end": 24090,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 24096,
											"end": 24218,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 24096,
											"end": 24218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24169,
											"end": 24193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 24187,
											"end": 24192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24169,
											"end": 24193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 24169,
											"end": 24193,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 24169,
											"end": 24193,
											"name": "tag",
											"source": 1,
											"value": "826"
										},
										{
											"begin": 24169,
											"end": 24193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24162,
											"end": 24167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24159,
											"end": 24194,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24149,
											"end": 24212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 24149,
											"end": 24212,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24208,
											"end": 24209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24205,
											"end": 24206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24198,
											"end": 24210,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24149,
											"end": 24212,
											"name": "tag",
											"source": 1,
											"value": "827"
										},
										{
											"begin": 24149,
											"end": 24212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24096,
											"end": 24218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24096,
											"end": 24218,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addTokenInContract(address)": "2b28ea29",
							"apr(uint8)": "9e196cad",
							"apr_old(uint8)": "066c6dbb",
							"createOldInvestorList(address[],uint256[],uint8[],uint256[])": "2b4afcc3",
							"createStake(uint256,uint8)": "e9917c07",
							"getDailyRewards(uint8)": "0ded03cd",
							"getExpiredDay(uint8)": "57d54aed",
							"getRewardsPerDay(uint8)": "e580d976",
							"getTotalRewards()": "e627f2db",
							"myToken()": "b8fcf937",
							"oldTimeStamp()": "980b4229",
							"owner()": "8da5cb5b",
							"remainingTokens()": "bf583903",
							"renounceOwnership()": "715018a6",
							"setApyPercentage(uint256,uint8)": "2e1e844e",
							"setOldApyPercentage(uint256,uint8)": "8cfcece7",
							"setOldTimeStamp(uint256)": "2f7d122f",
							"stakeOf(address,uint8)": "ad9159fd",
							"stakes(address,uint8)": "3027ffc0",
							"stakingPeriodOf(address,uint8)": "063b35bf",
							"tokenAmountInOldInvestorList()": "108b96c4",
							"totalRewards()": "0e15561a",
							"totalStake()": "8b0e9f3f",
							"transferOwnership(address)": "f2fde38b",
							"unStake(uint256,uint8)": "7e61badd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addTokenInContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apr_old\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_address\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_stake\",\"type\":\"uint256[]\"},{\"internalType\":\"enum Staking.StakingPeriod[]\",\"name\":\"_stakePeriod\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_timeStamp\",\"type\":\"uint256[]\"}],\"name\":\"createOldInvestorList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"createStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"getDailyRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"getExpiredDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"getRewardsPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oldTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"setApyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"setOldApyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timeStamp\",\"type\":\"uint256\"}],\"name\":\"setOldTimeStamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeholder\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"stakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"stakePeriod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeholder\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"stakingPeriodOf\",\"outputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAmountInOldInvestorList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/2stContract.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/2stContract.sol\":{\"keccak256\":\"0xfd9ff24801f9619895b60bee6e091b17a9f044d03b02cc613885b3871f0ee0ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e5a76bb745318163eb896880d7b66b45a9fa2e26fdd5066ea47e3283307e131\",\"dweb:/ipfs/QmVe1ef3oqXgmm1TDTc2iCU8WPqujJvnSyTZKjQH9qpW6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1401,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1403,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "totalRewards",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1405,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "oldTimeStamp",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1422,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "stakeholders",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1424,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "tokenAmountInOldInvestorList",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1432,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_enum(StakingPeriod)1411,t_struct(stake)1419_storage))"
							},
							{
								"astId": 1437,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "apr",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_enum(StakingPeriod)1411,t_uint256)"
							},
							{
								"astId": 1442,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "apr_old",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_enum(StakingPeriod)1411,t_uint256)"
							},
							{
								"astId": 1445,
								"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
								"label": "myToken",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IERC20)218"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)218": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(StakingPeriod)1411": {
								"encoding": "inplace",
								"label": "enum Staking.StakingPeriod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_enum(StakingPeriod)1411,t_struct(stake)1419_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(StakingPeriod)1411,t_struct(stake)1419_storage)"
							},
							"t_mapping(t_enum(StakingPeriod)1411,t_struct(stake)1419_storage)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)1411",
								"label": "mapping(enum Staking.StakingPeriod => struct Staking.stake)",
								"numberOfBytes": "32",
								"value": "t_struct(stake)1419_storage"
							},
							"t_mapping(t_enum(StakingPeriod)1411,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)1411",
								"label": "mapping(enum Staking.StakingPeriod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(stake)1419_storage": {
								"encoding": "inplace",
								"label": "struct Staking.stake",
								"members": [
									{
										"astId": 1413,
										"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1416,
										"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
										"label": "stakePeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_enum(StakingPeriod)1411"
									},
									{
										"astId": 1418,
										"contract": "contracts/StakingUrgent/2stContract.sol:Staking",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/StakingUrgent/2stContract.sol": {
				"ast": {
					"absolutePath": "contracts/StakingUrgent/2stContract.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"IERC20": [
							218
						],
						"Math": [
							1393
						],
						"Ownable": [
							132
						],
						"SafeMath": [
							529
						],
						"Staking": [
							2451
						]
					},
					"id": 2452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "259:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "283:90:0",
								"text": " This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "392:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "468:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "485:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "485:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "478:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "415:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "425:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "459:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:9:0"
									},
									"scope": 21,
									"src": "406:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "575:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "592:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "592:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "585:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "517:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "559:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "559:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:16:0"
									},
									"scope": 21,
									"src": "508:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2452,
							"src": "374:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "788:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1338:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1338:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "814:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "1327:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1368:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "1352:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1352:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1387:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1424:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1408:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1439:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1407:57:0"
									},
									"src": "1381:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1581:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1610:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1610:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1591:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1591:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1591:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1471:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1578:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:0"
									},
									"scope": 132,
									"src": "1567:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1739:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1749:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1749:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "1772:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1636:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "1727:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1736:2:0"
									},
									"src": "1718:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1911:30:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "1921:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1786:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1865:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1870:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1902:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1901:9:0"
									},
									"scope": 132,
									"src": "1856:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2059:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "2077:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2077:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2088:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2088:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2077:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2102:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2069:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1947:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2023:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2059:0:0"
									},
									"scope": 132,
									"src": "2014:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2540:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2569:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2569:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2569:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2550:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2550:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2550:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2150:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2530:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2530:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2495:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2540:0:0"
									},
									"scope": 132,
									"src": "2486:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2806:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2824:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2844:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2836:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2836:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2836:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2824:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2848:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2816:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2816:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2816:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2918:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2899:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2899:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "2899:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2593:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2796:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2796:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2745:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2771:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2763:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2762:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2806:0:0"
									},
									"scope": 132,
									"src": "2736:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3151:124:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3169:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3161:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3161:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3180:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3161:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3196:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3205:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3196:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3196:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3249:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3259:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3228:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3228:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3223:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2940:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3097:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3124:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3116:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3115:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3151:0:0"
									},
									"scope": 132,
									"src": "3088:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2452,
							"src": "1309:1968:0",
							"usedErrors": []
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3464:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "3489:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC20",
							"nameLocation": "3570:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3583:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 143,
									"name": "Transfer",
									"nameLocation": "3752:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3777:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3761:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3799:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3783:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3760:57:0"
									},
									"src": "3746:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "3824:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 152,
									"name": "Approval",
									"nameLocation": "3983:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4008:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3992:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4015:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4048:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4040:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4040:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3991:63:0"
									},
									"src": "3977:78:0"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4061:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4141:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:9:0"
									},
									"scope": 218,
									"src": "4132:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4193:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4279:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4297:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4289:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4288:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4329:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:9:0"
									},
									"scope": 218,
									"src": "4270:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4344:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4560:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4577:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4569:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4589:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4581:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4581:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4568:28:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4615:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4615:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4614:6:0"
									},
									"scope": 218,
									"src": "4551:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4627:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4905:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4923:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4915:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4914:32:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4969:9:0"
									},
									"scope": 218,
									"src": "4896:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "4985:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5641:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5657:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5649:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5648:33:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5700:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5700:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5699:6:0"
									},
									"scope": 218,
									"src": "5632:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fbc6d1cb",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "5720:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5731:33:0"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "5783:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 202,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5782:6:0"
									},
									"scope": 218,
									"src": "5711:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "5796:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6097:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6127:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6119:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6149:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6141:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6169:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6161:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6161:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6109:72:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "6200:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6200:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6199:6:0"
									},
									"scope": 218,
									"src": "6088:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2452,
							"src": "3560:2648:0",
							"usedErrors": []
						},
						{
							"id": 219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6397:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 220,
								"nodeType": "StructuredDocumentation",
								"src": "6575:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 529,
							"linearizedBaseContracts": [
								529
							],
							"name": "SafeMath",
							"nameLocation": "6780:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "7007:140:0",
										"statements": [
											{
												"id": 250,
												"nodeType": "UncheckedBlock",
												"src": "7017:124:0",
												"statements": [
													{
														"assignments": [
															233
														],
														"declarations": [
															{
																"constant": false,
																"id": 233,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7049:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 250,
																"src": "7041:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7041:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 237,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 234,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "7053:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 235,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "7057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7053:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7041:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 238,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "7076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 239,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "7080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 245,
														"nodeType": "IfStatement",
														"src": "7072:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7091:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7098:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7090:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 231,
															"id": 244,
															"nodeType": "Return",
															"src": "7083:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7122:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 247,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7128:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 248,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7121:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 231,
														"id": 249,
														"nodeType": "Return",
														"src": "7114:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "6795:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "6940:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "6947:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6966:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "6958:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6946:22:0"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "6992:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6992:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "6998:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6991:15:0"
									},
									"scope": 529,
									"src": "6931:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "7368:113:0",
										"statements": [
											{
												"id": 278,
												"nodeType": "UncheckedBlock",
												"src": "7378:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "7406:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 265,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "7410:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7406:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 271,
														"nodeType": "IfStatement",
														"src": "7402:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7421:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7428:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 269,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7420:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 263,
															"id": 270,
															"nodeType": "Return",
															"src": "7413:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7452:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 255,
																		"src": "7458:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 274,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "7462:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7458:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 276,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7451:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 263,
														"id": 277,
														"nodeType": "Return",
														"src": "7444:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "7153:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7301:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7316:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "7308:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7327:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "7319:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:22:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "7353:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "7359:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7352:15:0"
									},
									"scope": 529,
									"src": "7292:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "7705:417:0",
										"statements": [
											{
												"id": 320,
												"nodeType": "UncheckedBlock",
												"src": "7715:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "7973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7978:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7973:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 299,
														"nodeType": "IfStatement",
														"src": "7969:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7989:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 297,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7988:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 291,
															"id": 298,
															"nodeType": "Return",
															"src": "7981:16:0"
														}
													},
													{
														"assignments": [
															301
														],
														"declarations": [
															{
																"constant": false,
																"id": 301,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8019:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 320,
																"src": "8011:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 300,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8011:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 305,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 302,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "8023:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 303,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "8027:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8023:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8011:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 306,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8046:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 307,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "8050:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8046:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 309,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "8055:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8046:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 315,
														"nodeType": "IfStatement",
														"src": "8042:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8066:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8073:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 313,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8065:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 291,
															"id": 314,
															"nodeType": "Return",
															"src": "8058:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8097:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 317,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8103:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 318,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8096:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 291,
														"id": 319,
														"nodeType": "Return",
														"src": "8089:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "7487:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "7638:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7653:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7645:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:22:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7690:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "7696:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7689:15:0"
									},
									"scope": 529,
									"src": "7629:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "8347:114:0",
										"statements": [
											{
												"id": 348,
												"nodeType": "UncheckedBlock",
												"src": "8357:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 334,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "8385:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8390:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 341,
														"nodeType": "IfStatement",
														"src": "8381:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8401:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8408:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 339,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8400:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 333,
															"id": 340,
															"nodeType": "Return",
															"src": "8393:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8432:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 343,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "8438:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 344,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 327,
																		"src": "8442:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8438:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 346,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8431:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 333,
														"id": 347,
														"nodeType": "Return",
														"src": "8424:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "8128:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8280:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8295:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8306:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8298:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8286:22:0"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8332:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 329,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "8338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8331:15:0"
									},
									"scope": 529,
									"src": "8271:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "8696:114:0",
										"statements": [
											{
												"id": 376,
												"nodeType": "UncheckedBlock",
												"src": "8706:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "8734:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8739:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8734:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 369,
														"nodeType": "IfStatement",
														"src": "8730:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8750:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8757:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8749:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 361,
															"id": 368,
															"nodeType": "Return",
															"src": "8742:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8781:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "8787:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 372,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "8791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8787:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 374,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8780:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 361,
														"id": 375,
														"nodeType": "Return",
														"src": "8773:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "8467:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "8629:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8644:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "8636:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8655:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "8647:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8635:22:0"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "8681:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8681:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "8687:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8680:15:0"
									},
									"scope": 529,
									"src": "8620:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "9112:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 388,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "9129:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 389,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "9133:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9129:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 391,
												"nodeType": "Return",
												"src": "9122:12:0"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "8816:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "9054:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9066:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "9058:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9077:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "9069:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9057:22:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "9103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9102:9:0"
									},
									"scope": 529,
									"src": "9045:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "9479:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "9496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "9500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9496:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 406,
												"nodeType": "Return",
												"src": "9489:12:0"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "9147:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9421:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9433:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9425:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9444:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9436:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9424:22:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "9470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9469:9:0"
									},
									"scope": 529,
									"src": "9412:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "9822:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "9839:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 419,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "9843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9839:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 421,
												"nodeType": "Return",
												"src": "9832:12:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "9514:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "9768:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "9779:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9767:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "9813:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9812:9:0"
									},
									"scope": 529,
									"src": "9755:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "10207:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10224:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 434,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "10228:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10224:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "10217:12:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "9857:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10149:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10161:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "10153:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10172:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "10164:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10164:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10152:22:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "10198:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10198:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10197:9:0"
									},
									"scope": 529,
									"src": "10140:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "10756:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 448,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "10773:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 449,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "10777:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 447,
												"id": 451,
												"nodeType": "Return",
												"src": "10766:12:0"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "10242:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "10698:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10710:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "10702:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10721:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "10713:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10701:22:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "10747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10746:9:0"
									},
									"scope": 529,
									"src": "10689:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "11374:106:0",
										"statements": [
											{
												"id": 476,
												"nodeType": "UncheckedBlock",
												"src": "11384:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 466,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "11416:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 467,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "11421:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11416:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 469,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "11424:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 465,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11408:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11408:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 471,
														"nodeType": "ExpressionStatement",
														"src": "11408:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "11458:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 473,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "11462:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11458:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 464,
														"id": 475,
														"nodeType": "Return",
														"src": "11451:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "10791:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "11258:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11279:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "11271:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11298:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "11290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11323:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "11309:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11309:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11261:80:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "11365:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11364:9:0"
									},
									"scope": 529,
									"src": "11249:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "12089:105:0",
										"statements": [
											{
												"id": 501,
												"nodeType": "UncheckedBlock",
												"src": "12099:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 491,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "12131:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 494,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "12138:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 490,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12123:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12123:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 496,
														"nodeType": "ExpressionStatement",
														"src": "12123:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 497,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 481,
																"src": "12172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 498,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "12176:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12172:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 489,
														"id": 500,
														"nodeType": "Return",
														"src": "12165:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "11486:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11973:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11994:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "11986:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12013:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "12005:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12038:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "12024:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12024:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11976:80:0"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "12080:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12079:9:0"
									},
									"scope": 529,
									"src": "11964:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "12965:105:0",
										"statements": [
											{
												"id": 526,
												"nodeType": "UncheckedBlock",
												"src": "12975:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 516,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "13007:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13011:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13007:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 519,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "13014:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 515,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12999:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12999:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 521,
														"nodeType": "ExpressionStatement",
														"src": "12999:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 522,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "13048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 523,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "13052:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13048:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 514,
														"id": 525,
														"nodeType": "Return",
														"src": "13041:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "12200:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12849:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12870:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12862:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12889:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12881:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12914:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12900:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12900:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12852:80:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "12956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12955:9:0"
									},
									"scope": 529,
									"src": "12840:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2452,
							"src": "6772:6300:0",
							"usedErrors": []
						},
						{
							"id": 530,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13253:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 531,
								"nodeType": "StructuredDocumentation",
								"src": "13278:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1393,
							"linearizedBaseContracts": [
								1393
							],
							"name": "Math",
							"nameLocation": "13360:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 535,
									"members": [
										{
											"id": 532,
											"name": "Down",
											"nameLocation": "13395:4:0",
											"nodeType": "EnumValue",
											"src": "13395:4:0"
										},
										{
											"id": 533,
											"name": "Up",
											"nameLocation": "13437:2:0",
											"nodeType": "EnumValue",
											"src": "13437:2:0"
										},
										{
											"id": 534,
											"name": "Zero",
											"nameLocation": "13468:4:0",
											"nodeType": "EnumValue",
											"src": "13468:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "13376:8:0",
									"nodeType": "EnumDefinition",
									"src": "13371:122:0"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "13630:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 545,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "13647:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 546,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "13651:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13647:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 549,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "13659:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13647:13:0",
													"trueExpression": {
														"id": 548,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "13655:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 544,
												"id": 551,
												"nodeType": "Return",
												"src": "13640:20:0"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "13499:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "13572:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13584:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "13576:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13595:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "13587:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13575:22:0"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "13621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13620:9:0"
									},
									"scope": 1393,
									"src": "13563:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "13805:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 563,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "13822:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 564,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "13826:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13822:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 567,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "13834:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13822:13:0",
													"trueExpression": {
														"id": 566,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "13830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 562,
												"id": 569,
												"nodeType": "Return",
												"src": "13815:20:0"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "13673:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "13747:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13759:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "13751:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13770:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "13762:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13750:22:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "13796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13795:9:0"
									},
									"scope": 1393,
									"src": "13738:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "14026:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 581,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 574,
																	"src": "14081:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 582,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "14085:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14081:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 584,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14080:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 585,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "14091:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 586,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "14095:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14091:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 588,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14100:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "14090:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14080:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 580,
												"id": 592,
												"nodeType": "Return",
												"src": "14073:28:0"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "13848:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "13964:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13980:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "13972:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "13983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13971:22:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "14017:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14016:9:0"
									},
									"scope": 1393,
									"src": "13955:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "14378:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 604,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "14466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14471:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14466:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 608,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 597,
																			"src": "14480:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14484:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14480:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 611,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14479:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 612,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "14489:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14479:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14493:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "14479:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14466:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 603,
												"id": 617,
												"nodeType": "Return",
												"src": "14459:35:0"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "14114:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "14316:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14332:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14324:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14343:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14335:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14323:22:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "14369:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14369:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14368:9:0"
									},
									"scope": 1393,
									"src": "14307:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "14945:3797:0",
										"statements": [
											{
												"id": 739,
												"nodeType": "UncheckedBlock",
												"src": "14955:3781:0",
												"statements": [
													{
														"assignments": [
															632
														],
														"declarations": [
															{
																"constant": false,
																"id": 632,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "15284:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 739,
																"src": "15276:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15276:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 633,
														"nodeType": "VariableDeclarationStatement",
														"src": "15276:13:0"
													},
													{
														"assignments": [
															635
														],
														"declarations": [
															{
																"constant": false,
																"id": 635,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "15356:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 739,
																"src": "15348:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 634,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15348:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 636,
														"nodeType": "VariableDeclarationStatement",
														"src": "15348:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "15428:157:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "15446:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "15463:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15466:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15473:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15469:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15469:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "15456:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15456:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "15450:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15493:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "15506:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15509:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "15502:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15502:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "15493:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "15528:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "15545:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "15549:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15541:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15541:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "15560:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "15564:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "15557:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15557:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15537:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15537:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "15528:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "15493:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "15549:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "15564:5:0",
																"valueSize": 1
															},
															{
																"declaration": 635,
																"isOffset": false,
																"isSlot": false,
																"src": "15528:5:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "15463:1:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "15506:1:0",
																"valueSize": 1
															},
															{
																"declaration": 624,
																"isOffset": false,
																"isSlot": false,
																"src": "15466:1:0",
																"valueSize": 1
															},
															{
																"declaration": 624,
																"isOffset": false,
																"isSlot": false,
																"src": "15509:1:0",
																"valueSize": 1
															}
														],
														"id": 637,
														"nodeType": "InlineAssembly",
														"src": "15419:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 638,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "15666:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15675:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15666:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 646,
														"nodeType": "IfStatement",
														"src": "15662:75:0",
														"trueBody": {
															"id": 645,
															"nodeType": "Block",
															"src": "15678:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 641,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "15703:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 642,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "15711:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15703:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 630,
																	"id": 644,
																	"nodeType": "Return",
																	"src": "15696:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 648,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "15847:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 649,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "15861:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15847:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 647,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "15839:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15839:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 652,
														"nodeType": "ExpressionStatement",
														"src": "15839:28:0"
													},
													{
														"assignments": [
															654
														],
														"declarations": [
															{
																"constant": false,
																"id": 654,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "16131:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 739,
																"src": "16123:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 653,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16123:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 655,
														"nodeType": "VariableDeclarationStatement",
														"src": "16123:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "16163:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "16232:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "16252:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "16255:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "16258:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "16245:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16245:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "16232:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16352:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "16365:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "16375:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "16386:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "16372:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16372:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16361:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16361:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "16352:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16410:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "16423:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "16430:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16419:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16419:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "16410:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "16258:11:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "16386:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "16410:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "16423:5:0",
																"valueSize": 1
															},
															{
																"declaration": 635,
																"isOffset": false,
																"isSlot": false,
																"src": "16352:5:0",
																"valueSize": 1
															},
															{
																"declaration": 635,
																"isOffset": false,
																"isSlot": false,
																"src": "16365:5:0",
																"valueSize": 1
															},
															{
																"declaration": 654,
																"isOffset": false,
																"isSlot": false,
																"src": "16232:9:0",
																"valueSize": 1
															},
															{
																"declaration": 654,
																"isOffset": false,
																"isSlot": false,
																"src": "16375:9:0",
																"valueSize": 1
															},
															{
																"declaration": 654,
																"isOffset": false,
																"isSlot": false,
																"src": "16430:9:0",
																"valueSize": 1
															},
															{
																"declaration": 622,
																"isOffset": false,
																"isSlot": false,
																"src": "16252:1:0",
																"valueSize": 1
															},
															{
																"declaration": 624,
																"isOffset": false,
																"isSlot": false,
																"src": "16255:1:0",
																"valueSize": 1
															}
														],
														"id": 656,
														"nodeType": "InlineAssembly",
														"src": "16154:300:0"
													},
													{
														"assignments": [
															658
														],
														"declarations": [
															{
																"constant": false,
																"id": 658,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "16769:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 739,
																"src": "16761:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 657,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16761:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 666,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "16776:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "16791:12:0",
																			"subExpression": {
																				"id": 660,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "16792:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16806:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "16791:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 664,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16790:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16776:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16761:47:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "16831:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "16896:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "16915:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "16928:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "16911:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16911:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "16896:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17000:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "17013:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "17020:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "17009:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17009:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "17000:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17140:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "17160:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "17163:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "17156:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17156:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "17170:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "17152:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17152:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17177:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17148:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17148:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "17140:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "16896:11:0",
																"valueSize": 1
															},
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "16915:11:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "17000:5:0",
																"valueSize": 1
															},
															{
																"declaration": 632,
																"isOffset": false,
																"isSlot": false,
																"src": "17013:5:0",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "16928:4:0",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "17020:4:0",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "17140:4:0",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "17163:4:0",
																"valueSize": 1
															},
															{
																"declaration": 658,
																"isOffset": false,
																"isSlot": false,
																"src": "17170:4:0",
																"valueSize": 1
															}
														],
														"id": 667,
														"nodeType": "InlineAssembly",
														"src": "16822:371:0"
													},
													{
														"expression": {
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 668,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "17259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 669,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "17268:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 670,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "17276:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17268:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17259:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"nodeType": "ExpressionStatement",
														"src": "17259:21:0"
													},
													{
														"assignments": [
															675
														],
														"declarations": [
															{
																"constant": false,
																"id": 675,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "17606:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 739,
																"src": "17598:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 674,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17598:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 682,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17617:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 677,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "17621:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17617:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17616:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "17616:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17598:39:0"
													},
													{
														"expression": {
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 683,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "17854:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17865:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 685,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "17869:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 686,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "17883:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17869:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17865:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17854:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 690,
														"nodeType": "ExpressionStatement",
														"src": "17854:36:0"
													},
													{
														"expression": {
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 691,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "17923:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17934:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 693,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "17938:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 694,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "17952:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17938:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17934:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17923:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 698,
														"nodeType": "ExpressionStatement",
														"src": "17923:36:0"
													},
													{
														"expression": {
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 699,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "17993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18004:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 701,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "18008:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 702,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "18022:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18008:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18004:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17993:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 706,
														"nodeType": "ExpressionStatement",
														"src": "17993:36:0"
													},
													{
														"expression": {
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 707,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "18063:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18074:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 709,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "18078:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 710,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "18092:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18078:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18074:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18063:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 714,
														"nodeType": "ExpressionStatement",
														"src": "18063:36:0"
													},
													{
														"expression": {
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 715,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "18133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18144:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 717,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "18148:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 718,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "18162:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18148:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18144:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18133:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 722,
														"nodeType": "ExpressionStatement",
														"src": "18133:36:0"
													},
													{
														"expression": {
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 723,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "18204:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 725,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "18219:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 726,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "18233:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18219:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18215:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18204:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 730,
														"nodeType": "ExpressionStatement",
														"src": "18204:36:0"
													},
													{
														"expression": {
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 731,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "18674:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "18683:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 733,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "18691:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18683:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18674:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 736,
														"nodeType": "ExpressionStatement",
														"src": "18674:24:0"
													},
													{
														"expression": {
															"id": 737,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "18719:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 630,
														"id": 738,
														"nodeType": "Return",
														"src": "18712:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "14507:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "14826:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "14850:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "14842:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "14869:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "14861:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "14888:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "14880:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14832:73:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "14929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14928:16:0"
									},
									"scope": 1393,
									"src": "14817:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "19022:189:0",
										"statements": [
											{
												"assignments": [
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "19040:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "19032:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "19056:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 760,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "19059:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 761,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "19062:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															741,
															785
														],
														"referencedDeclaration": 741,
														"src": "19049:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19049:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19032:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$535",
															"typeString": "enum Math.Rounding"
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "19088:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$535",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 765,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "19100:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$535_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 533,
															"src": "19100:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$535",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "19088:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 769,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 744,
																	"src": "19122:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 770,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "19125:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 771,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "19128:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 768,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "19115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19115:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19143:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19115:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19088:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "19084:98:0",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "19146:36:0",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "19160:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19170:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19160:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "19160:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 782,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 757,
													"src": "19198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 755,
												"id": 783,
												"nodeType": "Return",
												"src": "19191:13:0"
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "18748:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "18883:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "18907:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "18899:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "18926:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "18918:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "18945:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "18937:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18975:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "18966:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$535",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "18966:8:0"
													},
													"referencedDeclaration": 535,
													"src": "18966:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$535",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18889:100:0"
									},
									"returnParameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "19013:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19012:9:0"
									},
									"scope": 1393,
									"src": "18874:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "19487:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 793,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "19501:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19501:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "19497:45:0",
												"trueBody": {
													"id": 798,
													"nodeType": "Block",
													"src": "19509:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19530:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 792,
															"id": 797,
															"nodeType": "Return",
															"src": "19523:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20229:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "20221:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20238:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 804,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 788,
																			"src": "20249:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 803,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1065,
																			1101
																		],
																		"referencedDeclaration": 1065,
																		"src": "20244:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20244:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20255:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20244:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 808,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20243:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20238:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20221:36:0"
											},
											{
												"id": 895,
												"nodeType": "UncheckedBlock",
												"src": "20658:408:0",
												"statements": [
													{
														"expression": {
															"id": 820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 811,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20682:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 812,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20692:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 813,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20701:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 814,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20705:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20701:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20692:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 817,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20691:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20691:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20682:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 821,
														"nodeType": "ExpressionStatement",
														"src": "20682:35:0"
													},
													{
														"expression": {
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 822,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20731:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 823,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20741:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 824,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20750:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 825,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20754:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20750:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20741:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 828,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20740:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20765:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20740:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20731:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 832,
														"nodeType": "ExpressionStatement",
														"src": "20731:35:0"
													},
													{
														"expression": {
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 833,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20780:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 834,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20790:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 835,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20799:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 836,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20803:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20799:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20790:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20789:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20814:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20789:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20780:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 843,
														"nodeType": "ExpressionStatement",
														"src": "20780:35:0"
													},
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 844,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20829:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 845,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20839:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 846,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20848:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 847,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20852:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20848:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20839:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 850,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20838:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20863:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20838:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20829:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "20829:35:0"
													},
													{
														"expression": {
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 855,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20878:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 856,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20888:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 859,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 857,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20897:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 858,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20901:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20897:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20888:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 861,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20887:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20912:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20887:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20878:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 865,
														"nodeType": "ExpressionStatement",
														"src": "20878:35:0"
													},
													{
														"expression": {
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 866,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20927:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 867,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20937:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 868,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20946:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 869,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20950:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20946:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20937:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 872,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20936:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20961:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20936:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20927:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 876,
														"nodeType": "ExpressionStatement",
														"src": "20927:35:0"
													},
													{
														"expression": {
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 877,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "20976:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 878,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 801,
																				"src": "20986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 879,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 788,
																					"src": "20995:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 880,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 801,
																					"src": "20999:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20995:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20986:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 883,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20985:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21010:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20985:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20976:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 887,
														"nodeType": "ExpressionStatement",
														"src": "20976:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 889,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "21036:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 890,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "21044:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 891,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "21048:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21044:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 888,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "21032:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21032:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 792,
														"id": 894,
														"nodeType": "Return",
														"src": "21025:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "19217:208:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19439:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19452:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "19444:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19443:11:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "19478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19477:9:0"
									},
									"scope": 1393,
									"src": "19430:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "21248:161:0",
										"statements": [
											{
												"id": 931,
												"nodeType": "UncheckedBlock",
												"src": "21258:145:0",
												"statements": [
													{
														"assignments": [
															909
														],
														"declarations": [
															{
																"constant": false,
																"id": 909,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21290:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 931,
																"src": "21282:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 908,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21282:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 913,
														"initialValue": {
															"arguments": [
																{
																	"id": 911,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "21304:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 910,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	897,
																	933
																],
																"referencedDeclaration": 897,
																"src": "21299:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21299:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21282:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "21327:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$535",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 915,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "21337:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 916,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "21349:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$535_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 917,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 533,
																					"src": "21349:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "21337:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 919,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 909,
																						"src": "21364:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 920,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 909,
																						"src": "21373:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21364:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 922,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 900,
																					"src": "21382:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21364:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21337:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21390:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21337:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21386:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 928,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21336:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21327:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 907,
														"id": 930,
														"nodeType": "Return",
														"src": "21320:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "21078:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "21181:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "21186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21206:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "21197:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$535",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 902,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 901,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "21197:8:0"
													},
													"referencedDeclaration": 535,
													"src": "21197:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$535",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21185:30:0"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "21239:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21238:9:0"
									},
									"scope": 1393,
									"src": "21172:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "21594:922:0",
										"statements": [
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21612:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "21604:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"hexValue": "30",
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21621:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21604:18:0"
											},
											{
												"id": 1061,
												"nodeType": "UncheckedBlock",
												"src": "21632:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "21660:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21669:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "21660:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21675:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21660:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "21656:99:0",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "21678:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "21696:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21706:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21696:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "21696:13:0"
																},
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "21727:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21737:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21727:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "21727:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "21772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21781:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21772:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21786:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21772:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 974,
														"nodeType": "IfStatement",
														"src": "21768:96:0",
														"trueBody": {
															"id": 973,
															"nodeType": "Block",
															"src": "21789:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "21807:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21817:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21807:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 968,
																	"nodeType": "ExpressionStatement",
																	"src": "21807:12:0"
																},
																{
																	"expression": {
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 969,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "21837:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21847:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21837:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 972,
																	"nodeType": "ExpressionStatement",
																	"src": "21837:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "21881:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21890:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21881:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21895:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21881:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 989,
														"nodeType": "IfStatement",
														"src": "21877:96:0",
														"trueBody": {
															"id": 988,
															"nodeType": "Block",
															"src": "21898:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 980,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "21916:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21926:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21916:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 983,
																	"nodeType": "ExpressionStatement",
																	"src": "21916:12:0"
																},
																{
																	"expression": {
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 984,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "21946:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21956:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21946:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 987,
																	"nodeType": "ExpressionStatement",
																	"src": "21946:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "21990:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21999:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21990:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22004:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21990:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1004,
														"nodeType": "IfStatement",
														"src": "21986:96:0",
														"trueBody": {
															"id": 1003,
															"nodeType": "Block",
															"src": "22007:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 995,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "22025:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22035:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22025:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 998,
																	"nodeType": "ExpressionStatement",
																	"src": "22025:12:0"
																},
																{
																	"expression": {
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 999,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "22055:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22065:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22055:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1002,
																	"nodeType": "ExpressionStatement",
																	"src": "22055:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "22099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22108:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22099:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22112:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22099:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1019,
														"nodeType": "IfStatement",
														"src": "22095:93:0",
														"trueBody": {
															"id": 1018,
															"nodeType": "Block",
															"src": "22115:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "22133:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22143:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22133:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "22133:11:0"
																},
																{
																	"expression": {
																		"id": 1016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1014,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "22162:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22172:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22162:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1017,
																	"nodeType": "ExpressionStatement",
																	"src": "22162:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1020,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "22205:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22214:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22205:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22205:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1034,
														"nodeType": "IfStatement",
														"src": "22201:93:0",
														"trueBody": {
															"id": 1033,
															"nodeType": "Block",
															"src": "22221:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1025,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "22239:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22249:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22239:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1028,
																	"nodeType": "ExpressionStatement",
																	"src": "22239:11:0"
																},
																{
																	"expression": {
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1029,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "22268:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22278:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22268:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1032,
																	"nodeType": "ExpressionStatement",
																	"src": "22268:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1035,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "22311:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "22311:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22324:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22311:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1049,
														"nodeType": "IfStatement",
														"src": "22307:93:0",
														"trueBody": {
															"id": 1048,
															"nodeType": "Block",
															"src": "22327:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1040,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "22345:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22355:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22345:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1043,
																	"nodeType": "ExpressionStatement",
																	"src": "22345:11:0"
																},
																{
																	"expression": {
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1044,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "22374:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22384:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22374:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1047,
																	"nodeType": "ExpressionStatement",
																	"src": "22374:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1050,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "22417:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22426:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22417:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1060,
														"nodeType": "IfStatement",
														"src": "22413:64:0",
														"trueBody": {
															"id": 1059,
															"nodeType": "Block",
															"src": "22433:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1055,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "22451:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22461:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22451:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1058,
																	"nodeType": "ExpressionStatement",
																	"src": "22451:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1062,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "22503:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 940,
												"id": 1063,
												"nodeType": "Return",
												"src": "22496:13:0"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "21415:113:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "21542:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21555:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "21547:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21546:15:0"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "21585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21584:9:0"
									},
									"scope": 1393,
									"src": "21533:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "22749:165:0",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "22759:149:0",
												"statements": [
													{
														"assignments": [
															1077
														],
														"declarations": [
															{
																"constant": false,
																"id": 1077,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22791:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1099,
																"src": "22783:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1076,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22783:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1081,
														"initialValue": {
															"arguments": [
																{
																	"id": 1079,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "22805:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1078,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1065,
																	1101
																],
																"referencedDeclaration": 1065,
																"src": "22800:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22800:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22783:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1082,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "22832:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$535",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1083,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "22842:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1084,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "22854:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$535_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 533,
																					"src": "22854:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "22842:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1091,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1089,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1087,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22869:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1088,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1077,
																						"src": "22874:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22869:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1090,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1068,
																					"src": "22883:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22869:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22842:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22895:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22842:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22891:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22841:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22832:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1075,
														"id": 1098,
														"nodeType": "Return",
														"src": "22825:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "22522:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "22678:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "22683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22707:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "22698:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$535",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1069,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "22698:8:0"
													},
													"referencedDeclaration": 535,
													"src": "22698:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$535",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22682:34:0"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "22740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22739:9:0"
									},
									"scope": 1393,
									"src": "22669:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "23101:828:0",
										"statements": [
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23119:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1229,
														"src": "23111:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1112,
												"initialValue": {
													"hexValue": "30",
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23128:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23111:18:0"
											},
											{
												"id": 1226,
												"nodeType": "UncheckedBlock",
												"src": "23139:761:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23167:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23176:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23180:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "23176:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "23167:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1129,
														"nodeType": "IfStatement",
														"src": "23163:99:0",
														"trueBody": {
															"id": 1128,
															"nodeType": "Block",
															"src": "23184:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23202:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23211:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23215:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "23211:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "23202:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1123,
																	"nodeType": "ExpressionStatement",
																	"src": "23202:15:0"
																},
																{
																	"expression": {
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23235:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23245:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "23235:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1127,
																	"nodeType": "ExpressionStatement",
																	"src": "23235:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23279:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23288:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23292:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "23288:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "23279:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "23275:99:0",
														"trueBody": {
															"id": 1145,
															"nodeType": "Block",
															"src": "23296:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1135,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23314:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23323:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23327:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "23323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "23314:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "23314:15:0"
																},
																{
																	"expression": {
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1141,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23347:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23357:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "23347:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1144,
																	"nodeType": "ExpressionStatement",
																	"src": "23347:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1147,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23391:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23400:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23404:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "23391:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1163,
														"nodeType": "IfStatement",
														"src": "23387:99:0",
														"trueBody": {
															"id": 1162,
															"nodeType": "Block",
															"src": "23408:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23426:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23435:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1154,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23439:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "23435:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "23426:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1157,
																	"nodeType": "ExpressionStatement",
																	"src": "23426:15:0"
																},
																{
																	"expression": {
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1158,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23459:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23469:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23459:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1161,
																	"nodeType": "ExpressionStatement",
																	"src": "23459:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1164,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23503:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23512:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23516:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23512:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "23503:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1180,
														"nodeType": "IfStatement",
														"src": "23499:96:0",
														"trueBody": {
															"id": 1179,
															"nodeType": "Block",
															"src": "23519:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1169,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23537:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23546:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23550:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "23546:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "23537:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "23537:14:0"
																},
																{
																	"expression": {
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1175,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23569:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23579:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23569:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1178,
																	"nodeType": "ExpressionStatement",
																	"src": "23569:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23612:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23621:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23625:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "23621:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "23612:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1197,
														"nodeType": "IfStatement",
														"src": "23608:96:0",
														"trueBody": {
															"id": 1196,
															"nodeType": "Block",
															"src": "23628:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1186,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23646:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23655:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23659:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "23655:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "23646:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1191,
																	"nodeType": "ExpressionStatement",
																	"src": "23646:14:0"
																},
																{
																	"expression": {
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1192,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23678:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23688:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23678:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1195,
																	"nodeType": "ExpressionStatement",
																	"src": "23678:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1198,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23721:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23730:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23734:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23730:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "23721:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1214,
														"nodeType": "IfStatement",
														"src": "23717:96:0",
														"trueBody": {
															"id": 1213,
															"nodeType": "Block",
															"src": "23737:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23755:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23764:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23768:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "23764:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "23755:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1208,
																	"nodeType": "ExpressionStatement",
																	"src": "23755:14:0"
																},
																{
																	"expression": {
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1209,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23787:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23797:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23787:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1212,
																	"nodeType": "ExpressionStatement",
																	"src": "23787:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1215,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "23830:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23839:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23843:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23839:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "23830:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1225,
														"nodeType": "IfStatement",
														"src": "23826:64:0",
														"trueBody": {
															"id": 1224,
															"nodeType": "Block",
															"src": "23846:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1220,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "23864:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23874:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23864:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1223,
																	"nodeType": "ExpressionStatement",
																	"src": "23864:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1227,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "23916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1108,
												"id": 1228,
												"nodeType": "Return",
												"src": "23909:13:0"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "22920:114:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "23048:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23062:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "23054:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23053:15:0"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "23092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23091:9:0"
									},
									"scope": 1393,
									"src": "23039:890:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "24164:165:0",
										"statements": [
											{
												"id": 1264,
												"nodeType": "UncheckedBlock",
												"src": "24174:149:0",
												"statements": [
													{
														"assignments": [
															1242
														],
														"declarations": [
															{
																"constant": false,
																"id": 1242,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24206:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1264,
																"src": "24198:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1241,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24198:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1246,
														"initialValue": {
															"arguments": [
																{
																	"id": 1244,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "24221:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1243,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1230,
																	1266
																],
																"referencedDeclaration": 1230,
																"src": "24215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24215:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24198:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1247,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "24248:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$535",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1248,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1236,
																					"src": "24258:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1249,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "24270:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$535_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 533,
																					"src": "24270:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "24258:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1256,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1254,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1252,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24285:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1253,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1242,
																						"src": "24289:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24285:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1255,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "24298:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24285:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "24258:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24310:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "24258:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24306:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24257:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "24248:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1240,
														"id": 1263,
														"nodeType": "Return",
														"src": "24241:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1231,
										"nodeType": "StructuredDocumentation",
										"src": "23935:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24092:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24106:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "24098:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24122:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "24113:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$535",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1234,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "24113:8:0"
													},
													"referencedDeclaration": 535,
													"src": "24113:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$535",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24097:34:0"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "24155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24154:9:0"
									},
									"scope": 1393,
									"src": "24083:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "24643:600:0",
										"statements": [
											{
												"assignments": [
													1275
												],
												"declarations": [
													{
														"constant": false,
														"id": 1275,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24661:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "24653:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1277,
												"initialValue": {
													"hexValue": "30",
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24670:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24653:18:0"
											},
											{
												"id": 1349,
												"nodeType": "UncheckedBlock",
												"src": "24681:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "24709:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24718:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "24709:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24724:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24709:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1292,
														"nodeType": "IfStatement",
														"src": "24705:98:0",
														"trueBody": {
															"id": 1291,
															"nodeType": "Block",
															"src": "24727:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "24745:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24755:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "24745:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1286,
																	"nodeType": "ExpressionStatement",
																	"src": "24745:13:0"
																},
																{
																	"expression": {
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "24776:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24786:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24776:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1290,
																	"nodeType": "ExpressionStatement",
																	"src": "24776:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "24820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24829:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24820:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24834:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24820:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "24816:95:0",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "24837:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1298,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "24855:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24865:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24855:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "24855:12:0"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "24885:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24895:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24885:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "24885:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1308,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "24928:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24937:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24928:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24928:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1322,
														"nodeType": "IfStatement",
														"src": "24924:95:0",
														"trueBody": {
															"id": 1321,
															"nodeType": "Block",
															"src": "24945:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "24963:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24973:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24963:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1316,
																	"nodeType": "ExpressionStatement",
																	"src": "24963:12:0"
																},
																{
																	"expression": {
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1317,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "24993:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25003:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24993:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1320,
																	"nodeType": "ExpressionStatement",
																	"src": "24993:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "25036:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25045:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "25036:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25050:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25036:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1337,
														"nodeType": "IfStatement",
														"src": "25032:95:0",
														"trueBody": {
															"id": 1336,
															"nodeType": "Block",
															"src": "25053:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1328,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1269,
																			"src": "25071:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25081:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25071:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1331,
																	"nodeType": "ExpressionStatement",
																	"src": "25071:12:0"
																},
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1332,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "25101:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25111:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "25101:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "25101:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1338,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "25144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25153:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25144:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1348,
														"nodeType": "IfStatement",
														"src": "25140:64:0",
														"trueBody": {
															"id": 1347,
															"nodeType": "Block",
															"src": "25160:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1343,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "25178:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25188:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25178:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1346,
																	"nodeType": "ExpressionStatement",
																	"src": "25178:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1350,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1275,
													"src": "25230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1273,
												"id": 1351,
												"nodeType": "Return",
												"src": "25223:13:0"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "24335:240:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "24589:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24604:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "24596:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24595:15:0"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "24634:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24633:9:0"
									},
									"scope": 1393,
									"src": "24580:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1391,
										"nodeType": "Block",
										"src": "25479:174:0",
										"statements": [
											{
												"id": 1390,
												"nodeType": "UncheckedBlock",
												"src": "25489:158:0",
												"statements": [
													{
														"assignments": [
															1365
														],
														"declarations": [
															{
																"constant": false,
																"id": 1365,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25521:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1390,
																"src": "25513:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1364,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25513:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1369,
														"initialValue": {
															"arguments": [
																{
																	"id": 1367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "25537:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1366,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1353,
																	1392
																],
																"referencedDeclaration": 1353,
																"src": "25530:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25530:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25513:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1370,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "25564:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$535",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1371,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "25574:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1372,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 535,
																						"src": "25586:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$535_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1373,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 533,
																					"src": "25586:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$535",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "25574:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1382,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1380,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1375,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25601:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1378,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1376,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1365,
																									"src": "25607:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1377,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "25617:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "25607:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1379,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "25606:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25601:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1381,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1356,
																					"src": "25622:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25601:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25574:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25634:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25574:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25630:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25573:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25564:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1363,
														"id": 1389,
														"nodeType": "Return",
														"src": "25557:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "25249:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "25406:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25421:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "25413:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "25428:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$535",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1357,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 535,
														"src": "25428:8:0"
													},
													"referencedDeclaration": 535,
													"src": "25428:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$535",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25412:34:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "25470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25469:9:0"
									},
									"scope": 1393,
									"src": "25397:256:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2452,
							"src": "13352:12303:0",
							"usedErrors": []
						},
						{
							"id": 1394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25678:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1395,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "25724:7:0"
									},
									"id": 1396,
									"nodeType": "InheritanceSpecifier",
									"src": "25724:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2451,
							"linearizedBaseContracts": [
								2451,
								132,
								21
							],
							"name": "Staking",
							"nameLocation": "25713:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1399,
									"libraryName": {
										"id": 1397,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 529,
										"src": "25744:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "25738:27:0",
									"typeName": {
										"id": 1398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25757:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 1401,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "25785:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "25770:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1400,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25770:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1403,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "25816:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "25801:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25801:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "980b4229",
									"id": 1405,
									"mutability": "mutable",
									"name": "oldTimeStamp",
									"nameLocation": "25846:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "25834:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1404,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "25834:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.StakingPeriod",
									"id": 1411,
									"members": [
										{
											"id": 1406,
											"name": "ONE_MONTH",
											"nameLocation": "25886:9:0",
											"nodeType": "EnumValue",
											"src": "25886:9:0"
										},
										{
											"id": 1407,
											"name": "TWO_MONTH",
											"nameLocation": "25897:9:0",
											"nodeType": "EnumValue",
											"src": "25897:9:0"
										},
										{
											"id": 1408,
											"name": "THREE_MONTH",
											"nameLocation": "25908:11:0",
											"nodeType": "EnumValue",
											"src": "25908:11:0"
										},
										{
											"id": 1409,
											"name": "SIX_MONTH",
											"nameLocation": "25921:9:0",
											"nodeType": "EnumValue",
											"src": "25921:9:0"
										},
										{
											"id": 1410,
											"name": "ONE_YEAR",
											"nameLocation": "25932:8:0",
											"nodeType": "EnumValue",
											"src": "25932:8:0"
										}
									],
									"name": "StakingPeriod",
									"nameLocation": "25871:13:0",
									"nodeType": "EnumDefinition",
									"src": "25866:76:0"
								},
								{
									"canonicalName": "Staking.stake",
									"id": 1419,
									"members": [
										{
											"constant": false,
											"id": 1413,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "25980:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1419,
											"src": "25972:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1412,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25972:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1416,
											"mutability": "mutable",
											"name": "stakePeriod",
											"nameLocation": "26010:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1419,
											"src": "25996:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$1411",
												"typeString": "enum Staking.StakingPeriod"
											},
											"typeName": {
												"id": 1415,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1414,
													"name": "StakingPeriod",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1411,
													"src": "25996:13:0"
												},
												"referencedDeclaration": 1411,
												"src": "25996:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1418,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "26036:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1419,
											"src": "26031:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1417,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "26031:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stake",
									"nameLocation": "25956:5:0",
									"nodeType": "StructDefinition",
									"scope": 2451,
									"src": "25949:103:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1422,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "26078:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26059:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1420,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26059:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1421,
										"nodeType": "ArrayTypeName",
										"src": "26059:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "108b96c4",
									"id": 1424,
									"mutability": "mutable",
									"name": "tokenAmountInOldInvestorList",
									"nameLocation": "26111:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26096:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1423,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "26096:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3027ffc0",
									"id": 1432,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "26206:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26147:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
										"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))"
									},
									"typeName": {
										"id": 1431,
										"keyType": {
											"id": 1425,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "26155:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "26147:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
											"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))"
										},
										"valueType": {
											"id": 1430,
											"keyType": {
												"id": 1427,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1426,
													"name": "StakingPeriod",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1411,
													"src": "26174:13:0"
												},
												"referencedDeclaration": 1411,
												"src": "26174:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												}
											},
											"nodeType": "Mapping",
											"src": "26166:31:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
												"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake)"
											},
											"valueType": {
												"id": 1429,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1428,
													"name": "stake",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1419,
													"src": "26191:5:0"
												},
												"referencedDeclaration": 1419,
												"src": "26191:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
													"typeString": "struct Staking.stake"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e196cad",
									"id": 1437,
									"mutability": "mutable",
									"name": "apr",
									"nameLocation": "26256:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26218:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
										"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 1436,
										"keyType": {
											"id": 1434,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1433,
												"name": "StakingPeriod",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1411,
												"src": "26226:13:0"
											},
											"referencedDeclaration": 1411,
											"src": "26226:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$1411",
												"typeString": "enum Staking.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "26218:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
											"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
										},
										"valueType": {
											"id": 1435,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "26243:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "066c6dbb",
									"id": 1442,
									"mutability": "mutable",
									"name": "apr_old",
									"nameLocation": "26303:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26265:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
										"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 1441,
										"keyType": {
											"id": 1439,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1438,
												"name": "StakingPeriod",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1411,
												"src": "26273:13:0"
											},
											"referencedDeclaration": 1411,
											"src": "26273:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$1411",
												"typeString": "enum Staking.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "26265:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
											"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
										},
										"valueType": {
											"id": 1440,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "26290:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 1445,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "26332:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2451,
									"src": "26318:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$218",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1444,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1443,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 218,
											"src": "26318:6:0"
										},
										"referencedDeclaration": 218,
										"src": "26318:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$218",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1456,
									"name": "TokenStaked",
									"nameLocation": "26353:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "26381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "26365:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26393:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "26388:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "26401:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1450,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "26401:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "26401:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26426:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "26421:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26364:72:0"
									},
									"src": "26347:90:0"
								},
								{
									"anonymous": false,
									"id": 1467,
									"name": "TokenUnstaked",
									"nameLocation": "26448:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "26478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "26462:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26490:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "26485:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26485:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26512:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "26498:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1461,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "26498:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "26498:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26523:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "26518:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26518:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26461:72:0"
									},
									"src": "26442:92:0"
								},
								{
									"anonymous": false,
									"id": 1478,
									"name": "RewardsTransferred",
									"nameLocation": "26545:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "26580:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "26564:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26590:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "26585:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26612:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "26598:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1472,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "26598:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "26598:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26623:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "26618:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26563:70:0"
									},
									"src": "26539:95:0"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "26675:631:0",
										"statements": [
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1483,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "26686:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$218",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1485,
																"name": "_myToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "26703:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1484,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "26696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$218_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26696:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$218",
															"typeString": "contract IERC20"
														}
													},
													"src": "26686:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$218",
														"typeString": "contract IERC20"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "26686:26:0"
											},
											{
												"expression": {
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1489,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "26722:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"expression": {
																"id": 1490,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "26726:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "ONE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1406,
															"src": "26726:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26722:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333231",
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26753:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_321_by_1",
															"typeString": "int_const 321"
														},
														"value": "321"
													},
													"src": "26722:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "26722:34:0"
											},
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1496,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "26777:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1499,
														"indexExpression": {
															"expression": {
																"id": 1497,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "26781:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "TWO_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1407,
															"src": "26781:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26777:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "373735",
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26808:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_775_by_1",
															"typeString": "int_const 775"
														},
														"value": "775"
													},
													"src": "26777:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "26777:34:0"
											},
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1503,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "26832:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1506,
														"indexExpression": {
															"expression": {
																"id": 1504,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "26836:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "THREE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "26836:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26832:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32323137",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26865:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2217_by_1",
															"typeString": "int_const 2217"
														},
														"value": "2217"
													},
													"src": "26832:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "26832:37:0"
											},
											{
												"expression": {
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1510,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "26891:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1513,
														"indexExpression": {
															"expression": {
																"id": 1511,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "26895:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "SIX_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1409,
															"src": "26895:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26891:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34313135",
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26922:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4115_by_1",
															"typeString": "int_const 4115"
														},
														"value": "4115"
													},
													"src": "26891:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1516,
												"nodeType": "ExpressionStatement",
												"src": "26891:35:0"
											},
											{
												"expression": {
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1517,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "26948:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1520,
														"indexExpression": {
															"expression": {
																"id": 1518,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "26952:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "ONE_YEAR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1410,
															"src": "26952:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26948:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36353132",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26978:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6512_by_1",
															"typeString": "int_const 6512"
														},
														"value": "6512"
													},
													"src": "26948:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "26948:34:0"
											},
											{
												"expression": {
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1524,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "27006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1527,
														"indexExpression": {
															"expression": {
																"id": 1525,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "27014:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "ONE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1406,
															"src": "27014:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27006:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343134",
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27041:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_414_by_1",
															"typeString": "int_const 414"
														},
														"value": "414"
													},
													"src": "27006:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "27006:38:0"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1531,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "27065:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1534,
														"indexExpression": {
															"expression": {
																"id": 1532,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "27073:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "TWO_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1407,
															"src": "27073:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27065:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393132",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27100:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_912_by_1",
															"typeString": "int_const 912"
														},
														"value": "912"
													},
													"src": "27065:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "27065:38:0"
											},
											{
												"expression": {
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1538,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "27124:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1541,
														"indexExpression": {
															"expression": {
																"id": 1539,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "27132:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "THREE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1408,
															"src": "27132:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27124:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34383137",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27161:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4817_by_1",
															"typeString": "int_const 4817"
														},
														"value": "4817"
													},
													"src": "27124:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "27124:41:0"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1545,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "27187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1548,
														"indexExpression": {
															"expression": {
																"id": 1546,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "27195:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "SIX_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1409,
															"src": "27195:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27187:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37323133",
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27222:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7213_by_1",
															"typeString": "int_const 7213"
														},
														"value": "7213"
													},
													"src": "27187:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "27187:39:0"
											},
											{
												"expression": {
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1552,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "27248:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1555,
														"indexExpression": {
															"expression": {
																"id": 1553,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "27256:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "ONE_YEAR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1410,
															"src": "27256:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "27248:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138303030",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27282:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18000_by_1",
															"typeString": "int_const 18000"
														},
														"value": "18000"
													},
													"src": "27248:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "27248:39:0"
											}
										]
									},
									"id": 1560,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "_myToken",
												"nameLocation": "26661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "26653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26652:18:0"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26675:0:0"
									},
									"scope": 2451,
									"src": "26641:665:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "27423:804:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1569,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "27441:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27450:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27441:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27453:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															},
															"value": "stake value should not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															}
														],
														"id": 1568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27433:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27433:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1574,
												"nodeType": "ExpressionStatement",
												"src": "27433:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1578,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27525:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27525:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1582,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "27545:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1580,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "27537:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27537:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1584,
																	"name": "_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "27552:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1576,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "27504:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$218",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "27504:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27504:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204661696c6564",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27561:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															},
															"value": "Token Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															}
														],
														"id": 1575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27496:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27496:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "27496:89:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1589,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "27598:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																		"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																	}
																},
																"id": 1592,
																"indexExpression": {
																	"expression": {
																		"id": 1590,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27605:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27605:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27598:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																	"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																}
															},
															"id": 1594,
															"indexExpression": {
																"id": 1593,
																"name": "_stakePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1565,
																"src": "27617:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27598:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage",
																"typeString": "struct Staking.stake storage ref"
															}
														},
														"id": 1595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "27598:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27598:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1668,
													"nodeType": "Block",
													"src": "27843:301:0",
													"statements": [
														{
															"assignments": [
																1627
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1627,
																	"mutability": "mutable",
																	"name": "tempStake",
																	"nameLocation": "27870:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1668,
																	"src": "27857:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake"
																	},
																	"typeName": {
																		"id": 1626,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1625,
																			"name": "stake",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1419,
																			"src": "27857:5:0"
																		},
																		"referencedDeclaration": 1419,
																		"src": "27857:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																			"typeString": "struct Staking.stake"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1634,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1628,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "27882:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																			"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																		}
																	},
																	"id": 1631,
																	"indexExpression": {
																		"expression": {
																			"id": 1629,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "27889:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "27889:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27882:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																		"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																	}
																},
																"id": 1633,
																"indexExpression": {
																	"id": 1632,
																	"name": "_stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "27901:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27882:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27857:57:0"
														},
														{
															"expression": {
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1635,
																		"name": "tempStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "27928:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1413,
																	"src": "27928:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1641,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "27968:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1638,
																				"name": "tempStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1627,
																				"src": "27947:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"id": 1639,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1413,
																			"src": "27947:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "27947:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27947:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27928:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1644,
															"nodeType": "ExpressionStatement",
															"src": "27928:47:0"
														},
														{
															"expression": {
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1645,
																		"name": "tempStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "27989:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1418,
																	"src": "27989:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1648,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "28011:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "28011:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27989:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1651,
															"nodeType": "ExpressionStatement",
															"src": "27989:37:0"
														},
														{
															"expression": {
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1652,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "28040:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																			}
																		},
																		"id": 1656,
																		"indexExpression": {
																			"expression": {
																				"id": 1653,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "28047:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "28047:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "28040:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																			"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																		}
																	},
																	"id": 1657,
																	"indexExpression": {
																		"id": 1655,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "28059:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "28040:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_storage",
																		"typeString": "struct Staking.stake storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1658,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "28075:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"src": "28040:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"id": 1660,
															"nodeType": "ExpressionStatement",
															"src": "28040:44:0"
														},
														{
															"expression": {
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1661,
																	"name": "totalStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "28098:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1664,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "28126:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1662,
																			"name": "totalStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "28111:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "28111:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28111:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28098:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1667,
															"nodeType": "ExpressionStatement",
															"src": "28098:35:0"
														}
													]
												},
												"id": 1669,
												"nodeType": "IfStatement",
												"src": "27595:549:0",
												"trueBody": {
													"id": 1624,
													"nodeType": "Block",
													"src": "27644:193:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1599,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "27673:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "27673:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1598,
																	"name": "addStakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2351,
																	"src": "27658:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27658:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "27658:26:0"
														},
														{
															"expression": {
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1603,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "27698:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																			}
																		},
																		"id": 1607,
																		"indexExpression": {
																			"expression": {
																				"id": 1604,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "27705:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "27705:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27698:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																			"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																		}
																	},
																	"id": 1608,
																	"indexExpression": {
																		"id": 1606,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "27717:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27698:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_storage",
																		"typeString": "struct Staking.stake storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1610,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "27739:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1611,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "27747:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		{
																			"expression": {
																				"id": 1612,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "27761:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "27761:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																				"typeString": "enum Staking.StakingPeriod"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1609,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "27733:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_stake_$1419_storage_ptr_$",
																			"typeString": "type(struct Staking.stake storage pointer)"
																		}
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27733:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"src": "27698:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"id": 1616,
															"nodeType": "ExpressionStatement",
															"src": "27698:79:0"
														},
														{
															"expression": {
																"id": 1622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1617,
																	"name": "totalStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "27791:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1620,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1562,
																			"src": "27819:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1618,
																			"name": "totalStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1401,
																			"src": "27804:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "27804:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27804:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27791:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1623,
															"nodeType": "ExpressionStatement",
															"src": "27791:35:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1671,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28170:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28170:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1673,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "28182:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1674,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1565,
															"src": "28190:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1675,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "28204:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "28204:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1670,
														"name": "TokenStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "28158:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1411_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28158:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1678,
												"nodeType": "EmitStatement",
												"src": "28153:67:0"
											}
										]
									},
									"functionSelector": "e9917c07",
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createStake",
									"nameLocation": "27360:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "27380:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "27372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "27402:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "27388:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1564,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1563,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "27388:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "27388:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27371:44:0"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27423:0:0"
									},
									"scope": 2451,
									"src": "27351:876:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1810,
										"nodeType": "Block",
										"src": "28302:1011:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1689,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "28320:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28329:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "28320:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28332:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															},
															"value": "stake value should not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															}
														],
														"id": 1688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28312:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28312:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "28312:53:0"
											},
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "28388:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "28375:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 1696,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1695,
																"name": "stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1419,
																"src": "28375:5:0"
															},
															"referencedDeclaration": 1419,
															"src": "28375:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1698,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "28400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 1701,
														"indexExpression": {
															"expression": {
																"id": 1699,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "28400:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 1703,
													"indexExpression": {
														"id": 1702,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "28419:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "28400:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28375:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1707,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "28472:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																],
																"id": 1706,
																"name": "validateStakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2080,
																"src": "28450:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_stake_$1419_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct Staking.stake memory) view returns (bool)"
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28450:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206973206e6f742065787069726564",
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28484:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																"typeString": "literal_string \"Staking period is not expired\""
															},
															"value": "Staking period is not expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																"typeString": "literal_string \"Staking period is not expired\""
															}
														],
														"id": 1705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28442:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28442:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "28442:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1713,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "28534:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1714,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "28544:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1413,
																"src": "28544:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28534:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205374616b6520416d6f756e74",
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28562:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																"typeString": "literal_string \"Invalid Stake Amount\""
															},
															"value": "Invalid Stake Amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																"typeString": "literal_string \"Invalid Stake Amount\""
															}
														],
														"id": 1712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28526:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1719,
												"nodeType": "ExpressionStatement",
												"src": "28526:59:0"
											},
											{
												"assignments": [
													1721
												],
												"declarations": [
													{
														"constant": false,
														"id": 1721,
														"mutability": "mutable",
														"name": "_investorReward",
														"nameLocation": "28603:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1810,
														"src": "28595:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1720,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1725,
												"initialValue": {
													"arguments": [
														{
															"id": 1723,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "28637:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														],
														"id": 1722,
														"name": "getDailyRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2228,
														"src": "28621:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_enum$_StakingPeriod_$1411_$returns$_t_uint256_$",
															"typeString": "function (enum Staking.StakingPeriod) view returns (uint256)"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28621:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28595:55:0"
											},
											{
												"expression": {
													"id": 1734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1726,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "28660:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "28660:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1732,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "28700:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1729,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "28679:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1413,
																"src": "28679:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 408,
															"src": "28679:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28679:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28660:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1735,
												"nodeType": "ExpressionStatement",
												"src": "28660:47:0"
											},
											{
												"expression": {
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1736,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "28717:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 1740,
															"indexExpression": {
																"expression": {
																	"id": 1737,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "28724:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "28724:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28717:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 1741,
														"indexExpression": {
															"id": 1739,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "28736:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28717:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1742,
														"name": "tempStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "28752:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
															"typeString": "struct Staking.stake memory"
														}
													},
													"src": "28717:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "28717:44:0"
											},
											{
												"expression": {
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1745,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "28771:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1748,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "28799:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1746,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1401,
																"src": "28784:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 408,
															"src": "28784:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28784:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28771:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "28771:35:0"
											},
											{
												"expression": {
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1752,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "28816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1755,
																"name": "_investorReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "28848:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1753,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "28831:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 393,
															"src": "28831:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28831:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28816:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1758,
												"nodeType": "ExpressionStatement",
												"src": "28816:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1759,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "28945:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																		"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																	}
																},
																"id": 1762,
																"indexExpression": {
																	"expression": {
																		"id": 1760,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "28952:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "28952:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28945:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																	"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																}
															},
															"id": 1764,
															"indexExpression": {
																"id": 1763,
																"name": "_stakePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "28964:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28945:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage",
																"typeString": "struct Staking.stake storage ref"
															}
														},
														"id": 1765,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1413,
														"src": "28945:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28988:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28945:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "28942:78:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1769,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "29009:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "29009:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1768,
															"name": "removeStakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2384,
															"src": "28991:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28991:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1772,
													"nodeType": "ExpressionStatement",
													"src": "28991:29:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29047:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29047:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "29059:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1774,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "29030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$218",
																"typeString": "contract IERC20"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "29030:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29030:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "29030:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1785,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "29097:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29097:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29106:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29106:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "_investorReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "29118:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1782,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "29076:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$218",
																"typeString": "contract IERC20"
															}
														},
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "29076:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29076:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "29076:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1793,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29163:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1795,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1682,
															"src": "29175:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1796,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "29183:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1797,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29197:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29197:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1792,
														"name": "TokenUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "29149:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1411_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29149:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "EmitStatement",
												"src": "29144:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1802,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29247:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29247:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1804,
															"name": "_investorReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1721,
															"src": "29259:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1805,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "29276:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1806,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "29290:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "29290:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1801,
														"name": "RewardsTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "29228:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1411_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29228:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1809,
												"nodeType": "EmitStatement",
												"src": "29223:83:0"
											}
										]
									},
									"functionSelector": "7e61badd",
									"id": 1811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unStake",
									"nameLocation": "28243:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "28259:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "28251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "28281:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1811,
												"src": "28267:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1684,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1683,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "28267:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "28267:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28250:44:0"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28302:0:0"
									},
									"scope": 2451,
									"src": "28234:1079:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "29482:912:0",
										"statements": [
											{
												"body": {
													"id": 1976,
													"nodeType": "Block",
													"src": "29536:852:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1841,
																				"name": "_stake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1817,
																				"src": "29558:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1843,
																			"indexExpression": {
																				"id": 1842,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "29565:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29558:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29570:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29558:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29573:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																			"typeString": "literal_string \"stake value should not be zero\""
																		},
																		"value": "stake value should not be zero"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																			"typeString": "literal_string \"stake value should not be zero\""
																		}
																	],
																	"id": 1840,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "29550:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29550:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1848,
															"nodeType": "ExpressionStatement",
															"src": "29550:56:0"
														},
														{
															"expression": {
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1849,
																	"name": "tokenAmountInOldInvestorList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "29620:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1850,
																		"name": "_stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1817,
																		"src": "29652:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1852,
																	"indexExpression": {
																		"id": 1851,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1830,
																		"src": "29659:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29652:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29620:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1854,
															"nodeType": "ExpressionStatement",
															"src": "29620:41:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 1855,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "29678:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																					"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																				}
																			},
																			"id": 1859,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1856,
																					"name": "_address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1814,
																					"src": "29685:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1858,
																				"indexExpression": {
																					"id": 1857,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1830,
																					"src": "29694:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "29685:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29678:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																				"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																			}
																		},
																		"id": 1863,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1860,
																				"name": "_stakePeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1821,
																				"src": "29698:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																					"typeString": "enum Staking.StakingPeriod[] memory"
																				}
																			},
																			"id": 1862,
																			"indexExpression": {
																				"id": 1861,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "29711:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29698:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "29678:36:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1419_storage",
																			"typeString": "struct Staking.stake storage ref"
																		}
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1413,
																	"src": "29678:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "29678:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1959,
																"nodeType": "Block",
																"src": "29955:337:0",
																"statements": [
																	{
																		"assignments": [
																			1907
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1907,
																				"mutability": "mutable",
																				"name": "tempStake",
																				"nameLocation": "29986:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1959,
																				"src": "29973:22:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																					"typeString": "struct Staking.stake"
																				},
																				"typeName": {
																					"id": 1906,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1905,
																						"name": "stake",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1419,
																						"src": "29973:5:0"
																					},
																					"referencedDeclaration": 1419,
																					"src": "29973:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																						"typeString": "struct Staking.stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1917,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1908,
																					"name": "stakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1432,
																					"src": "29998:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																						"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																					}
																				},
																				"id": 1912,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1909,
																						"name": "_address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1814,
																						"src": "30005:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1911,
																					"indexExpression": {
																						"id": 1910,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1830,
																						"src": "30014:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "30005:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "29998:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																					"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																				}
																			},
																			"id": 1916,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 1913,
																					"name": "_stakePeriod",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "30018:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																						"typeString": "enum Staking.StakingPeriod[] memory"
																					}
																				},
																				"id": 1915,
																				"indexExpression": {
																					"id": 1914,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1830,
																					"src": "30031:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "30018:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																					"typeString": "enum Staking.StakingPeriod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29998:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stake_$1419_storage",
																				"typeString": "struct Staking.stake storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "29973:61:0"
																	},
																	{
																		"expression": {
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1918,
																					"name": "tempStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1907,
																					"src": "30052:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																						"typeString": "struct Staking.stake memory"
																					}
																				},
																				"id": 1920,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1413,
																				"src": "30052:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1924,
																							"name": "_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "30092:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1926,
																						"indexExpression": {
																							"id": 1925,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "30099:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "30092:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1921,
																							"name": "tempStake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1907,
																							"src": "30071:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																								"typeString": "struct Staking.stake memory"
																							}
																						},
																						"id": 1922,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1413,
																						"src": "30071:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 393,
																					"src": "30071:20:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1927,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30071:31:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30052:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1929,
																		"nodeType": "ExpressionStatement",
																		"src": "30052:50:0"
																	},
																	{
																		"expression": {
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1930,
																					"name": "tempStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1907,
																					"src": "30120:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																						"typeString": "struct Staking.stake memory"
																					}
																				},
																				"id": 1932,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1418,
																				"src": "30120:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 1933,
																					"name": "_timeStamp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1824,
																					"src": "30142:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1935,
																				"indexExpression": {
																					"id": 1934,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1830,
																					"src": "30153:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "30142:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30120:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1937,
																		"nodeType": "ExpressionStatement",
																		"src": "30120:35:0"
																	},
																	{
																		"expression": {
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1938,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1432,
																						"src": "30173:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																							"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																						}
																					},
																					"id": 1945,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1939,
																							"name": "_address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1814,
																							"src": "30180:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																								"typeString": "address[] memory"
																							}
																						},
																						"id": 1941,
																						"indexExpression": {
																							"id": 1940,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "30189:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "30180:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "30173:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																						"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																					}
																				},
																				"id": 1946,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1942,
																						"name": "_stakePeriod",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1821,
																						"src": "30193:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																							"typeString": "enum Staking.StakingPeriod[] memory"
																						}
																					},
																					"id": 1944,
																					"indexExpression": {
																						"id": 1943,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1830,
																						"src": "30206:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "30193:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																						"typeString": "enum Staking.StakingPeriod"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "30173:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_storage",
																					"typeString": "struct Staking.stake storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1947,
																				"name": "tempStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1907,
																				"src": "30212:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"src": "30173:48:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stake_$1419_storage",
																				"typeString": "struct Staking.stake storage ref"
																			}
																		},
																		"id": 1949,
																		"nodeType": "ExpressionStatement",
																		"src": "30173:48:0"
																	},
																	{
																		"expression": {
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1950,
																				"name": "totalStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1401,
																				"src": "30239:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1953,
																							"name": "_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "30267:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1955,
																						"indexExpression": {
																							"id": 1954,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "30274:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "30267:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1951,
																						"name": "totalStake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1401,
																						"src": "30252:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1952,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 393,
																					"src": "30252:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30252:25:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30239:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1958,
																		"nodeType": "ExpressionStatement",
																		"src": "30239:38:0"
																	}
																]
															},
															"id": 1960,
															"nodeType": "IfStatement",
															"src": "29675:617:0",
															"trueBody": {
																"id": 1904,
																"nodeType": "Block",
																"src": "29728:221:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1868,
																						"name": "_address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1814,
																						"src": "29761:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 1870,
																					"indexExpression": {
																						"id": 1869,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1830,
																						"src": "29770:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "29761:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1867,
																				"name": "addStakeholder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2351,
																				"src": "29746:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 1871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29746:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1872,
																		"nodeType": "ExpressionStatement",
																		"src": "29746:27:0"
																	},
																	{
																		"expression": {
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 1873,
																						"name": "stakes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1432,
																						"src": "29791:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																							"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																						}
																					},
																					"id": 1880,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 1874,
																							"name": "_address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1814,
																							"src": "29798:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																								"typeString": "address[] memory"
																							}
																						},
																						"id": 1876,
																						"indexExpression": {
																							"id": 1875,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "29807:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "29798:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "29791:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																						"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																					}
																				},
																				"id": 1881,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1877,
																						"name": "_stakePeriod",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1821,
																						"src": "29811:12:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																							"typeString": "enum Staking.StakingPeriod[] memory"
																						}
																					},
																					"id": 1879,
																					"indexExpression": {
																						"id": 1878,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1830,
																						"src": "29824:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "29811:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																						"typeString": "enum Staking.StakingPeriod"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "29791:36:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_storage",
																					"typeString": "struct Staking.stake storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1883,
																							"name": "_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "29836:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1885,
																						"indexExpression": {
																							"id": 1884,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "29843:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "29836:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1886,
																							"name": "_stakePeriod",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1821,
																							"src": "29847:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																								"typeString": "enum Staking.StakingPeriod[] memory"
																							}
																						},
																						"id": 1888,
																						"indexExpression": {
																							"id": 1887,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "29860:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "29847:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																							"typeString": "enum Staking.StakingPeriod"
																						}
																					},
																					{
																						"baseExpression": {
																							"id": 1889,
																							"name": "_timeStamp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1824,
																							"src": "29864:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1891,
																						"indexExpression": {
																							"id": 1890,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "29875:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "29864:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																							"typeString": "enum Staking.StakingPeriod"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1882,
																					"name": "stake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1419,
																					"src": "29830:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_stake_$1419_storage_ptr_$",
																						"typeString": "type(struct Staking.stake storage pointer)"
																					}
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29830:48:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"src": "29791:87:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stake_$1419_storage",
																				"typeString": "struct Staking.stake storage ref"
																			}
																		},
																		"id": 1894,
																		"nodeType": "ExpressionStatement",
																		"src": "29791:87:0"
																	},
																	{
																		"expression": {
																			"id": 1902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1895,
																				"name": "totalStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1401,
																				"src": "29896:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1898,
																							"name": "_stake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1817,
																							"src": "29924:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																								"typeString": "uint256[] memory"
																							}
																						},
																						"id": 1900,
																						"indexExpression": {
																							"id": 1899,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "29931:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "29924:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1896,
																						"name": "totalStake",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1401,
																						"src": "29909:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1897,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 393,
																					"src": "29909:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "29909:25:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29896:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1903,
																		"nodeType": "ExpressionStatement",
																		"src": "29896:38:0"
																	}
																]
															}
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1962,
																			"name": "_address",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1814,
																			"src": "30322:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1964,
																		"indexExpression": {
																			"id": 1963,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "30331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30322:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1965,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1817,
																			"src": "30335:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1967,
																		"indexExpression": {
																			"id": 1966,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "30342:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30335:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1968,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1821,
																			"src": "30346:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
																				"typeString": "enum Staking.StakingPeriod[] memory"
																			}
																		},
																		"id": 1970,
																		"indexExpression": {
																			"id": 1969,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "30359:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30346:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1971,
																			"name": "_timeStamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1824,
																			"src": "30363:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1973,
																		"indexExpression": {
																			"id": 1972,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1830,
																			"src": "30374:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "30363:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1961,
																	"name": "TokenStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "30310:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1411_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
																	}
																},
																"id": 1974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30310:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1975,
															"nodeType": "EmitStatement",
															"src": "30305:72:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1833,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1830,
														"src": "29509:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1834,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1814,
															"src": "29513:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "29513:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29509:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1977,
												"initializationExpression": {
													"assignments": [
														1830
													],
													"declarations": [
														{
															"constant": false,
															"id": 1830,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "29501:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1977,
															"src": "29496:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1829,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "29496:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1832,
													"initialValue": {
														"hexValue": "30",
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29505:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29496:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "29531:3:0",
														"subExpression": {
															"id": 1837,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "29531:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1839,
													"nodeType": "ExpressionStatement",
													"src": "29531:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29492:896:0"
											}
										]
									},
									"functionSelector": "2b4afcc3",
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1827,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1826,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "29472:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29472:9:0"
										}
									],
									"name": "createOldInvestorList",
									"nameLocation": "29328:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "29367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "29350:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1812,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "29350:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1813,
													"nodeType": "ArrayTypeName",
													"src": "29350:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "29394:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "29377:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1815,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1816,
													"nodeType": "ArrayTypeName",
													"src": "29377:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "29425:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "29402:35:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_memory_ptr",
													"typeString": "enum Staking.StakingPeriod[]"
												},
												"typeName": {
													"baseType": {
														"id": 1819,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1818,
															"name": "StakingPeriod",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1411,
															"src": "29402:13:0"
														},
														"referencedDeclaration": 1411,
														"src": "29402:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"id": 1820,
													"nodeType": "ArrayTypeName",
													"src": "29402:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_enum$_StakingPeriod_$1411_$dyn_storage_ptr",
														"typeString": "enum Staking.StakingPeriod[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "_timeStamp",
												"nameLocation": "29453:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "29439:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1822,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "29439:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1823,
													"nodeType": "ArrayTypeName",
													"src": "29439:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29349:115:0"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29482:0:0"
									},
									"scope": 2451,
									"src": "29319:1075:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "30451:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1987,
																	"name": "_owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "30490:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1990,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "30506:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "30498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1988,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "30498:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30498:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1992,
																	"name": "tokenAmountInOldInvestorList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1424,
																	"src": "30513:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1985,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "30469:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$218",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 217,
																"src": "30469:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30469:73:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204661696c6564",
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30544:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															},
															"value": "Token Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															}
														],
														"id": 1984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30461:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "30461:107:0"
											}
										]
									},
									"functionSelector": "2b28ea29",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTokenInContract",
									"nameLocation": "30408:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "30435:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "30427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30426:16:0"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30451:0:0"
									},
									"scope": 2451,
									"src": "30399:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "30707:248:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2010,
														"name": "_timeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2005,
														"src": "30720:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2011,
														"name": "oldTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "30734:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30720:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2042,
													"nodeType": "Block",
													"src": "30853:96:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30934:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 2036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30925:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 2030,
																							"name": "apr",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1437,
																							"src": "30893:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																								"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
																							}
																						},
																						"id": 2033,
																						"indexExpression": {
																							"expression": {
																								"id": 2031,
																								"name": "_investor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2003,
																								"src": "30897:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																									"typeString": "struct Staking.stake memory"
																								}
																							},
																							"id": 2032,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakePeriod",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1416,
																							"src": "30897:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																								"typeString": "enum Staking.StakingPeriod"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "30893:26:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2028,
																						"name": "_unstakeAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "30874:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 423,
																					"src": "30874:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30874:46:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 438,
																			"src": "30874:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30874:55:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 438,
																	"src": "30874:59:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30874:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2041,
															"nodeType": "Return",
															"src": "30867:71:0"
														}
													]
												},
												"id": 2043,
												"nodeType": "IfStatement",
												"src": "30717:232:0",
												"trueBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "30747:100:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "313030",
																		"id": 2024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30832:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "313030",
																				"id": 2021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30823:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 2015,
																							"name": "apr_old",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1442,
																							"src": "30787:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																								"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
																							}
																						},
																						"id": 2018,
																						"indexExpression": {
																							"expression": {
																								"id": 2016,
																								"name": "_investor",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2003,
																								"src": "30795:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																									"typeString": "struct Staking.stake memory"
																								}
																							},
																							"id": 2017,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "stakePeriod",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1416,
																							"src": "30795:21:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																								"typeString": "enum Staking.StakingPeriod"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "30787:30:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2013,
																						"name": "_unstakeAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2000,
																						"src": "30768:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 423,
																					"src": "30768:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "30768:50:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 438,
																			"src": "30768:54:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30768:59:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 438,
																	"src": "30768:63:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30768:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2009,
															"id": 2026,
															"nodeType": "Return",
															"src": "30761:75:0"
														}
													]
												}
											}
										]
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInvestorRewards",
									"nameLocation": "30591:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "_unstakeAmount",
												"nameLocation": "30618:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "30610:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "30647:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "30634:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 2002,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2001,
														"name": "stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "30634:5:0"
													},
													"referencedDeclaration": 1419,
													"src": "30634:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "_timeStamp",
												"nameLocation": "30663:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "30658:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2004,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30658:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30609:65:0"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "30698:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30697:9:0"
									},
									"scope": 2451,
									"src": "30582:373:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "31024:42:0",
										"statements": [
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2052,
														"name": "oldTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "31034:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2053,
														"name": "_timeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "31049:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31034:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "31034:25:0"
											}
										]
									},
									"functionSelector": "2f7d122f",
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 2050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2049,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "31012:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31012:11:0"
										}
									],
									"name": "setOldTimeStamp",
									"nameLocation": "30972:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "_timeStamp",
												"nameLocation": "30993:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "30988:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "30988:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30987:17:0"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31024:0:0"
									},
									"scope": 2451,
									"src": "30963:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "31156:155:0",
										"statements": [
											{
												"assignments": [
													2066
												],
												"declarations": [
													{
														"constant": false,
														"id": 2066,
														"mutability": "mutable",
														"name": "stakingTimeStamp",
														"nameLocation": "31174:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 2079,
														"src": "31166:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2073,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2067,
															"name": "_investor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2060,
															"src": "31193:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "31193:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 2070,
																"name": "_investor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2060,
																"src": "31241:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															],
															"id": 2069,
															"name": "getStakingPeriodInNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "31215:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_stake_$1419_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct Staking.stake memory) pure returns (uint256)"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31215:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31193:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31166:85:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2074,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "31268:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "31268:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2076,
														"name": "stakingTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "31287:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31268:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2064,
												"id": 2078,
												"nodeType": "Return",
												"src": "31261:42:0"
											}
										]
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateStakingPeriod",
									"nameLocation": "31082:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "31117:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "31104:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "31104:5:0"
													},
													"referencedDeclaration": 1419,
													"src": "31104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31103:24:0"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "31150:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31150:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31149:6:0"
									},
									"scope": 2451,
									"src": "31073:238:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2125,
										"nodeType": "Block",
										"src": "31409:334:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2088,
																"name": "_investor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "31426:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "stakePeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1416,
															"src": "31426:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2090,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "31451:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "ONE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1406,
															"src": "31451:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"src": "31426:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2094,
																	"name": "_investor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2083,
																	"src": "31487:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "stakePeriod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1416,
																"src": "31487:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2096,
																	"name": "StakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "31512:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																		"typeString": "type(enum Staking.StakingPeriod)"
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "TWO_MONTH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1407,
																"src": "31512:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"src": "31487:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																	"typeString": "enum Staking.StakingPeriod"
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2100,
																		"name": "_investor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "31548:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 2101,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "stakePeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1416,
																	"src": "31548:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2102,
																		"name": "StakingPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "31573:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																			"typeString": "type(enum Staking.StakingPeriod)"
																		}
																	},
																	"id": 2103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "THREE_MONTH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1408,
																	"src": "31573:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"src": "31548:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																		"typeString": "enum Staking.StakingPeriod"
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2106,
																			"name": "_investor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2083,
																			"src": "31611:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																				"typeString": "struct Staking.stake memory"
																			}
																		},
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "stakePeriod",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1416,
																		"src": "31611:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 2108,
																			"name": "StakingPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "31636:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																				"typeString": "type(enum Staking.StakingPeriod)"
																			}
																		},
																		"id": 2109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "SIX_MONTH",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1409,
																		"src": "31636:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"src": "31611:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																			"typeString": "enum Staking.StakingPeriod"
																		},
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2112,
																				"name": "_investor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2083,
																				"src": "31673:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "stakePeriod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1416,
																			"src": "31673:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2114,
																				"name": "StakingPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "31698:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1411_$",
																					"typeString": "type(enum Staking.StakingPeriod)"
																				}
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "ONE_YEAR",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1410,
																			"src": "31698:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		"src": "31673:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 2118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31734:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 2119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "31673:62:0",
																	"trueExpression": {
																		"hexValue": "333635",
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31723:8:0",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "365"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "31611:124:0",
																"trueExpression": {
																	"hexValue": "313230",
																	"id": 2111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31662:8:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10368000_by_1",
																		"typeString": "int_const 10368000"
																	},
																	"value": "120"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "31548:187:0",
															"trueExpression": {
																"hexValue": "3930",
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31601:7:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																},
																"value": "90"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "31487:248:0",
														"trueExpression": {
															"hexValue": "3330",
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31538:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "31426:309:0",
													"trueExpression": {
														"hexValue": "3135",
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31477:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1296000_by_1",
															"typeString": "int_const 1296000"
														},
														"value": "15"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2087,
												"id": 2124,
												"nodeType": "Return",
												"src": "31419:316:0"
											}
										]
									},
									"id": 2126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingPeriodInNumbers",
									"nameLocation": "31328:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "31367:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "31354:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 2082,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2081,
														"name": "stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1419,
														"src": "31354:5:0"
													},
													"referencedDeclaration": 1419,
													"src": "31354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31353:24:0"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "31401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31400:9:0"
									},
									"scope": 2451,
									"src": "31319:424:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "31874:65:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2136,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "31891:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 2138,
															"indexExpression": {
																"id": 2137,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2128,
																"src": "31898:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "31891:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 2140,
														"indexExpression": {
															"id": 2139,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "31912:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "31891:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1413,
													"src": "31891:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2135,
												"id": 2142,
												"nodeType": "Return",
												"src": "31884:48:0"
											}
										]
									},
									"functionSelector": "ad9159fd",
									"id": 2144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeOf",
									"nameLocation": "31759:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "31775:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "31767:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "31803:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "31789:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2130,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2129,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "31789:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "31789:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31766:50:0"
									},
									"returnParameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2144,
												"src": "31861:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31860:9:0"
									},
									"scope": 2451,
									"src": "31750:189:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2162,
										"nodeType": "Block",
										"src": "32057:70:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 2155,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "32074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 2157,
															"indexExpression": {
																"id": 2156,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2146,
																"src": "32081:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32074:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 2159,
														"indexExpression": {
															"id": 2158,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2149,
															"src": "32095:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32074:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "stakePeriod",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1416,
													"src": "32074:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2161,
												"nodeType": "Return",
												"src": "32067:53:0"
											}
										]
									},
									"functionSelector": "063b35bf",
									"id": 2163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPeriodOf",
									"nameLocation": "31955:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "31979:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "31971:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "32007:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "31993:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2148,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2147,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "31993:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "31993:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31970:50:0"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2163,
												"src": "32042:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2152,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2151,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "32042:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "32042:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32041:15:0"
									},
									"scope": 2451,
									"src": "31946:181:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "32217:371:0",
										"statements": [
											{
												"assignments": [
													2173
												],
												"declarations": [
													{
														"constant": false,
														"id": 2173,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "32240:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "32227:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 2172,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2171,
																"name": "stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1419,
																"src": "32227:5:0"
															},
															"referencedDeclaration": 1419,
															"src": "32227:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2180,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2174,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "32252:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 2177,
														"indexExpression": {
															"expression": {
																"id": 2175,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32259:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32259:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32252:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 2179,
													"indexExpression": {
														"id": 2178,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2166,
														"src": "32271:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32252:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32227:57:0"
											},
											{
												"assignments": [
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "total_rewards",
														"nameLocation": "32302:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "32294:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2190,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2184,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "32337:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 2185,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "32337:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2186,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2173,
															"src": "32355:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														{
															"expression": {
																"id": 2187,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2173,
																"src": "32366:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1418,
															"src": "32366:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2183,
														"name": "getInvestorRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "32318:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_stake_$1419_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,struct Staking.stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32318:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32294:92:0"
											},
											{
												"assignments": [
													2192
												],
												"declarations": [
													{
														"constant": false,
														"id": 2192,
														"mutability": "mutable",
														"name": "noOfDays",
														"nameLocation": "32404:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2227,
														"src": "32396:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2208,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3234",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32475:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															},
															"value": "24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3630",
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "3630",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32459:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2197,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2193,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "32416:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 2194,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "32416:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 2195,
																							"name": "tempStake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2173,
																							"src": "32434:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																								"typeString": "struct Staking.stake memory"
																							}
																						},
																						"id": 2196,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1418,
																						"src": "32434:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "32416:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2198,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "32415:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 438,
																		"src": "32415:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32415:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "32415:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32415:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "32415:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32415:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32396:82:0"
											},
											{
												"expression": {
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2209,
														"name": "noOfDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "32488:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2210,
																		"name": "noOfDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2192,
																		"src": "32500:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32511:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32500:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 2213,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "32499:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 2215,
															"name": "noOfDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "32520:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "32499:29:0",
														"trueExpression": {
															"hexValue": "31",
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32488:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "32488:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2224,
															"name": "noOfDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2192,
															"src": "32572:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "333635",
																	"id": 2221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32563:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_365_by_1",
																		"typeString": "int_const 365"
																	},
																	"value": "365"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_365_by_1",
																		"typeString": "int_const 365"
																	}
																],
																"expression": {
																	"id": 2219,
																	"name": "total_rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "32545:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 438,
																"src": "32545:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32545:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "32545:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32545:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2170,
												"id": 2226,
												"nodeType": "Return",
												"src": "32538:43:0"
											}
										]
									},
									"functionSelector": "0ded03cd",
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDailyRewards",
									"nameLocation": "32143:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "32173:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "32159:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2164,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "32159:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "32159:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32158:28:0"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "32208:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32207:9:0"
									},
									"scope": 2451,
									"src": "32134:454:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2261,
										"nodeType": "Block",
										"src": "32679:215:0",
										"statements": [
											{
												"assignments": [
													2238
												],
												"declarations": [
													{
														"constant": false,
														"id": 2238,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "32702:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2261,
														"src": "32689:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 2237,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2236,
																"name": "stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1419,
																"src": "32689:5:0"
															},
															"referencedDeclaration": 1419,
															"src": "32689:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2245,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2239,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "32714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 2242,
														"indexExpression": {
															"expression": {
																"id": 2240,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "32721:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "32721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "32714:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 2244,
													"indexExpression": {
														"id": 2243,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "32733:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32714:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32689:57:0"
											},
											{
												"assignments": [
													2247
												],
												"declarations": [
													{
														"constant": false,
														"id": 2247,
														"mutability": "mutable",
														"name": "total_rewards",
														"nameLocation": "32764:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2261,
														"src": "32756:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32756:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2255,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2249,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "32799:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 2250,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1413,
															"src": "32799:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2251,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "32817:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														{
															"expression": {
																"id": 2252,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2238,
																"src": "32828:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1418,
															"src": "32828:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2248,
														"name": "getInvestorRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "32780:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_stake_$1419_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,struct Staking.stake memory,uint256) view returns (uint256)"
														}
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32780:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32756:92:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "333635",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32883:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															},
															"value": "365"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_365_by_1",
																"typeString": "int_const 365"
															}
														],
														"expression": {
															"id": 2256,
															"name": "total_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "32865:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 438,
														"src": "32865:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32865:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2235,
												"id": 2260,
												"nodeType": "Return",
												"src": "32858:29:0"
											}
										]
									},
									"functionSelector": "e580d976",
									"id": 2262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardsPerDay",
									"nameLocation": "32604:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "32635:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "32621:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2230,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2229,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "32621:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "32621:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32620:28:0"
									},
									"returnParameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "32670:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32669:9:0"
									},
									"scope": 2451,
									"src": "32595:299:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "32982:190:0",
										"statements": [
											{
												"assignments": [
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "33005:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "32992:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 2271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2270,
																"name": "stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1419,
																"src": "32992:5:0"
															},
															"referencedDeclaration": 1419,
															"src": "32992:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2279,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2273,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "33017:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 2276,
														"indexExpression": {
															"expression": {
																"id": 2274,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "33024:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "33024:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33017:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_struct$_stake_$1419_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 2278,
													"indexExpression": {
														"id": 2277,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2265,
														"src": "33036:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1411",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "33017:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1419_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32992:57:0"
											},
											{
												"assignments": [
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "expiredDay",
														"nameLocation": "33067:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2291,
														"src": "33059:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2282,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "33080:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1418,
														"src": "33080:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 2285,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "33128:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_stake_$1419_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															],
															"id": 2284,
															"name": "getStakingPeriodInNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "33102:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_stake_$1419_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct Staking.stake memory) pure returns (uint256)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33102:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33080:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33059:79:0"
											},
											{
												"expression": {
													"id": 2289,
													"name": "expiredDay",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2281,
													"src": "33155:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2269,
												"id": 2290,
												"nodeType": "Return",
												"src": "33148:17:0"
											}
										]
									},
									"functionSelector": "57d54aed",
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getExpiredDay",
									"nameLocation": "32910:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "32938:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "32924:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2263,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "32924:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "32924:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32923:28:0"
									},
									"returnParameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "32973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32972:9:0"
									},
									"scope": 2451,
									"src": "32901:271:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "33329:169:0",
										"statements": [
											{
												"body": {
													"id": 2323,
													"nodeType": "Block",
													"src": "33391:74:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2313,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "33409:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2314,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "33421:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2316,
																	"indexExpression": {
																		"id": 2315,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2302,
																		"src": "33434:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33421:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "33409:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2322,
															"nodeType": "IfStatement",
															"src": "33405:49:0",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"hexValue": "74727565",
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33446:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"id": 2319,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "33452:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2320,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33445:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"functionReturnParameters": 2300,
																"id": 2321,
																"nodeType": "Return",
																"src": "33438:16:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2305,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "33359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2306,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "33363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "33363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33359:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2324,
												"initializationExpression": {
													"assignments": [
														2302
													],
													"declarations": [
														{
															"constant": false,
															"id": 2302,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "33352:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2324,
															"src": "33344:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2301,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33344:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2304,
													"initialValue": {
														"hexValue": "30",
														"id": 2303,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33356:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "33344:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2309,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "33384:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33389:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "33384:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2312,
													"nodeType": "ExpressionStatement",
													"src": "33384:6:0"
												},
												"nodeType": "ForStatement",
												"src": "33339:126:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 2325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33489:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 2327,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "33481:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 2300,
												"id": 2328,
												"nodeType": "Return",
												"src": "33474:17:0"
											}
										]
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStakeholder",
									"nameLocation": "33232:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "33254:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "33246:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33246:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33245:18:0"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "33310:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33310:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "33316:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33309:15:0"
									},
									"scope": 2451,
									"src": "33223:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "33574:131:0",
										"statements": [
											{
												"assignments": [
													2336,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"mutability": "mutable",
														"name": "_isStakeholder",
														"nameLocation": "33590:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2350,
														"src": "33585:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2335,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33585:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2340,
												"initialValue": {
													"arguments": [
														{
															"id": 2338,
															"name": "_stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2332,
															"src": "33624:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2337,
														"name": "isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "33610:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address) view returns (bool,uint256)"
														}
													},
													"id": 2339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33610:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33584:53:0"
											},
											{
												"condition": {
													"id": 2342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "33650:15:0",
													"subExpression": {
														"id": 2341,
														"name": "_isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2336,
														"src": "33651:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2349,
												"nodeType": "IfStatement",
												"src": "33647:51:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 2346,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2332,
																"src": "33685:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2343,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "33667:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"src": "33667:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																"typeString": "function (address[] storage pointer,address)"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33667:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2348,
													"nodeType": "ExpressionStatement",
													"src": "33667:31:0"
												}
											}
										]
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addStakeholder",
									"nameLocation": "33516:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "33539:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "33531:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33531:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33530:22:0"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33574:0:0"
									},
									"scope": 2451,
									"src": "33507:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "33784:219:0",
										"statements": [
											{
												"assignments": [
													2357,
													2359
												],
												"declarations": [
													{
														"constant": false,
														"id": 2357,
														"mutability": "mutable",
														"name": "_isStakeholder",
														"nameLocation": "33800:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "33795:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2356,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "33795:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2359,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "33824:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2383,
														"src": "33816:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2363,
												"initialValue": {
													"arguments": [
														{
															"id": 2361,
															"name": "_stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "33843:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2360,
														"name": "isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2330,
														"src": "33829:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address) view returns (bool,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33829:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33794:62:0"
											},
											{
												"condition": {
													"id": 2364,
													"name": "_isStakeholder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2357,
													"src": "33869:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "33866:130:0",
												"trueBody": {
													"id": 2381,
													"nodeType": "Block",
													"src": "33884:112:0",
													"statements": [
														{
															"expression": {
																"id": 2374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2365,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "33898:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2367,
																	"indexExpression": {
																		"id": 2366,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "33911:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33898:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2368,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "33916:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2373,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2369,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "33929:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2370,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "33929:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "33951:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "33929:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "33916:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "33898:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2375,
															"nodeType": "ExpressionStatement",
															"src": "33898:55:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2376,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1422,
																		"src": "33967:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "33967:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33967:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2380,
															"nodeType": "ExpressionStatement",
															"src": "33967:18:0"
														}
													]
												}
											}
										]
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeStakeholder",
									"nameLocation": "33723:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "33749:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "33741:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33740:22:0"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33784:0:0"
									},
									"scope": 2451,
									"src": "33714:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "34133:36:0",
										"statements": [
											{
												"expression": {
													"id": 2389,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1403,
													"src": "34150:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2388,
												"id": 2390,
												"nodeType": "Return",
												"src": "34143:19:0"
											}
										]
									},
									"functionSelector": "e627f2db",
									"id": 2392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalRewards",
									"nameLocation": "34058:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34073:2:0"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "34120:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34119:9:0"
									},
									"scope": 2451,
									"src": "34049:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2408,
										"nodeType": "Block",
										"src": "34306:48:0",
										"statements": [
											{
												"expression": {
													"id": 2406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2402,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "34316:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 2404,
														"indexExpression": {
															"id": 2403,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2397,
															"src": "34320:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34316:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2405,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "34336:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34316:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2407,
												"nodeType": "ExpressionStatement",
												"src": "34316:31:0"
											}
										]
									},
									"functionSelector": "2e1e844e",
									"id": 2409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2400,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2399,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "34296:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34296:9:0"
										}
									],
									"name": "setApyPercentage",
									"nameLocation": "34226:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "34248:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "34243:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "34243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "34275:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2409,
												"src": "34261:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2395,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "34261:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "34261:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34242:46:0"
									},
									"returnParameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34306:0:0"
									},
									"scope": 2451,
									"src": "34217:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2425,
										"nodeType": "Block",
										"src": "34453:52:0",
										"statements": [
											{
												"expression": {
													"id": 2423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2419,
															"name": "apr_old",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "34463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1411_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 2421,
														"indexExpression": {
															"id": 2420,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "34471:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1411",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34463:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2422,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2411,
														"src": "34487:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34463:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2424,
												"nodeType": "ExpressionStatement",
												"src": "34463:35:0"
											}
										]
									},
									"functionSelector": "8cfcece7",
									"id": 2426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2417,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2416,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "34443:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34443:9:0"
										}
									],
									"name": "setOldApyPercentage",
									"nameLocation": "34370:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "34395:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "34390:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "34390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "34422:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2426,
												"src": "34408:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1411",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2413,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2412,
														"name": "StakingPeriod",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1411,
														"src": "34408:13:0"
													},
													"referencedDeclaration": 1411,
													"src": "34408:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1411",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34389:46:0"
									},
									"returnParameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34453:0:0"
									},
									"scope": 2451,
									"src": "34361:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2449,
										"nodeType": "Block",
										"src": "34569:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2435,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "34613:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34613:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2433,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "34595:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$218",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "34595:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34595:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2440,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "34641:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34641:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2444,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "34658:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$2451",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34650:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2442,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34650:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34650:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2438,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "34623:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$218",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 186,
																"src": "34623:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34623:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2431,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "34586:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$1393_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 571,
														"src": "34586:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34586:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2430,
												"id": 2448,
												"nodeType": "Return",
												"src": "34579:86:0"
											}
										]
									},
									"functionSelector": "bf583903",
									"id": 2450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingTokens",
									"nameLocation": "34521:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34536:2:0"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2450,
												"src": "34560:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34559:9:0"
									},
									"scope": 2451,
									"src": "34512:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2452,
							"src": "25704:8972:0",
							"usedErrors": []
						}
					],
					"src": "259:34417:0"
				},
				"id": 0
			}
		}
	}
}