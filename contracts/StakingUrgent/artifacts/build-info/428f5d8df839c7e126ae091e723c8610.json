{
	"id": "428f5d8df839c7e126ae091e723c8610",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingUrgent/1stContract.sol": {
				"content": "/**\n *Submitted for verification at BscScan.com on 2023-01-14\n*/\n\n// SPDX-License-Identifier: MIT\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n/**    \n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SafeMath.sol\n\n\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n// File: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n\n// File: staking.sol\npragma solidity ^0.8.0;\n\n\n\ncontract Staking is Ownable {\n    using SafeMath for uint256;\n\n    uint256 public totalStake;\n    uint256 public totalRewards;\n\n    enum StakingPeriod{ ONE_MONTH, TWO_MONTH, THREE_MONTH, SIX_MONTH, ONE_YEAR }\n\n    struct stake {\n        uint256 amount;\n        StakingPeriod stakePeriod;\n        uint timestamp;\n    }\n\n    address[] internal stakeholders;\n\n    mapping(address => mapping(StakingPeriod => stake)) public stakes;\n    mapping(StakingPeriod => uint) public apr;\n\n    IERC20 public myToken;\n\n    event TokenStaked(address indexed _from, uint amount, StakingPeriod plan, uint timestamp);\n    event TokenUnstaked(address indexed _from, uint amount, StakingPeriod plan, uint timestamp);\n    event RewardsTransferred(address indexed _to, uint amount, StakingPeriod plan, uint timestamp);\n\n    constructor(address _myToken)\n    { \n        myToken = IERC20(_myToken);\n        apr[StakingPeriod.ONE_MONTH] = 414; //15 days \n        apr[StakingPeriod.TWO_MONTH] = 912; // 30 days\n        apr[StakingPeriod.THREE_MONTH] = 4817; // 90 days \n        apr[StakingPeriod.SIX_MONTH] = 7213; // 120 days\n        apr[StakingPeriod.ONE_YEAR] = 18000; // 365 days\n    }\n\n    // ---------- STAKES ----------\n\n    function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {\n        require(_stake > 0, \"stake value should not be zero\");\n        require(myToken.transferFrom(msg.sender, address(this), _stake), \"Token Transfer Failed\");\n        if(stakes[msg.sender][_stakePeriod].amount == 0) {\n            addStakeholder(msg.sender);\n            stakes[msg.sender][_stakePeriod] = stake(_stake, _stakePeriod, block.timestamp);\n            totalStake = totalStake.add(_stake);\n        } else {\n            stake memory tempStake = stakes[msg.sender][_stakePeriod];\n            tempStake.amount = tempStake.amount.add(_stake);\n            tempStake.timestamp = block.timestamp;\n            stakes[msg.sender][_stakePeriod] = tempStake;\n            totalStake = totalStake.add(_stake);\n        }\n        emit TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp);\n    }\n\n    function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {\n        require(_stake > 0, \"stake value should not be zero\");\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        require(validateStakingPeriod(tempStake), \"Staking period is not expired\");\n        require(_stake <= tempStake.amount, \"Invalid Stake Amount\");\n        uint256 _investorReward = getDailyRewards(_stakePeriod);\n        tempStake.amount = tempStake.amount.sub(_stake);\n        stakes[msg.sender][_stakePeriod] = tempStake;\n        totalStake = totalStake.sub(_stake);\n        totalRewards = totalRewards.add(_investorReward);\n        //uint256 tokensToBeTransfer = _stake.add(_investorReward);\n        if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender);\n        myToken.transfer(msg.sender, _stake);\n        myToken.transferFrom(owner(), msg.sender, _investorReward);\n        emit TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp);\n        emit RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp);\n    }\n\n    function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor) internal view returns (uint256) {\n        // uint256 investorStakingPeriod = getStakingPeriodInNumbers(_investor);\n        // uint APY = investorStakingPeriod == 26 weeks ? sixMonthAPR : investorStakingPeriod == 52 weeks ? oneYearAPR : investorStakingPeriod == 156 weeks ? threeYearAPR : 0;\n        return _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100);\n    } \n\n    function validateStakingPeriod(stake memory _investor) internal view returns(bool) {\n        uint256 stakingTimeStamp = _investor.timestamp + getStakingPeriodInNumbers(_investor);\n        return block.timestamp >= stakingTimeStamp; \n    } \n\n    function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){\n        return _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0; \n    }\n\n    function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)\n        public\n        view\n        returns(uint256)\n    {\n        return stakes[_stakeholder][_stakePeriod].amount;\n    }\n\n    function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {\n        return stakes[_stakeholder][_stakePeriod].stakePeriod;\n    }\n\n    function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {\n        stake memory tempStake = stakes[msg.sender][_stakePeriod];\n        uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake);\n        uint256 noOfDays = (block.timestamp - tempStake.timestamp).div(60).div(60).div(24);\n        noOfDays = (noOfDays < 1) ? 1 : noOfDays;\n       // uint256 stakingPeriodInDays =  getStakingPeriodInNumbers(tempStake).div(60).div(60).div(24);\n        return total_rewards.div(364).mul(noOfDays);\n    }\n\n    // ---------- STAKEHOLDERS ----------\n\n    function isStakeholder(address _address)\n        internal\n        view\n        returns(bool, uint256)\n    {\n        for (uint256 s = 0; s < stakeholders.length; s += 1){\n            if (_address == stakeholders[s]) return (true, s);\n        }\n        return (false, 0);\n    }\n\n   \n    function addStakeholder(address _stakeholder)\n        internal\n    {\n        (bool _isStakeholder, ) = isStakeholder(_stakeholder);\n        if(!_isStakeholder) stakeholders.push(_stakeholder);\n    }\n\n    \n    function removeStakeholder(address _stakeholder)\n        internal\n    {\n        (bool _isStakeholder, uint256 s) = isStakeholder(_stakeholder);\n        if(_isStakeholder){\n            stakeholders[s] = stakeholders[stakeholders.length - 1];\n            stakeholders.pop();\n        } \n    }\n    // ---------- REWARDS ----------\n\n    \n    function getTotalRewards()\n        public\n        view\n        returns(uint256)\n    {\n        return totalRewards;\n    }\n\n    // ---- Staking APY  setters ---- \n\n    function setApyPercentage(uint8 _percentage, StakingPeriod _stakePeriod) public onlyOwner {\n        apr[_stakePeriod] = _percentage;\n    }\n\n    function remainingTokens() public view returns (uint256) {\n        return Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this)));\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/StakingUrgent/1stContract.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is only required for intermediate, library-like contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This contract is only required for intermediate, library-like contracts.",
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/1stContract.sol\":13267:25570  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/1stContract.sol\":13267:25570  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c94c0d0d3f1d1b064b23f1c3ad4a2986b562bb0867e9026158fd94711652e21764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c94c0d0d3f1d1b064b23f1c3ad4a2986b562bb0867e9026158fd94711652e21764736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4C 0xD 0xD EXTCODEHASH SAR SHL MOD 0x4B 0x23 CALL 0xC3 0xAD 0x4A 0x29 DUP7 0xB5 PUSH3 0xBB0867 0xE9 MUL PUSH2 0x58FD SWAP5 PUSH18 0x1652E21764736F6C63430008150033000000 ",
							"sourceMap": "13267:12303:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c94c0d0d3f1d1b064b23f1c3ad4a2986b562bb0867e9026158fd94711652e21764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0x4C 0xD 0xD EXTCODEHASH SAR SHL MOD 0x4B 0x23 CALL 0xC3 0xAD 0x4A 0x29 DUP7 0xB5 PUSH3 0xBB0867 0xE9 MUL PUSH2 0x58FD SWAP5 PUSH18 0x1652E21764736F6C63430008150033000000 ",
							"sourceMap": "13267:12303:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 13267,
									"end": 25570,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c94c0d0d3f1d1b064b23f1c3ad4a2986b562bb0867e9026158fd94711652e21764736f6c63430008150033",
									".code": [
										{
											"begin": 13267,
											"end": 25570,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13267,
											"end": 25570,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/StakingUrgent/1stContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/StakingUrgent/1stContract.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/1stContract.sol\":6687:12987  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/1stContract.sol\":6687:12987  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d4e2c7767a482328b0003c2ee858598d309615e3c7e75cc0a405c6ee4c3ba98764736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4e2c7767a482328b0003c2ee858598d309615e3c7e75cc0a405c6ee4c3ba98764736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE2 0xC7 PUSH23 0x7A482328B0003C2EE858598D309615E3C7E75CC0A405C6 0xEE 0x4C EXTCODESIZE 0xA9 DUP8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "6687:6300:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4e2c7767a482328b0003c2ee858598d309615e3c7e75cc0a405c6ee4c3ba98764736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE2 0xC7 PUSH23 0x7A482328B0003C2EE858598D309615E3C7E75CC0A405C6 0xEE 0x4C EXTCODESIZE 0xA9 DUP8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "6687:6300:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6687,
									"end": 12987,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4e2c7767a482328b0003c2ee858598d309615e3c7e75cc0a405c6ee4c3ba98764736f6c63430008150033",
									".code": [
										{
											"begin": 6687,
											"end": 12987,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6687,
											"end": 12987,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/StakingUrgent/1stContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"SafeMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_myToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "RewardsTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum Staking.StakingPeriod",
									"name": "plan",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenUnstaked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "apr",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stake",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "createStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "getDailyRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "_percentage",
									"type": "uint8"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "setApyPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeholder",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "stakeOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "stakePeriod",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeholder",
									"type": "address"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "stakingPeriodOf",
							"outputs": [
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stake",
									"type": "uint256"
								},
								{
									"internalType": "enum Staking.StakingPeriod",
									"name": "_stakePeriod",
									"type": "uint8"
								}
							],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingUrgent/1stContract.sol\":25620:32198  contract Staking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingUrgent/1stContract.sol\":26421:26782  constructor(address _myToken)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/StakingUrgent/1stContract.sol\":1590:1622  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"contracts/StakingUrgent/1stContract.sol\":1609:1621  _msgSender() */\n  tag_8\n    /* \"contracts/StakingUrgent/1stContract.sol\":1609:1619  _msgSender */\n  shl(0x20, tag_9)\n    /* \"contracts/StakingUrgent/1stContract.sol\":1609:1621  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/StakingUrgent/1stContract.sol\":1590:1608  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"contracts/StakingUrgent/1stContract.sol\":1590:1622  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/StakingUrgent/1stContract.sol\":26483:26491  _myToken */\n  dup1\n    /* \"contracts/StakingUrgent/1stContract.sol\":26466:26473  myToken */\n  0x06\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26466:26492  myToken = IERC20(_myToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26533:26536  414 */\n  0x019e\n    /* \"contracts/StakingUrgent/1stContract.sol\":26502:26505  apr */\n  0x05\n    /* \"contracts/StakingUrgent/1stContract.sol\":26502:26530  apr[StakingPeriod.ONE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26506:26529  StakingPeriod.ONE_MONTH */\n  dup1\n    /* \"contracts/StakingUrgent/1stContract.sol\":26502:26530  apr[StakingPeriod.ONE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_12\n  jumpi\n  tag_13\n  tag_14\n  jump\t// in\ntag_13:\ntag_12:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_15\n  jumpi\n  tag_16\n  tag_14\n  jump\t// in\ntag_16:\ntag_15:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/1stContract.sol\":26502:26536  apr[StakingPeriod.ONE_MONTH] = 414 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26588:26591  912 */\n  0x0390\n    /* \"contracts/StakingUrgent/1stContract.sol\":26557:26560  apr */\n  0x05\n    /* \"contracts/StakingUrgent/1stContract.sol\":26557:26585  apr[StakingPeriod.TWO_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26561:26584  StakingPeriod.TWO_MONTH */\n  0x01\n    /* \"contracts/StakingUrgent/1stContract.sol\":26557:26585  apr[StakingPeriod.TWO_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_17\n  jumpi\n  tag_18\n  tag_14\n  jump\t// in\ntag_18:\ntag_17:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_19\n  jumpi\n  tag_20\n  tag_14\n  jump\t// in\ntag_20:\ntag_19:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/1stContract.sol\":26557:26591  apr[StakingPeriod.TWO_MONTH] = 912 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26645:26649  4817 */\n  0x12d1\n    /* \"contracts/StakingUrgent/1stContract.sol\":26612:26615  apr */\n  0x05\n    /* \"contracts/StakingUrgent/1stContract.sol\":26612:26642  apr[StakingPeriod.THREE_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26616:26641  StakingPeriod.THREE_MONTH */\n  0x02\n    /* \"contracts/StakingUrgent/1stContract.sol\":26612:26642  apr[StakingPeriod.THREE_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_21\n  jumpi\n  tag_22\n  tag_14\n  jump\t// in\ntag_22:\ntag_21:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  tag_24\n  tag_14\n  jump\t// in\ntag_24:\ntag_23:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/1stContract.sol\":26612:26649  apr[StakingPeriod.THREE_MONTH] = 4817 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26702:26706  7213 */\n  0x1c2d\n    /* \"contracts/StakingUrgent/1stContract.sol\":26671:26674  apr */\n  0x05\n    /* \"contracts/StakingUrgent/1stContract.sol\":26671:26699  apr[StakingPeriod.SIX_MONTH] */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26675:26698  StakingPeriod.SIX_MONTH */\n  0x03\n    /* \"contracts/StakingUrgent/1stContract.sol\":26671:26699  apr[StakingPeriod.SIX_MONTH] */\n  0x04\n  dup2\n  gt\n  iszero\n  tag_25\n  jumpi\n  tag_26\n  tag_14\n  jump\t// in\ntag_26:\ntag_25:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  tag_28\n  tag_14\n  jump\t// in\ntag_28:\ntag_27:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/1stContract.sol\":26671:26706  apr[StakingPeriod.SIX_MONTH] = 7213 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26758:26763  18000 */\n  0x4650\n    /* \"contracts/StakingUrgent/1stContract.sol\":26728:26731  apr */\n  0x05\n    /* \"contracts/StakingUrgent/1stContract.sol\":26728:26755  apr[StakingPeriod.ONE_YEAR] */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":26732:26754  StakingPeriod.ONE_YEAR */\n  0x04\n    /* \"contracts/StakingUrgent/1stContract.sol\":26728:26755  apr[StakingPeriod.ONE_YEAR] */\n  dup1\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  tag_30\n  tag_14\n  jump\t// in\ntag_30:\ntag_29:\n  0x04\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  tag_32\n  tag_14\n  jump\t// in\ntag_32:\ntag_31:\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/StakingUrgent/1stContract.sol\":26728:26763  apr[StakingPeriod.ONE_YEAR] = 18000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":26421:26782  constructor(address _myToken)... */\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":25620:32198  contract Staking is Ownable {... */\n  jump(tag_33)\n    /* \"contracts/StakingUrgent/1stContract.sol\":405:501  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"contracts/StakingUrgent/1stContract.sol\":458:465  address */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":484:494  msg.sender */\n  caller\n    /* \"contracts/StakingUrgent/1stContract.sol\":477:494  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":405:501  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/StakingUrgent/1stContract.sol\":3087:3274  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"contracts/StakingUrgent/1stContract.sol\":3160:3176  address oldOwner */\n  0x00\n    /* \"contracts/StakingUrgent/1stContract.sol\":3179:3185  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StakingUrgent/1stContract.sol\":3160:3185  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":3204:3212  newOwner */\n  dup2\n    /* \"contracts/StakingUrgent/1stContract.sol\":3195:3201  _owner */\n  0x00\n  dup1\n    /* \"contracts/StakingUrgent/1stContract.sol\":3195:3212  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":3258:3266  newOwner */\n  dup2\n    /* \"contracts/StakingUrgent/1stContract.sol\":3227:3267  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/StakingUrgent/1stContract.sol\":3248:3256  oldOwner */\n  dup2\n    /* \"contracts/StakingUrgent/1stContract.sol\":3227:3267  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/StakingUrgent/1stContract.sol\":3150:3274  {... */\n  pop\n    /* \"contracts/StakingUrgent/1stContract.sol\":3087:3274  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_37:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_39:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_40:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_49\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_39\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_41:\n    /* \"#utility.yul\":641:665   */\n  tag_51\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_40\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_52:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_42:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_54\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_41\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_57\n  tag_37\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":932:1051   */\ntag_56:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_58\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_42\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1382   */\ntag_14:\n    /* \"#utility.yul\":1250:1327   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1247:1248   */\n  0x00\n    /* \"#utility.yul\":1240:1328   */\n  mstore\n    /* \"#utility.yul\":1347:1351   */\n  0x21\n    /* \"#utility.yul\":1344:1345   */\n  0x04\n    /* \"#utility.yul\":1337:1352   */\n  mstore\n    /* \"#utility.yul\":1371:1375   */\n  0x24\n    /* \"#utility.yul\":1368:1369   */\n  0x00\n    /* \"#utility.yul\":1361:1376   */\n  revert\n    /* \"contracts/StakingUrgent/1stContract.sol\":25620:32198  contract Staking is Ownable {... */\ntag_33:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingUrgent/1stContract.sol\":25620:32198  contract Staking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e196cad\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbf583903\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbf583903\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe627f2db\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe9917c07\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x9e196cad\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa3fcd253\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xad9159fd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7e61badd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x063b35bf\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0ded03cd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3027ffc0\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/StakingUrgent/1stContract.sol\":30122:30303  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":30309:30845  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":25718:25745  uint256 public totalRewards */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":25981:26046  mapping(address => mapping(StakingPeriod => stake)) public stakes */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27707:28786  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/StakingUrgent/1stContract.sol\":25687:25712  uint256 public totalStake */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":26052:26093  mapping(StakingPeriod => uint) public apr */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":31891:32029  function setApyPercentage(uint8 _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/StakingUrgent/1stContract.sol\":29927:30116  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":26100:26121  IERC20 public myToken */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":32035:32195  function remainingTokens() public view returns (uint256) {... */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":31725:31845  function getTotalRewards()... */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingUrgent/1stContract.sol\":26825:27701  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/StakingUrgent/1stContract.sol\":2735:2933  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30122:30303  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n    tag_25:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30218:30231  StakingPeriod */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30256  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30270  stakes[_stakeholder] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30257:30269  _stakeholder */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30270  stakes[_stakeholder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30284  stakes[_stakeholder][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30271:30283  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30284  stakes[_stakeholder][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n    tag_85:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_88\n      jumpi\n      tag_89\n      tag_87\n      jump\t// in\n    tag_89:\n    tag_88:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30250:30296  stakes[_stakeholder][_stakePeriod].stakePeriod */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":30243:30296  return stakes[_stakeholder][_stakePeriod].stakePeriod */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30122:30303  function stakingPeriodOf(address _stakeholder, StakingPeriod _stakePeriod) public view returns (StakingPeriod) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":30309:30845  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n    tag_31:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30383:30390  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30402:30424  stake memory tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30427:30433  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":30427:30445  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30434:30444  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":30427:30445  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30427:30459  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30446:30458  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":30427:30459  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_91\n      jumpi\n      tag_92\n      tag_87\n      jump\t// in\n    tag_92:\n    tag_91:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_93\n      jumpi\n      tag_94\n      tag_87\n      jump\t// in\n    tag_94:\n    tag_93:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30402:30459  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_95\n      jumpi\n      tag_96\n      tag_87\n      jump\t// in\n    tag_96:\n    tag_95:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_97\n      jumpi\n      tag_98\n      tag_87\n      jump\t// in\n    tag_98:\n    tag_97:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30469:30490  uint256 total_rewards */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30493:30540  getInvestorRewards(tempStake.amount, tempStake) */\n      tag_99\n        /* \"contracts/StakingUrgent/1stContract.sol\":30512:30521  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":30512:30528  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":30530:30539  tempStake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":30493:30511  getInvestorRewards */\n      tag_100\n        /* \"contracts/StakingUrgent/1stContract.sol\":30493:30540  getInvestorRewards(tempStake.amount, tempStake) */\n      jump\t// in\n    tag_99:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30469:30540  uint256 total_rewards = getInvestorRewards(tempStake.amount, tempStake) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30550:30566  uint256 noOfDays */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30632  (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      tag_101\n        /* \"contracts/StakingUrgent/1stContract.sol\":30629:30631  24 */\n      0x18\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30624  (block.timestamp - tempStake.timestamp).div(60).div(60) */\n      tag_102\n        /* \"contracts/StakingUrgent/1stContract.sol\":30621:30623  60 */\n      0x3c\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30616  (block.timestamp - tempStake.timestamp).div(60) */\n      tag_103\n        /* \"contracts/StakingUrgent/1stContract.sol\":30613:30615  60 */\n      0x3c\n        /* \"contracts/StakingUrgent/1stContract.sol\":30588:30597  tempStake */\n      dup9\n        /* \"contracts/StakingUrgent/1stContract.sol\":30588:30607  tempStake.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":30570:30585  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":30570:30607  block.timestamp - tempStake.timestamp */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30612  (block.timestamp - tempStake.timestamp).div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30616  (block.timestamp - tempStake.timestamp).div(60) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30620  (block.timestamp - tempStake.timestamp).div(60).div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30624  (block.timestamp - tempStake.timestamp).div(60).div(60) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30628  (block.timestamp - tempStake.timestamp).div(60).div(60).div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30569:30632  (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30550:30632  uint256 noOfDays = (block.timestamp - tempStake.timestamp).div(60).div(60).div(24) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30665:30666  1 */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":30654:30662  noOfDays */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":30654:30666  noOfDays < 1 */\n      lt\n        /* \"contracts/StakingUrgent/1stContract.sol\":30653:30682  (noOfDays < 1) ? 1 : noOfDays */\n      tag_107\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":30674:30682  noOfDays */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30653:30682  (noOfDays < 1) ? 1 : noOfDays */\n      jump(tag_108)\n    tag_107:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30670:30671  1 */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":30653:30682  (noOfDays < 1) ? 1 : noOfDays */\n    tag_108:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30642:30682  noOfDays = (noOfDays < 1) ? 1 : noOfDays */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30838  total_rewards.div(364).mul(noOfDays) */\n      tag_109\n        /* \"contracts/StakingUrgent/1stContract.sol\":30829:30837  noOfDays */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30824  total_rewards.div(364) */\n      tag_110\n        /* \"contracts/StakingUrgent/1stContract.sol\":30820:30823  364 */\n      0x016c\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30815  total_rewards */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30819  total_rewards.div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30824  total_rewards.div(364) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30828  total_rewards.div(364).mul */\n      tag_111\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":30802:30838  total_rewards.div(364).mul(noOfDays) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30795:30838  return total_rewards.div(364).mul(noOfDays) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30309:30845  function getDailyRewards(StakingPeriod _stakePeriod) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":25718:25745  uint256 public totalRewards */\n    tag_35:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":25981:26046  mapping(address => mapping(StakingPeriod => stake)) public stakes */\n    tag_39:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      tag_113\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1759  _checkOwner */\n      tag_114\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2549:2579  _transferOwnership(address(0)) */\n      tag_116\n        /* \"contracts/StakingUrgent/1stContract.sol\":2576:2577  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":2549:2567  _transferOwnership */\n      tag_117\n        /* \"contracts/StakingUrgent/1stContract.sol\":2549:2579  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2485:2586  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":27707:28786  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_47:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27802:27803  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27793:27799  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":27793:27803  _stake > 0 */\n      gt\n        /* \"contracts/StakingUrgent/1stContract.sol\":27785:27838  require(_stake > 0, \"stake value should not be zero\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27848:27870  stake memory tempStake */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27873:27879  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":27873:27891  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27880:27890  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27873:27891  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27873:27905  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27892:27904  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27873:27905  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_87\n      jump\t// in\n    tag_123:\n    tag_122:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_124\n      jumpi\n      tag_125\n      tag_87\n      jump\t// in\n    tag_125:\n    tag_124:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27848:27905  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_126\n      jumpi\n      tag_127\n      tag_87\n      jump\t// in\n    tag_127:\n    tag_126:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_128\n      jumpi\n      tag_129\n      tag_87\n      jump\t// in\n    tag_129:\n    tag_128:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27923:27955  validateStakingPeriod(tempStake) */\n      tag_130\n        /* \"contracts/StakingUrgent/1stContract.sol\":27945:27954  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":27923:27944  validateStakingPeriod */\n      tag_131\n        /* \"contracts/StakingUrgent/1stContract.sol\":27923:27955  validateStakingPeriod(tempStake) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27915:27989  require(validateStakingPeriod(tempStake), \"Staking period is not expired\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28017:28026  tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":28017:28033  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":28007:28013  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":28007:28033  _stake <= tempStake.amount */\n      gt\n      iszero\n        /* \"contracts/StakingUrgent/1stContract.sol\":27999:28058  require(_stake <= tempStake.amount, \"Invalid Stake Amount\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28068:28091  uint256 _investorReward */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28094:28123  getDailyRewards(_stakePeriod) */\n      tag_138\n        /* \"contracts/StakingUrgent/1stContract.sol\":28110:28122  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":28094:28109  getDailyRewards */\n      tag_31\n        /* \"contracts/StakingUrgent/1stContract.sol\":28094:28123  getDailyRewards(_stakePeriod) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28068:28123  uint256 _investorReward = getDailyRewards(_stakePeriod) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28152:28180  tempStake.amount.sub(_stake) */\n      tag_139\n        /* \"contracts/StakingUrgent/1stContract.sol\":28173:28179  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":28152:28161  tempStake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":28152:28168  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":28152:28172  tempStake.amount.sub */\n      tag_140\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":28152:28180  tempStake.amount.sub(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28133:28142  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":28133:28149  tempStake.amount */\n      0x00\n      add\n        /* \"contracts/StakingUrgent/1stContract.sol\":28133:28180  tempStake.amount = tempStake.amount.sub(_stake) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28225:28234  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28196  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28208  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28197:28207  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28208  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28222  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28209:28221  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28222  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_141\n      jumpi\n      tag_142\n      tag_87\n      jump\t// in\n    tag_142:\n    tag_141:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_143\n      jumpi\n      tag_144\n      tag_87\n      jump\t// in\n    tag_144:\n    tag_143:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":28190:28234  stakes[msg.sender][_stakePeriod] = tempStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_145\n      jumpi\n      tag_146\n      tag_87\n      jump\t// in\n    tag_146:\n    tag_145:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28257:28279  totalStake.sub(_stake) */\n      tag_147\n        /* \"contracts/StakingUrgent/1stContract.sol\":28272:28278  _stake */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":28257:28267  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/1stContract.sol\":28257:28271  totalStake.sub */\n      tag_140\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":28257:28279  totalStake.sub(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28244:28254  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":28244:28279  totalStake = totalStake.sub(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28304:28337  totalRewards.add(_investorReward) */\n      tag_148\n        /* \"contracts/StakingUrgent/1stContract.sol\":28321:28336  _investorReward */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":28304:28316  totalRewards */\n      sload(0x02)\n        /* \"contracts/StakingUrgent/1stContract.sol\":28304:28320  totalRewards.add */\n      tag_149\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":28304:28337  totalRewards.add(_investorReward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_148:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28289:28301  totalRewards */\n      0x02\n        /* \"contracts/StakingUrgent/1stContract.sol\":28289:28337  totalRewards = totalRewards.add(_investorReward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28461:28462  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28424  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28436  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28425:28435  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28436  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28450  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":28437:28449  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28450  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_150\n      jumpi\n      tag_151\n      tag_87\n      jump\t// in\n    tag_151:\n    tag_150:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_153\n      tag_87\n      jump\t// in\n    tag_153:\n    tag_152:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28457  stakes[msg.sender][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/1stContract.sol\":28418:28462  stakes[msg.sender][_stakePeriod].amount == 0 */\n      sub\n        /* \"contracts/StakingUrgent/1stContract.sol\":28415:28493  if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender) */\n      tag_154\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":28464:28493  removeStakeholder(msg.sender) */\n      tag_155\n        /* \"contracts/StakingUrgent/1stContract.sol\":28482:28492  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28464:28481  removeStakeholder */\n      tag_156\n        /* \"contracts/StakingUrgent/1stContract.sol\":28464:28493  removeStakeholder(msg.sender) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28415:28493  if(stakes[msg.sender][_stakePeriod].amount == 0) removeStakeholder(msg.sender) */\n    tag_154:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28503:28510  myToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":28503:28519  myToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingUrgent/1stContract.sol\":28520:28530  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28532:28538  _stake */\n      dup7\n        /* \"contracts/StakingUrgent/1stContract.sol\":28503:28539  myToken.transfer(msg.sender, _stake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_160\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_160:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28549:28556  myToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":28549:28569  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUrgent/1stContract.sol\":28570:28577  owner() */\n      tag_163\n        /* \"contracts/StakingUrgent/1stContract.sol\":28570:28575  owner */\n      tag_52\n        /* \"contracts/StakingUrgent/1stContract.sol\":28570:28577  owner() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28579:28589  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28591:28606  _investorReward */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":28549:28607  myToken.transferFrom(owner(), msg.sender, _investorReward) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_168:\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28636:28646  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28622:28686  TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f56\n        /* \"contracts/StakingUrgent/1stContract.sol\":28648:28654  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":28656:28668  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":28670:28685  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":28622:28686  TokenUnstaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/1stContract.sol\":28720:28730  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":28701:28779  RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c57\n        /* \"contracts/StakingUrgent/1stContract.sol\":28732:28747  _investorReward */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":28749:28761  _stakePeriod */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":28763:28778  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":28701:28779  RewardsTransferred(msg.sender, _investorReward, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_170\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/1stContract.sol\":27775:28786  {... */\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27707:28786  function unStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":25687:25712  uint256 public totalStake */\n    tag_49:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n    tag_52:\n        /* \"contracts/StakingUrgent/1stContract.sol\":1901:1908  address */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":1927:1933  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":1920:1933  return _owner */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":1855:1940  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":26052:26093  mapping(StakingPeriod => uint) public apr */\n    tag_57:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":31891:32029  function setApyPercentage(uint8 _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n    tag_62:\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      tag_173\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1759  _checkOwner */\n      tag_114\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32011:32022  _percentage */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":31991:32022  apr[_stakePeriod] = _percentage */\n      0xff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":31991:31994  apr */\n      0x05\n        /* \"contracts/StakingUrgent/1stContract.sol\":31991:32008  apr[_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31995:32007  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":31991:32008  apr[_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_175\n      jumpi\n      tag_176\n      tag_87\n      jump\t// in\n    tag_176:\n    tag_175:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_177\n      jumpi\n      tag_178\n      tag_87\n      jump\t// in\n    tag_178:\n    tag_177:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":31991:32022  apr[_stakePeriod] = _percentage */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31891:32029  function setApyPercentage(uint8 _percentage, StakingPeriod _stakePeriod) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":29927:30116  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n    tag_65:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30038:30045  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30074  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30088  stakes[_stakeholder] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30075:30087  _stakeholder */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30088  stakes[_stakeholder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30102  stakes[_stakeholder][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30089:30101  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30102  stakes[_stakeholder][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_180\n      jumpi\n      tag_181\n      tag_87\n      jump\t// in\n    tag_181:\n    tag_180:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_183\n      tag_87\n      jump\t// in\n    tag_183:\n    tag_182:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":30068:30109  stakes[_stakeholder][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/1stContract.sol\":30061:30109  return stakes[_stakeholder][_stakePeriod].amount */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":29927:30116  function stakeOf(address _stakeholder, StakingPeriod _stakePeriod)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":26100:26121  IERC20 public myToken */\n    tag_68:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":32035:32195  function remainingTokens() public view returns (uint256) {... */\n    tag_72:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32083:32090  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":32109:32188  Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      tag_185\n        /* \"contracts/StakingUrgent/1stContract.sol\":32118:32125  myToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":32118:32135  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/StakingUrgent/1stContract.sol\":32136:32143  owner() */\n      tag_186\n        /* \"contracts/StakingUrgent/1stContract.sol\":32136:32141  owner */\n      tag_52\n        /* \"contracts/StakingUrgent/1stContract.sol\":32136:32143  owner() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32118:32144  myToken.balanceOf(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_187:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32146:32153  myToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":32146:32163  myToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/StakingUrgent/1stContract.sol\":32164:32171  owner() */\n      tag_192\n        /* \"contracts/StakingUrgent/1stContract.sol\":32164:32169  owner */\n      tag_52\n        /* \"contracts/StakingUrgent/1stContract.sol\":32164:32171  owner() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32181:32185  this */\n      address\n        /* \"contracts/StakingUrgent/1stContract.sol\":32146:32187  myToken.allowance(owner(), address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_197:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32109:32117  Math.min */\n      tag_198\n        /* \"contracts/StakingUrgent/1stContract.sol\":32109:32188  Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      jump\t// in\n    tag_185:\n        /* \"contracts/StakingUrgent/1stContract.sol\":32102:32188  return Math.min(myToken.balanceOf(owner()), myToken.allowance(owner(), address(this))) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":32035:32195  function remainingTokens() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":31725:31845  function getTotalRewards()... */\n    tag_75:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31796:31803  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31826:31838  totalRewards */\n      sload(0x02)\n        /* \"contracts/StakingUrgent/1stContract.sol\":31819:31838  return totalRewards */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31725:31845  function getTotalRewards()... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":26825:27701  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n    tag_79:\n        /* \"contracts/StakingUrgent/1stContract.sol\":26924:26925  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":26915:26921  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":26915:26925  _stake > 0 */\n      gt\n        /* \"contracts/StakingUrgent/1stContract.sol\":26907:26960  require(_stake > 0, \"stake value should not be zero\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_121\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"contracts/StakingUrgent/1stContract.sol\":26978:26985  myToken */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":26978:26998  myToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingUrgent/1stContract.sol\":26999:27009  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27019:27023  this */\n      address\n        /* \"contracts/StakingUrgent/1stContract.sol\":27026:27032  _stake */\n      dup6\n        /* \"contracts/StakingUrgent/1stContract.sol\":26978:27033  myToken.transferFrom(msg.sender, address(this), _stake) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_205:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_206\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"contracts/StakingUrgent/1stContract.sol\":26970:27059  require(myToken.transferFrom(msg.sender, address(this), _stake), \"Token Transfer Failed\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27115:27116  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27078  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27090  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27079:27089  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27090  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27104  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27091:27103  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27104  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_211\n      tag_87\n      jump\t// in\n    tag_211:\n    tag_210:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_213\n      tag_87\n      jump\t// in\n    tag_213:\n    tag_212:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27111  stakes[msg.sender][_stakePeriod].amount */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingUrgent/1stContract.sol\":27072:27116  stakes[msg.sender][_stakePeriod].amount == 0 */\n      sub\n        /* \"contracts/StakingUrgent/1stContract.sol\":27069:27618  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n      tag_214\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":27132:27158  addStakeholder(msg.sender) */\n      tag_215\n        /* \"contracts/StakingUrgent/1stContract.sol\":27147:27157  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27132:27146  addStakeholder */\n      tag_216\n        /* \"contracts/StakingUrgent/1stContract.sol\":27132:27158  addStakeholder(msg.sender) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27207:27251  stake(_stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":27213:27219  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27207:27251  stake(_stake, _stakePeriod, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/1stContract.sol\":27221:27233  _stakePeriod */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":27207:27251  stake(_stake, _stakePeriod, block.timestamp) */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_217\n      jumpi\n      tag_218\n      tag_87\n      jump\t// in\n    tag_218:\n    tag_217:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/StakingUrgent/1stContract.sol\":27235:27250  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":27207:27251  stake(_stake, _stakePeriod, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27178  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27190  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27179:27189  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27190  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27204  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27191:27203  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27204  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_220\n      tag_87\n      jump\t// in\n    tag_220:\n    tag_219:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_87\n      jump\t// in\n    tag_222:\n    tag_221:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27172:27251  stakes[msg.sender][_stakePeriod] = stake(_stake, _stakePeriod, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_87\n      jump\t// in\n    tag_224:\n    tag_223:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27278:27300  totalStake.add(_stake) */\n      tag_225\n        /* \"contracts/StakingUrgent/1stContract.sol\":27293:27299  _stake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":27278:27288  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/1stContract.sol\":27278:27292  totalStake.add */\n      tag_149\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":27278:27300  totalStake.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_225:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27265:27275  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":27265:27300  totalStake = totalStake.add(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27069:27618  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n      jump(tag_226)\n    tag_214:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27331:27353  stake memory tempStake */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27356:27362  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":27356:27374  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27363:27373  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27356:27374  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27356:27388  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27375:27387  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27356:27388  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_87\n      jump\t// in\n    tag_228:\n    tag_227:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_230\n      tag_87\n      jump\t// in\n    tag_230:\n    tag_229:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27331:27388  stake memory tempStake = stakes[msg.sender][_stakePeriod] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_87\n      jump\t// in\n    tag_232:\n    tag_231:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_233\n      jumpi\n      tag_234\n      tag_87\n      jump\t// in\n    tag_234:\n    tag_233:\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27421:27449  tempStake.amount.add(_stake) */\n      tag_235\n        /* \"contracts/StakingUrgent/1stContract.sol\":27442:27448  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27421:27430  tempStake */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":27421:27437  tempStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":27421:27441  tempStake.amount.add */\n      tag_149\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":27421:27449  tempStake.amount.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_235:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27402:27411  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":27402:27418  tempStake.amount */\n      0x00\n      add\n        /* \"contracts/StakingUrgent/1stContract.sol\":27402:27449  tempStake.amount = tempStake.amount.add(_stake) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27485:27500  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":27463:27472  tempStake */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":27463:27482  tempStake.timestamp */\n      0x40\n      add\n        /* \"contracts/StakingUrgent/1stContract.sol\":27463:27500  tempStake.timestamp = block.timestamp */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27549:27558  tempStake */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27520  stakes */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27532  stakes[msg.sender] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27521:27531  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27532  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27546  stakes[msg.sender][_stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":27533:27545  _stakePeriod */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27546  stakes[msg.sender][_stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_236\n      jumpi\n      tag_237\n      tag_87\n      jump\t// in\n    tag_237:\n    tag_236:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_239\n      tag_87\n      jump\t// in\n    tag_239:\n    tag_238:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingUrgent/1stContract.sol\":27514:27558  stakes[msg.sender][_stakePeriod] = tempStake */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_241\n      tag_87\n      jump\t// in\n    tag_241:\n    tag_240:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27585:27607  totalStake.add(_stake) */\n      tag_242\n        /* \"contracts/StakingUrgent/1stContract.sol\":27600:27606  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27585:27595  totalStake */\n      sload(0x01)\n        /* \"contracts/StakingUrgent/1stContract.sol\":27585:27599  totalStake.add */\n      tag_149\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":27585:27607  totalStake.add(_stake) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27572:27582  totalStake */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":27572:27607  totalStake = totalStake.add(_stake) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27317:27618  {... */\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":27069:27618  if(stakes[msg.sender][_stakePeriod].amount == 0) {... */\n    tag_226:\n        /* \"contracts/StakingUrgent/1stContract.sol\":27644:27654  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":27632:27694  TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c\n        /* \"contracts/StakingUrgent/1stContract.sol\":27656:27662  _stake */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27664:27676  _stakePeriod */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":27678:27693  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":27632:27694  TokenStaked(msg.sender, _stake, _stakePeriod, block.timestamp) */\n      mload(0x40)\n      tag_243\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingUrgent/1stContract.sol\":26825:27701  function createStake(uint256 _stake, StakingPeriod _stakePeriod) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":2735:2933  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      tag_245\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1759  _checkOwner */\n      tag_114\n        /* \"contracts/StakingUrgent/1stContract.sol\":1748:1761  _checkOwner() */\n      jump\t// in\n    tag_245:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2843:2844  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":2823:2845  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":2823:2831  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":2823:2845  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/StakingUrgent/1stContract.sol\":2815:2888  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2898:2926  _transferOwnership(newOwner) */\n      tag_250\n        /* \"contracts/StakingUrgent/1stContract.sol\":2917:2925  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":2898:2916  _transferOwnership */\n      tag_117\n        /* \"contracts/StakingUrgent/1stContract.sol\":2898:2926  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2735:2933  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":28792:29245  function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor) internal view returns (uint256) {... */\n    tag_100:\n        /* \"contracts/StakingUrgent/1stContract.sol\":28891:28898  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29238  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      tag_252\n        /* \"contracts/StakingUrgent/1stContract.sol\":29234:29237  100 */\n      0x64\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29229  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100) */\n      tag_253\n        /* \"contracts/StakingUrgent/1stContract.sol\":29225:29228  100 */\n      0x64\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29220  _unstakeAmount.mul(apr[_investor.stakePeriod]) */\n      tag_254\n        /* \"contracts/StakingUrgent/1stContract.sol\":29193:29196  apr */\n      0x05\n        /* \"contracts/StakingUrgent/1stContract.sol\":29193:29219  apr[_investor.stakePeriod] */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29197:29206  _investor */\n      dup9\n        /* \"contracts/StakingUrgent/1stContract.sol\":29197:29218  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29193:29219  apr[_investor.stakePeriod] */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_255\n      jumpi\n      tag_256\n      tag_87\n      jump\t// in\n    tag_256:\n    tag_255:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_257\n      jumpi\n      tag_258\n      tag_87\n      jump\t// in\n    tag_258:\n    tag_257:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29188  _unstakeAmount */\n      dup9\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29192  _unstakeAmount.mul */\n      tag_111\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29220  _unstakeAmount.mul(apr[_investor.stakePeriod]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29224  _unstakeAmount.mul(apr[_investor.stakePeriod]).div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29229  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29233  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div */\n      tag_106\n      swap1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29174:29238  _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29167:29238  return _unstakeAmount.mul(apr[_investor.stakePeriod]).div(100).div(100) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":28792:29245  function getInvestorRewards(uint256 _unstakeAmount, stake memory _investor) internal view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":10055:10151  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"contracts/StakingUrgent/1stContract.sol\":10113:10120  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":10143:10144  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":10139:10140  a */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":10139:10144  a / b */\n      tag_260\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n        /* \"contracts/StakingUrgent/1stContract.sol\":10132:10144  return a / b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":10055:10151  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":9670:9766  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9728:9735  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":9758:9759  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":9754:9755  a */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":9754:9759  a * b */\n      tag_263\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9747:9759  return a * b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":9670:9766  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":2013:2143  function _checkOwner() internal view virtual {... */\n    tag_114:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2087:2099  _msgSender() */\n      tag_266\n        /* \"contracts/StakingUrgent/1stContract.sol\":2087:2097  _msgSender */\n      tag_267\n        /* \"contracts/StakingUrgent/1stContract.sol\":2087:2099  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2076:2099  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":2076:2083  owner() */\n      tag_268\n        /* \"contracts/StakingUrgent/1stContract.sol\":2076:2081  owner */\n      tag_52\n        /* \"contracts/StakingUrgent/1stContract.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_268:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2076:2099  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":2068:2136  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"contracts/StakingUrgent/1stContract.sol\":2013:2143  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":3087:3274  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_117:\n        /* \"contracts/StakingUrgent/1stContract.sol\":3160:3176  address oldOwner */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":3179:3185  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":3160:3185  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":3204:3212  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":3195:3201  _owner */\n      0x00\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":3195:3212  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":3258:3266  newOwner */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":3227:3267  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":3248:3256  oldOwner */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":3227:3267  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/StakingUrgent/1stContract.sol\":3150:3274  {... */\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":3087:3274  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":29252:29490  function validateStakingPeriod(stake memory _investor) internal view returns(bool) {... */\n    tag_131:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29329:29333  bool */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29345:29369  uint256 stakingTimeStamp */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29394:29430  getStakingPeriodInNumbers(_investor) */\n      tag_274\n        /* \"contracts/StakingUrgent/1stContract.sol\":29420:29429  _investor */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":29394:29419  getStakingPeriodInNumbers */\n      tag_275\n        /* \"contracts/StakingUrgent/1stContract.sol\":29394:29430  getStakingPeriodInNumbers(_investor) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29372:29381  _investor */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":29372:29391  _investor.timestamp */\n      0x40\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29372:29430  _investor.timestamp + getStakingPeriodInNumbers(_investor) */\n      tag_276\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29345:29430  uint256 stakingTimeStamp = _investor.timestamp + getStakingPeriodInNumbers(_investor) */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":29466:29482  stakingTimeStamp */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29447:29462  block.timestamp */\n      timestamp\n        /* \"contracts/StakingUrgent/1stContract.sol\":29447:29482  block.timestamp >= stakingTimeStamp */\n      lt\n      iszero\n        /* \"contracts/StakingUrgent/1stContract.sol\":29440:29482  return block.timestamp >= stakingTimeStamp */\n      swap2\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":29252:29490  function validateStakingPeriod(stake memory _investor) internal view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":9327:9423  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9385:9392  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":9415:9416  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":9411:9412  a */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":9411:9416  a - b */\n      tag_279\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_279:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9404:9416  return a - b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":9327:9423  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":8960:9056  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_149:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9018:9025  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":9048:9049  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":9044:9045  a */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":9044:9049  a + b */\n      tag_281\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_281:\n        /* \"contracts/StakingUrgent/1stContract.sol\":9037:9049  return a + b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":8960:9056  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":31388:31677  function removeStakeholder(address _stakeholder)... */\n    tag_156:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31469:31488  bool _isStakeholder */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31490:31499  uint256 s */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":31503:31530  isStakeholder(_stakeholder) */\n      tag_283\n        /* \"contracts/StakingUrgent/1stContract.sol\":31517:31529  _stakeholder */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":31503:31516  isStakeholder */\n      tag_284\n        /* \"contracts/StakingUrgent/1stContract.sol\":31503:31530  isStakeholder(_stakeholder) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31468:31530  (bool _isStakeholder, uint256 s) = isStakeholder(_stakeholder) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31543:31557  _isStakeholder */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":31540:31670  if(_isStakeholder){... */\n      iszero\n      tag_285\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":31590:31602  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31625:31626  1 */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":31603:31615  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31603:31622  stakeholders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31603:31626  stakeholders.length - 1 */\n      tag_286\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_286:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31590:31627  stakeholders[stakeholders.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_287\n      jumpi\n      tag_288\n      tag_289\n      jump\t// in\n    tag_288:\n    tag_287:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":31572:31584  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31585:31586  s */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":31572:31587  stakeholders[s] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_291\n      jumpi\n      tag_292\n      tag_289\n      jump\t// in\n    tag_292:\n    tag_291:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31572:31627  stakeholders[s] = stakeholders[stakeholders.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31641:31653  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31641:31659  stakeholders.pop() */\n      dup1\n      sload\n      dup1\n      tag_294\n      jumpi\n      tag_295\n      tag_296\n      jump\t// in\n    tag_295:\n    tag_294:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/StakingUrgent/1stContract.sol\":31540:31670  if(_isStakeholder){... */\n    tag_285:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31458:31677  {... */\n      pop\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31388:31677  function removeStakeholder(address _stakeholder)... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":13653:13757  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_198:\n        /* \"contracts/StakingUrgent/1stContract.sol\":13711:13718  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":13741:13742  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":13737:13738  a */\n      dup4\n        /* \"contracts/StakingUrgent/1stContract.sol\":13737:13742  a < b */\n      lt\n        /* \"contracts/StakingUrgent/1stContract.sol\":13737:13750  a < b ? a : b */\n      tag_299\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":13749:13750  b */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":13737:13750  a < b ? a : b */\n      jump(tag_300)\n    tag_299:\n        /* \"contracts/StakingUrgent/1stContract.sol\":13745:13746  a */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":13737:13750  a < b ? a : b */\n    tag_300:\n        /* \"contracts/StakingUrgent/1stContract.sol\":13730:13750  return a < b ? a : b */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":13653:13757  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":31179:31377  function addStakeholder(address _stakeholder)... */\n    tag_216:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31257:31276  bool _isStakeholder */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31282:31309  isStakeholder(_stakeholder) */\n      tag_302\n        /* \"contracts/StakingUrgent/1stContract.sol\":31296:31308  _stakeholder */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":31282:31295  isStakeholder */\n      tag_284\n        /* \"contracts/StakingUrgent/1stContract.sol\":31282:31309  isStakeholder(_stakeholder) */\n      jump\t// in\n    tag_302:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31256:31309  (bool _isStakeholder, ) = isStakeholder(_stakeholder) */\n      pop\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31323:31337  _isStakeholder */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":31319:31370  if(!_isStakeholder) stakeholders.push(_stakeholder) */\n      tag_303\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":31339:31351  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31357:31369  _stakeholder */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":31339:31370  stakeholders.push(_stakeholder) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31319:31370  if(!_isStakeholder) stakeholders.push(_stakeholder) */\n    tag_303:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31246:31377  {... */\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31179:31377  function addStakeholder(address _stakeholder)... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":405:501  function _msgSender() internal view virtual returns (address) {... */\n    tag_267:\n        /* \"contracts/StakingUrgent/1stContract.sol\":458:465  address */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":484:494  msg.sender */\n      caller\n        /* \"contracts/StakingUrgent/1stContract.sol\":477:494  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":405:501  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":29497:29921  function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){... */\n    tag_275:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29579:29586  uint256 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29629:29652  StakingPeriod.ONE_MONTH */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29652  _investor.stakePeriod == StakingPeriod.ONE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_307\n      jumpi\n      tag_308\n      tag_87\n      jump\t// in\n    tag_308:\n    tag_307:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29613  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29625  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29652  _investor.stakePeriod == StakingPeriod.ONE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_309\n      jumpi\n      tag_310\n      tag_87\n      jump\t// in\n    tag_310:\n    tag_309:\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29913  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_311\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":29690:29713  StakingPeriod.TWO_MONTH */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29713  _investor.stakePeriod == StakingPeriod.TWO_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_312\n      jumpi\n      tag_313\n      tag_87\n      jump\t// in\n    tag_313:\n    tag_312:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29674  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29686  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29713  _investor.stakePeriod == StakingPeriod.TWO_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_314\n      jumpi\n      tag_315\n      tag_87\n      jump\t// in\n    tag_315:\n    tag_314:\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29913  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_316\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":29751:29776  StakingPeriod.THREE_MONTH */\n      0x02\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29776  _investor.stakePeriod == StakingPeriod.THREE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_318\n      tag_87\n      jump\t// in\n    tag_318:\n    tag_317:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29735  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29747  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29776  _investor.stakePeriod == StakingPeriod.THREE_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_319\n      jumpi\n      tag_320\n      tag_87\n      jump\t// in\n    tag_320:\n    tag_319:\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29913  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_321\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":29814:29837  StakingPeriod.SIX_MONTH */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29837  _investor.stakePeriod == StakingPeriod.SIX_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_322\n      jumpi\n      tag_323\n      tag_87\n      jump\t// in\n    tag_323:\n    tag_322:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29798  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29810  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29837  _investor.stakePeriod == StakingPeriod.SIX_MONTH */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_325\n      tag_87\n      jump\t// in\n    tag_325:\n    tag_324:\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29913  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_326\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":29876:29898  StakingPeriod.ONE_YEAR */\n      0x04\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29898  _investor.stakePeriod == StakingPeriod.ONE_YEAR */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_327\n      jumpi\n      tag_328\n      tag_87\n      jump\t// in\n    tag_328:\n    tag_327:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29860  _investor */\n      dup3\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29872  _investor.stakePeriod */\n      0x20\n      add\n      mload\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29898  _investor.stakePeriod == StakingPeriod.ONE_YEAR */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_330\n      tag_87\n      jump\t// in\n    tag_330:\n    tag_329:\n      eq\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29913  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      tag_331\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":29912:29913  0 */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29913  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_332)\n    tag_331:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29901:29909  365 days */\n      0x01e13380\n        /* \"contracts/StakingUrgent/1stContract.sol\":29851:29913  _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_332:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29913  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_333)\n    tag_326:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29840:29848  120 days */\n      0x9e3400\n        /* \"contracts/StakingUrgent/1stContract.sol\":29789:29913  _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_333:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29913  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_334)\n    tag_321:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29779:29786  90 days */\n      0x76a700\n        /* \"contracts/StakingUrgent/1stContract.sol\":29726:29913  _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_334:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29913  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_335)\n    tag_316:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29716:29723  30 days */\n      0x278d00\n        /* \"contracts/StakingUrgent/1stContract.sol\":29665:29913  _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_335:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29913  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      jump(tag_336)\n    tag_311:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29655:29662  15 days */\n      0x13c680\n        /* \"contracts/StakingUrgent/1stContract.sol\":29604:29913  _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n    tag_336:\n        /* \"contracts/StakingUrgent/1stContract.sol\":29597:29913  return _investor.stakePeriod == StakingPeriod.ONE_MONTH ? 15 days : _investor.stakePeriod == StakingPeriod.TWO_MONTH ? 30 days : _investor.stakePeriod == StakingPeriod.THREE_MONTH ? 90 days : _investor.stakePeriod == StakingPeriod.SIX_MONTH ? 120 days : _investor.stakePeriod == StakingPeriod.ONE_YEAR ? 365 days : 0 */\n      0xffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":29497:29921  function getStakingPeriodInNumbers(stake memory _investor) internal pure returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingUrgent/1stContract.sol\":30894:31169  function isStakeholder(address _address)... */\n    tag_284:\n        /* \"contracts/StakingUrgent/1stContract.sol\":30981:30985  bool */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":30987:30994  uint256 */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":31015:31024  uint256 s */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31010:31136  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n    tag_338:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31034:31046  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31034:31053  stakeholders.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31030:31031  s */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":31030:31053  s < stakeholders.length */\n      lt\n        /* \"contracts/StakingUrgent/1stContract.sol\":31010:31136  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n      iszero\n      tag_339\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":31092:31104  stakeholders */\n      0x03\n        /* \"contracts/StakingUrgent/1stContract.sol\":31105:31106  s */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":31092:31107  stakeholders[s] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_341\n      jumpi\n      tag_342\n      tag_289\n      jump\t// in\n    tag_342:\n    tag_341:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":31080:31107  _address == stakeholders[s] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingUrgent/1stContract.sol\":31080:31088  _address */\n      dup5\n        /* \"contracts/StakingUrgent/1stContract.sol\":31080:31107  _address == stakeholders[s] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/StakingUrgent/1stContract.sol\":31076:31125  if (_address == stakeholders[s]) return (true, s) */\n      tag_344\n      jumpi\n        /* \"contracts/StakingUrgent/1stContract.sol\":31117:31121  true */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":31123:31124  s */\n      dup2\n        /* \"contracts/StakingUrgent/1stContract.sol\":31109:31125  return (true, s) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_337)\n        /* \"contracts/StakingUrgent/1stContract.sol\":31076:31125  if (_address == stakeholders[s]) return (true, s) */\n    tag_344:\n        /* \"contracts/StakingUrgent/1stContract.sol\":31060:31061  1 */\n      0x01\n        /* \"contracts/StakingUrgent/1stContract.sol\":31055:31061  s += 1 */\n      dup2\n      tag_345\n      swap2\n      swap1\n      tag_277\n      jump\t// in\n    tag_345:\n      swap1\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31010:31136  for (uint256 s = 0; s < stakeholders.length; s += 1){... */\n      jump(tag_338)\n    tag_339:\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":31153:31158  false */\n      0x00\n        /* \"contracts/StakingUrgent/1stContract.sol\":31160:31161  0 */\n      dup1\n        /* \"contracts/StakingUrgent/1stContract.sol\":31145:31162  return (false, 0) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/StakingUrgent/1stContract.sol\":30894:31169  function isStakeholder(address _address)... */\n    tag_337:\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_347:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_349:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_350:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_397\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_349\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_351:\n        /* \"#utility.yul\":641:665   */\n      tag_399\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_350\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_400:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_352:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_402\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_351\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:958   */\n    tag_353:\n        /* \"#utility.yul\":932:933   */\n      0x05\n        /* \"#utility.yul\":925:930   */\n      dup2\n        /* \"#utility.yul\":922:934   */\n      lt\n        /* \"#utility.yul\":912:952   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":948:949   */\n      0x00\n        /* \"#utility.yul\":945:946   */\n      dup1\n        /* \"#utility.yul\":938:950   */\n      revert\n        /* \"#utility.yul\":912:952   */\n    tag_404:\n        /* \"#utility.yul\":841:958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":964:1139   */\n    tag_354:\n        /* \"#utility.yul\":1028:1033   */\n      0x00\n        /* \"#utility.yul\":1066:1072   */\n      dup2\n        /* \"#utility.yul\":1053:1073   */\n      calldataload\n        /* \"#utility.yul\":1044:1073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1082:1133   */\n      tag_406\n        /* \"#utility.yul\":1127:1132   */\n      dup2\n        /* \"#utility.yul\":1082:1133   */\n      tag_353\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":964:1139   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1145:1655   */\n    tag_24:\n        /* \"#utility.yul\":1231:1237   */\n      0x00\n        /* \"#utility.yul\":1239:1245   */\n      dup1\n        /* \"#utility.yul\":1288:1290   */\n      0x40\n        /* \"#utility.yul\":1276:1285   */\n      dup4\n        /* \"#utility.yul\":1267:1274   */\n      dup6\n        /* \"#utility.yul\":1263:1286   */\n      sub\n        /* \"#utility.yul\":1259:1291   */\n      slt\n        /* \"#utility.yul\":1256:1375   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":1294:1373   */\n      tag_409\n      tag_347\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1256:1375   */\n    tag_408:\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1439:1492   */\n      tag_410\n        /* \"#utility.yul\":1484:1491   */\n      dup6\n        /* \"#utility.yul\":1475:1481   */\n      dup3\n        /* \"#utility.yul\":1464:1473   */\n      dup7\n        /* \"#utility.yul\":1460:1482   */\n      add\n        /* \"#utility.yul\":1439:1492   */\n      tag_352\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":1429:1492   */\n      swap3\n      pop\n        /* \"#utility.yul\":1385:1502   */\n      pop\n        /* \"#utility.yul\":1541:1543   */\n      0x20\n        /* \"#utility.yul\":1567:1638   */\n      tag_411\n        /* \"#utility.yul\":1630:1637   */\n      dup6\n        /* \"#utility.yul\":1621:1627   */\n      dup3\n        /* \"#utility.yul\":1610:1619   */\n      dup7\n        /* \"#utility.yul\":1606:1628   */\n      add\n        /* \"#utility.yul\":1567:1638   */\n      tag_354\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1557:1638   */\n      swap2\n      pop\n        /* \"#utility.yul\":1512:1648   */\n      pop\n        /* \"#utility.yul\":1145:1655   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1661:1841   */\n    tag_87:\n        /* \"#utility.yul\":1709:1786   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1706:1707   */\n      0x00\n        /* \"#utility.yul\":1699:1787   */\n      mstore\n        /* \"#utility.yul\":1806:1810   */\n      0x21\n        /* \"#utility.yul\":1803:1804   */\n      0x04\n        /* \"#utility.yul\":1796:1811   */\n      mstore\n        /* \"#utility.yul\":1830:1834   */\n      0x24\n        /* \"#utility.yul\":1827:1828   */\n      0x00\n        /* \"#utility.yul\":1820:1835   */\n      revert\n        /* \"#utility.yul\":1847:1970   */\n    tag_355:\n        /* \"#utility.yul\":1938:1939   */\n      0x05\n        /* \"#utility.yul\":1931:1936   */\n      dup2\n        /* \"#utility.yul\":1928:1940   */\n      lt\n        /* \"#utility.yul\":1918:1964   */\n      tag_414\n      jumpi\n        /* \"#utility.yul\":1944:1962   */\n      tag_415\n      tag_87\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1918:1964   */\n    tag_414:\n        /* \"#utility.yul\":1847:1970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2123   */\n    tag_356:\n        /* \"#utility.yul\":2031:2038   */\n      0x00\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2049:2065   */\n      swap1\n      pop\n        /* \"#utility.yul\":2066:2117   */\n      tag_417\n        /* \"#utility.yul\":2111:2116   */\n      dup3\n        /* \"#utility.yul\":2066:2117   */\n      tag_355\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":1976:2123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2129:2276   */\n    tag_357:\n        /* \"#utility.yul\":2195:2204   */\n      0x00\n        /* \"#utility.yul\":2228:2270   */\n      tag_419\n        /* \"#utility.yul\":2264:2269   */\n      dup3\n        /* \"#utility.yul\":2228:2270   */\n      tag_356\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2215:2270   */\n      swap1\n      pop\n        /* \"#utility.yul\":2129:2276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2282:2445   */\n    tag_358:\n        /* \"#utility.yul\":2385:2438   */\n      tag_421\n        /* \"#utility.yul\":2432:2437   */\n      dup2\n        /* \"#utility.yul\":2385:2438   */\n      tag_357\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2380:2383   */\n      dup3\n        /* \"#utility.yul\":2373:2439   */\n      mstore\n        /* \"#utility.yul\":2282:2445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2451:2705   */\n    tag_27:\n        /* \"#utility.yul\":2560:2564   */\n      0x00\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup3\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2575:2601   */\n      swap1\n      pop\n        /* \"#utility.yul\":2611:2698   */\n      tag_423\n        /* \"#utility.yul\":2695:2696   */\n      0x00\n        /* \"#utility.yul\":2684:2693   */\n      dup4\n        /* \"#utility.yul\":2680:2697   */\n      add\n        /* \"#utility.yul\":2671:2677   */\n      dup5\n        /* \"#utility.yul\":2611:2698   */\n      tag_358\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2451:2705   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:3076   */\n    tag_30:\n        /* \"#utility.yul\":2788:2794   */\n      0x00\n        /* \"#utility.yul\":2837:2839   */\n      0x20\n        /* \"#utility.yul\":2825:2834   */\n      dup3\n        /* \"#utility.yul\":2816:2823   */\n      dup5\n        /* \"#utility.yul\":2812:2835   */\n      sub\n        /* \"#utility.yul\":2808:2840   */\n      slt\n        /* \"#utility.yul\":2805:2924   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":2843:2922   */\n      tag_426\n      tag_347\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":2805:2924   */\n    tag_425:\n        /* \"#utility.yul\":2963:2964   */\n      0x00\n        /* \"#utility.yul\":2988:3059   */\n      tag_427\n        /* \"#utility.yul\":3051:3058   */\n      dup5\n        /* \"#utility.yul\":3042:3048   */\n      dup3\n        /* \"#utility.yul\":3031:3040   */\n      dup6\n        /* \"#utility.yul\":3027:3049   */\n      add\n        /* \"#utility.yul\":2988:3059   */\n      tag_354\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2978:3059   */\n      swap2\n      pop\n        /* \"#utility.yul\":2934:3069   */\n      pop\n        /* \"#utility.yul\":2711:3076   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3082:3159   */\n    tag_359:\n        /* \"#utility.yul\":3119:3126   */\n      0x00\n        /* \"#utility.yul\":3148:3153   */\n      dup2\n        /* \"#utility.yul\":3137:3153   */\n      swap1\n      pop\n        /* \"#utility.yul\":3082:3159   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3165:3283   */\n    tag_360:\n        /* \"#utility.yul\":3252:3276   */\n      tag_430\n        /* \"#utility.yul\":3270:3275   */\n      dup2\n        /* \"#utility.yul\":3252:3276   */\n      tag_359\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3247:3250   */\n      dup3\n        /* \"#utility.yul\":3240:3277   */\n      mstore\n        /* \"#utility.yul\":3165:3283   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3289:3511   */\n    tag_33:\n        /* \"#utility.yul\":3382:3386   */\n      0x00\n        /* \"#utility.yul\":3420:3422   */\n      0x20\n        /* \"#utility.yul\":3409:3418   */\n      dup3\n        /* \"#utility.yul\":3405:3423   */\n      add\n        /* \"#utility.yul\":3397:3423   */\n      swap1\n      pop\n        /* \"#utility.yul\":3433:3504   */\n      tag_432\n        /* \"#utility.yul\":3501:3502   */\n      0x00\n        /* \"#utility.yul\":3490:3499   */\n      dup4\n        /* \"#utility.yul\":3486:3503   */\n      add\n        /* \"#utility.yul\":3477:3483   */\n      dup5\n        /* \"#utility.yul\":3433:3504   */\n      tag_360\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3289:3511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3517:3991   */\n    tag_41:\n        /* \"#utility.yul\":3682:3686   */\n      0x00\n        /* \"#utility.yul\":3720:3722   */\n      0x60\n        /* \"#utility.yul\":3709:3718   */\n      dup3\n        /* \"#utility.yul\":3705:3723   */\n      add\n        /* \"#utility.yul\":3697:3723   */\n      swap1\n      pop\n        /* \"#utility.yul\":3733:3804   */\n      tag_434\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3790:3799   */\n      dup4\n        /* \"#utility.yul\":3786:3803   */\n      add\n        /* \"#utility.yul\":3777:3783   */\n      dup7\n        /* \"#utility.yul\":3733:3804   */\n      tag_360\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3814:3902   */\n      tag_435\n        /* \"#utility.yul\":3898:3900   */\n      0x20\n        /* \"#utility.yul\":3887:3896   */\n      dup4\n        /* \"#utility.yul\":3883:3901   */\n      add\n        /* \"#utility.yul\":3874:3880   */\n      dup6\n        /* \"#utility.yul\":3814:3902   */\n      tag_358\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3912:3984   */\n      tag_436\n        /* \"#utility.yul\":3980:3982   */\n      0x40\n        /* \"#utility.yul\":3969:3978   */\n      dup4\n        /* \"#utility.yul\":3965:3983   */\n      add\n        /* \"#utility.yul\":3956:3962   */\n      dup5\n        /* \"#utility.yul\":3912:3984   */\n      tag_360\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3517:3991   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3997:4119   */\n    tag_361:\n        /* \"#utility.yul\":4070:4094   */\n      tag_438\n        /* \"#utility.yul\":4088:4093   */\n      dup2\n        /* \"#utility.yul\":4070:4094   */\n      tag_359\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4063:4068   */\n      dup2\n        /* \"#utility.yul\":4060:4095   */\n      eq\n        /* \"#utility.yul\":4050:4113   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":4109:4110   */\n      0x00\n        /* \"#utility.yul\":4106:4107   */\n      dup1\n        /* \"#utility.yul\":4099:4111   */\n      revert\n        /* \"#utility.yul\":4050:4113   */\n    tag_439:\n        /* \"#utility.yul\":3997:4119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4125:4264   */\n    tag_362:\n        /* \"#utility.yul\":4171:4176   */\n      0x00\n        /* \"#utility.yul\":4209:4215   */\n      dup2\n        /* \"#utility.yul\":4196:4216   */\n      calldataload\n        /* \"#utility.yul\":4187:4216   */\n      swap1\n      pop\n        /* \"#utility.yul\":4225:4258   */\n      tag_441\n        /* \"#utility.yul\":4252:4257   */\n      dup2\n        /* \"#utility.yul\":4225:4258   */\n      tag_361\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4125:4264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4270:4780   */\n    tag_46:\n        /* \"#utility.yul\":4356:4362   */\n      0x00\n        /* \"#utility.yul\":4364:4370   */\n      dup1\n        /* \"#utility.yul\":4413:4415   */\n      0x40\n        /* \"#utility.yul\":4401:4410   */\n      dup4\n        /* \"#utility.yul\":4392:4399   */\n      dup6\n        /* \"#utility.yul\":4388:4411   */\n      sub\n        /* \"#utility.yul\":4384:4416   */\n      slt\n        /* \"#utility.yul\":4381:4500   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4419:4498   */\n      tag_444\n      tag_347\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4381:4500   */\n    tag_443:\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4564:4617   */\n      tag_445\n        /* \"#utility.yul\":4609:4616   */\n      dup6\n        /* \"#utility.yul\":4600:4606   */\n      dup3\n        /* \"#utility.yul\":4589:4598   */\n      dup7\n        /* \"#utility.yul\":4585:4607   */\n      add\n        /* \"#utility.yul\":4564:4617   */\n      tag_362\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4554:4617   */\n      swap3\n      pop\n        /* \"#utility.yul\":4510:4627   */\n      pop\n        /* \"#utility.yul\":4666:4668   */\n      0x20\n        /* \"#utility.yul\":4692:4763   */\n      tag_446\n        /* \"#utility.yul\":4755:4762   */\n      dup6\n        /* \"#utility.yul\":4746:4752   */\n      dup3\n        /* \"#utility.yul\":4735:4744   */\n      dup7\n        /* \"#utility.yul\":4731:4753   */\n      add\n        /* \"#utility.yul\":4692:4763   */\n      tag_354\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":4682:4763   */\n      swap2\n      pop\n        /* \"#utility.yul\":4637:4773   */\n      pop\n        /* \"#utility.yul\":4270:4780   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4904   */\n    tag_363:\n        /* \"#utility.yul\":4873:4897   */\n      tag_448\n        /* \"#utility.yul\":4891:4896   */\n      dup2\n        /* \"#utility.yul\":4873:4897   */\n      tag_350\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4868:4871   */\n      dup3\n        /* \"#utility.yul\":4861:4898   */\n      mstore\n        /* \"#utility.yul\":4786:4904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4910:5132   */\n    tag_54:\n        /* \"#utility.yul\":5003:5007   */\n      0x00\n        /* \"#utility.yul\":5041:5043   */\n      0x20\n        /* \"#utility.yul\":5030:5039   */\n      dup3\n        /* \"#utility.yul\":5026:5044   */\n      add\n        /* \"#utility.yul\":5018:5044   */\n      swap1\n      pop\n        /* \"#utility.yul\":5054:5125   */\n      tag_450\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5111:5120   */\n      dup4\n        /* \"#utility.yul\":5107:5124   */\n      add\n        /* \"#utility.yul\":5098:5104   */\n      dup5\n        /* \"#utility.yul\":5054:5125   */\n      tag_363\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":4910:5132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5138:5224   */\n    tag_364:\n        /* \"#utility.yul\":5173:5180   */\n      0x00\n        /* \"#utility.yul\":5213:5217   */\n      0xff\n        /* \"#utility.yul\":5206:5211   */\n      dup3\n        /* \"#utility.yul\":5202:5218   */\n      and\n        /* \"#utility.yul\":5191:5218   */\n      swap1\n      pop\n        /* \"#utility.yul\":5138:5224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5230:5348   */\n    tag_365:\n        /* \"#utility.yul\":5301:5323   */\n      tag_453\n        /* \"#utility.yul\":5317:5322   */\n      dup2\n        /* \"#utility.yul\":5301:5323   */\n      tag_364\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5294:5299   */\n      dup2\n        /* \"#utility.yul\":5291:5324   */\n      eq\n        /* \"#utility.yul\":5281:5342   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":5338:5339   */\n      0x00\n        /* \"#utility.yul\":5335:5336   */\n      dup1\n        /* \"#utility.yul\":5328:5340   */\n      revert\n        /* \"#utility.yul\":5281:5342   */\n    tag_454:\n        /* \"#utility.yul\":5230:5348   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5354:5489   */\n    tag_366:\n        /* \"#utility.yul\":5398:5403   */\n      0x00\n        /* \"#utility.yul\":5436:5442   */\n      dup2\n        /* \"#utility.yul\":5423:5443   */\n      calldataload\n        /* \"#utility.yul\":5414:5443   */\n      swap1\n      pop\n        /* \"#utility.yul\":5452:5483   */\n      tag_456\n        /* \"#utility.yul\":5477:5482   */\n      dup2\n        /* \"#utility.yul\":5452:5483   */\n      tag_365\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5354:5489   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:6001   */\n    tag_61:\n        /* \"#utility.yul\":5579:5585   */\n      0x00\n        /* \"#utility.yul\":5587:5593   */\n      dup1\n        /* \"#utility.yul\":5636:5638   */\n      0x40\n        /* \"#utility.yul\":5624:5633   */\n      dup4\n        /* \"#utility.yul\":5615:5622   */\n      dup6\n        /* \"#utility.yul\":5611:5634   */\n      sub\n        /* \"#utility.yul\":5607:5639   */\n      slt\n        /* \"#utility.yul\":5604:5723   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":5642:5721   */\n      tag_459\n      tag_347\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5604:5723   */\n    tag_458:\n        /* \"#utility.yul\":5762:5763   */\n      0x00\n        /* \"#utility.yul\":5787:5838   */\n      tag_460\n        /* \"#utility.yul\":5830:5837   */\n      dup6\n        /* \"#utility.yul\":5821:5827   */\n      dup3\n        /* \"#utility.yul\":5810:5819   */\n      dup7\n        /* \"#utility.yul\":5806:5828   */\n      add\n        /* \"#utility.yul\":5787:5838   */\n      tag_366\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5777:5838   */\n      swap3\n      pop\n        /* \"#utility.yul\":5733:5848   */\n      pop\n        /* \"#utility.yul\":5887:5889   */\n      0x20\n        /* \"#utility.yul\":5913:5984   */\n      tag_461\n        /* \"#utility.yul\":5976:5983   */\n      dup6\n        /* \"#utility.yul\":5967:5973   */\n      dup3\n        /* \"#utility.yul\":5956:5965   */\n      dup7\n        /* \"#utility.yul\":5952:5974   */\n      add\n        /* \"#utility.yul\":5913:5984   */\n      tag_354\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5903:5984   */\n      swap2\n      pop\n        /* \"#utility.yul\":5858:5994   */\n      pop\n        /* \"#utility.yul\":5495:6001   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6007:6067   */\n    tag_367:\n        /* \"#utility.yul\":6035:6038   */\n      0x00\n        /* \"#utility.yul\":6056:6061   */\n      dup2\n        /* \"#utility.yul\":6049:6061   */\n      swap1\n      pop\n        /* \"#utility.yul\":6007:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6215   */\n    tag_368:\n        /* \"#utility.yul\":6123:6132   */\n      0x00\n        /* \"#utility.yul\":6156:6209   */\n      tag_464\n        /* \"#utility.yul\":6174:6208   */\n      tag_465\n        /* \"#utility.yul\":6183:6207   */\n      tag_466\n        /* \"#utility.yul\":6201:6206   */\n      dup5\n        /* \"#utility.yul\":6183:6207   */\n      tag_349\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6174:6208   */\n      tag_367\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6156:6209   */\n      tag_349\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6143:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6073:6215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6347   */\n    tag_369:\n        /* \"#utility.yul\":6271:6280   */\n      0x00\n        /* \"#utility.yul\":6304:6341   */\n      tag_468\n        /* \"#utility.yul\":6335:6340   */\n      dup3\n        /* \"#utility.yul\":6304:6341   */\n      tag_368\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6291:6341   */\n      swap1\n      pop\n        /* \"#utility.yul\":6221:6347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6353:6493   */\n    tag_370:\n        /* \"#utility.yul\":6417:6426   */\n      0x00\n        /* \"#utility.yul\":6450:6487   */\n      tag_470\n        /* \"#utility.yul\":6481:6486   */\n      dup3\n        /* \"#utility.yul\":6450:6487   */\n      tag_369\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":6437:6487   */\n      swap1\n      pop\n        /* \"#utility.yul\":6353:6493   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6499:6658   */\n    tag_371:\n        /* \"#utility.yul\":6600:6651   */\n      tag_472\n        /* \"#utility.yul\":6645:6650   */\n      dup2\n        /* \"#utility.yul\":6600:6651   */\n      tag_370\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6595:6598   */\n      dup3\n        /* \"#utility.yul\":6588:6652   */\n      mstore\n        /* \"#utility.yul\":6499:6658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6664:6914   */\n    tag_70:\n        /* \"#utility.yul\":6771:6775   */\n      0x00\n        /* \"#utility.yul\":6809:6811   */\n      0x20\n        /* \"#utility.yul\":6798:6807   */\n      dup3\n        /* \"#utility.yul\":6794:6812   */\n      add\n        /* \"#utility.yul\":6786:6812   */\n      swap1\n      pop\n        /* \"#utility.yul\":6822:6907   */\n      tag_474\n        /* \"#utility.yul\":6904:6905   */\n      0x00\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6889:6906   */\n      add\n        /* \"#utility.yul\":6880:6886   */\n      dup5\n        /* \"#utility.yul\":6822:6907   */\n      tag_371\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6664:6914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6920:7249   */\n    tag_82:\n        /* \"#utility.yul\":6979:6985   */\n      0x00\n        /* \"#utility.yul\":7028:7030   */\n      0x20\n        /* \"#utility.yul\":7016:7025   */\n      dup3\n        /* \"#utility.yul\":7007:7014   */\n      dup5\n        /* \"#utility.yul\":7003:7026   */\n      sub\n        /* \"#utility.yul\":6999:7031   */\n      slt\n        /* \"#utility.yul\":6996:7115   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":7034:7113   */\n      tag_477\n      tag_347\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":6996:7115   */\n    tag_476:\n        /* \"#utility.yul\":7154:7155   */\n      0x00\n        /* \"#utility.yul\":7179:7232   */\n      tag_478\n        /* \"#utility.yul\":7224:7231   */\n      dup5\n        /* \"#utility.yul\":7215:7221   */\n      dup3\n        /* \"#utility.yul\":7204:7213   */\n      dup6\n        /* \"#utility.yul\":7200:7222   */\n      add\n        /* \"#utility.yul\":7179:7232   */\n      tag_352\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7169:7232   */\n      swap2\n      pop\n        /* \"#utility.yul\":7125:7242   */\n      pop\n        /* \"#utility.yul\":6920:7249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7255:7435   */\n    tag_372:\n        /* \"#utility.yul\":7303:7380   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7300:7301   */\n      0x00\n        /* \"#utility.yul\":7293:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x11\n        /* \"#utility.yul\":7397:7398   */\n      0x04\n        /* \"#utility.yul\":7390:7405   */\n      mstore\n        /* \"#utility.yul\":7424:7428   */\n      0x24\n        /* \"#utility.yul\":7421:7422   */\n      0x00\n        /* \"#utility.yul\":7414:7429   */\n      revert\n        /* \"#utility.yul\":7441:7635   */\n    tag_105:\n        /* \"#utility.yul\":7481:7485   */\n      0x00\n        /* \"#utility.yul\":7501:7521   */\n      tag_481\n        /* \"#utility.yul\":7519:7520   */\n      dup3\n        /* \"#utility.yul\":7501:7521   */\n      tag_359\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7496:7521   */\n      swap2\n      pop\n        /* \"#utility.yul\":7535:7555   */\n      tag_482\n        /* \"#utility.yul\":7553:7554   */\n      dup4\n        /* \"#utility.yul\":7535:7555   */\n      tag_359\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":7530:7555   */\n      swap3\n      pop\n        /* \"#utility.yul\":7579:7580   */\n      dup3\n        /* \"#utility.yul\":7576:7577   */\n      dup3\n        /* \"#utility.yul\":7572:7581   */\n      sub\n        /* \"#utility.yul\":7564:7581   */\n      swap1\n      pop\n        /* \"#utility.yul\":7603:7604   */\n      dup2\n        /* \"#utility.yul\":7597:7601   */\n      dup2\n        /* \"#utility.yul\":7594:7605   */\n      gt\n        /* \"#utility.yul\":7591:7628   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":7608:7626   */\n      tag_484\n      tag_372\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7591:7628   */\n    tag_483:\n        /* \"#utility.yul\":7441:7635   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7641:7810   */\n    tag_373:\n        /* \"#utility.yul\":7725:7736   */\n      0x00\n        /* \"#utility.yul\":7759:7765   */\n      dup3\n        /* \"#utility.yul\":7754:7757   */\n      dup3\n        /* \"#utility.yul\":7747:7766   */\n      mstore\n        /* \"#utility.yul\":7799:7803   */\n      0x20\n        /* \"#utility.yul\":7794:7797   */\n      dup3\n        /* \"#utility.yul\":7790:7804   */\n      add\n        /* \"#utility.yul\":7775:7804   */\n      swap1\n      pop\n        /* \"#utility.yul\":7641:7810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7816:7996   */\n    tag_374:\n        /* \"#utility.yul\":7956:7988   */\n      0x7374616b652076616c75652073686f756c64206e6f74206265207a65726f0000\n        /* \"#utility.yul\":7952:7953   */\n      0x00\n        /* \"#utility.yul\":7944:7950   */\n      dup3\n        /* \"#utility.yul\":7940:7954   */\n      add\n        /* \"#utility.yul\":7933:7989   */\n      mstore\n        /* \"#utility.yul\":7816:7996   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8002:8368   */\n    tag_375:\n        /* \"#utility.yul\":8144:8147   */\n      0x00\n        /* \"#utility.yul\":8165:8232   */\n      tag_488\n        /* \"#utility.yul\":8229:8231   */\n      0x1e\n        /* \"#utility.yul\":8224:8227   */\n      dup4\n        /* \"#utility.yul\":8165:8232   */\n      tag_373\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8158:8232   */\n      swap2\n      pop\n        /* \"#utility.yul\":8241:8334   */\n      tag_489\n        /* \"#utility.yul\":8330:8333   */\n      dup3\n        /* \"#utility.yul\":8241:8334   */\n      tag_374\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":8359:8361   */\n      0x20\n        /* \"#utility.yul\":8354:8357   */\n      dup3\n        /* \"#utility.yul\":8350:8362   */\n      add\n        /* \"#utility.yul\":8343:8362   */\n      swap1\n      pop\n        /* \"#utility.yul\":8002:8368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8374:8793   */\n    tag_121:\n        /* \"#utility.yul\":8540:8544   */\n      0x00\n        /* \"#utility.yul\":8578:8580   */\n      0x20\n        /* \"#utility.yul\":8567:8576   */\n      dup3\n        /* \"#utility.yul\":8563:8581   */\n      add\n        /* \"#utility.yul\":8555:8581   */\n      swap1\n      pop\n        /* \"#utility.yul\":8627:8636   */\n      dup2\n        /* \"#utility.yul\":8621:8625   */\n      dup2\n        /* \"#utility.yul\":8617:8637   */\n      sub\n        /* \"#utility.yul\":8613:8614   */\n      0x00\n        /* \"#utility.yul\":8602:8611   */\n      dup4\n        /* \"#utility.yul\":8598:8615   */\n      add\n        /* \"#utility.yul\":8591:8638   */\n      mstore\n        /* \"#utility.yul\":8655:8786   */\n      tag_491\n        /* \"#utility.yul\":8781:8785   */\n      dup2\n        /* \"#utility.yul\":8655:8786   */\n      tag_375\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8647:8786   */\n      swap1\n      pop\n        /* \"#utility.yul\":8374:8793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8799:8978   */\n    tag_376:\n        /* \"#utility.yul\":8939:8970   */\n      0x5374616b696e6720706572696f64206973206e6f742065787069726564000000\n        /* \"#utility.yul\":8935:8936   */\n      0x00\n        /* \"#utility.yul\":8927:8933   */\n      dup3\n        /* \"#utility.yul\":8923:8937   */\n      add\n        /* \"#utility.yul\":8916:8971   */\n      mstore\n        /* \"#utility.yul\":8799:8978   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8984:9350   */\n    tag_377:\n        /* \"#utility.yul\":9126:9129   */\n      0x00\n        /* \"#utility.yul\":9147:9214   */\n      tag_494\n        /* \"#utility.yul\":9211:9213   */\n      0x1d\n        /* \"#utility.yul\":9206:9209   */\n      dup4\n        /* \"#utility.yul\":9147:9214   */\n      tag_373\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9140:9214   */\n      swap2\n      pop\n        /* \"#utility.yul\":9223:9316   */\n      tag_495\n        /* \"#utility.yul\":9312:9315   */\n      dup3\n        /* \"#utility.yul\":9223:9316   */\n      tag_376\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9341:9343   */\n      0x20\n        /* \"#utility.yul\":9336:9339   */\n      dup3\n        /* \"#utility.yul\":9332:9344   */\n      add\n        /* \"#utility.yul\":9325:9344   */\n      swap1\n      pop\n        /* \"#utility.yul\":8984:9350   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9356:9775   */\n    tag_134:\n        /* \"#utility.yul\":9522:9526   */\n      0x00\n        /* \"#utility.yul\":9560:9562   */\n      0x20\n        /* \"#utility.yul\":9549:9558   */\n      dup3\n        /* \"#utility.yul\":9545:9563   */\n      add\n        /* \"#utility.yul\":9537:9563   */\n      swap1\n      pop\n        /* \"#utility.yul\":9609:9618   */\n      dup2\n        /* \"#utility.yul\":9603:9607   */\n      dup2\n        /* \"#utility.yul\":9599:9619   */\n      sub\n        /* \"#utility.yul\":9595:9596   */\n      0x00\n        /* \"#utility.yul\":9584:9593   */\n      dup4\n        /* \"#utility.yul\":9580:9597   */\n      add\n        /* \"#utility.yul\":9573:9620   */\n      mstore\n        /* \"#utility.yul\":9637:9768   */\n      tag_497\n        /* \"#utility.yul\":9763:9767   */\n      dup2\n        /* \"#utility.yul\":9637:9768   */\n      tag_377\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":9629:9768   */\n      swap1\n      pop\n        /* \"#utility.yul\":9356:9775   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9781:9951   */\n    tag_378:\n        /* \"#utility.yul\":9921:9943   */\n      0x496e76616c6964205374616b6520416d6f756e74000000000000000000000000\n        /* \"#utility.yul\":9917:9918   */\n      0x00\n        /* \"#utility.yul\":9909:9915   */\n      dup3\n        /* \"#utility.yul\":9905:9919   */\n      add\n        /* \"#utility.yul\":9898:9944   */\n      mstore\n        /* \"#utility.yul\":9781:9951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9957:10323   */\n    tag_379:\n        /* \"#utility.yul\":10099:10102   */\n      0x00\n        /* \"#utility.yul\":10120:10187   */\n      tag_500\n        /* \"#utility.yul\":10184:10186   */\n      0x14\n        /* \"#utility.yul\":10179:10182   */\n      dup4\n        /* \"#utility.yul\":10120:10187   */\n      tag_373\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10113:10187   */\n      swap2\n      pop\n        /* \"#utility.yul\":10196:10289   */\n      tag_501\n        /* \"#utility.yul\":10285:10288   */\n      dup3\n        /* \"#utility.yul\":10196:10289   */\n      tag_378\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":10314:10316   */\n      0x20\n        /* \"#utility.yul\":10309:10312   */\n      dup3\n        /* \"#utility.yul\":10305:10317   */\n      add\n        /* \"#utility.yul\":10298:10317   */\n      swap1\n      pop\n        /* \"#utility.yul\":9957:10323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10329:10748   */\n    tag_137:\n        /* \"#utility.yul\":10495:10499   */\n      0x00\n        /* \"#utility.yul\":10533:10535   */\n      0x20\n        /* \"#utility.yul\":10522:10531   */\n      dup3\n        /* \"#utility.yul\":10518:10536   */\n      add\n        /* \"#utility.yul\":10510:10536   */\n      swap1\n      pop\n        /* \"#utility.yul\":10582:10591   */\n      dup2\n        /* \"#utility.yul\":10576:10580   */\n      dup2\n        /* \"#utility.yul\":10572:10592   */\n      sub\n        /* \"#utility.yul\":10568:10569   */\n      0x00\n        /* \"#utility.yul\":10557:10566   */\n      dup4\n        /* \"#utility.yul\":10553:10570   */\n      add\n        /* \"#utility.yul\":10546:10593   */\n      mstore\n        /* \"#utility.yul\":10610:10741   */\n      tag_503\n        /* \"#utility.yul\":10736:10740   */\n      dup2\n        /* \"#utility.yul\":10610:10741   */\n      tag_379\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10602:10741   */\n      swap1\n      pop\n        /* \"#utility.yul\":10329:10748   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10754:11086   */\n    tag_158:\n        /* \"#utility.yul\":10875:10879   */\n      0x00\n        /* \"#utility.yul\":10913:10915   */\n      0x40\n        /* \"#utility.yul\":10902:10911   */\n      dup3\n        /* \"#utility.yul\":10898:10916   */\n      add\n        /* \"#utility.yul\":10890:10916   */\n      swap1\n      pop\n        /* \"#utility.yul\":10926:10997   */\n      tag_505\n        /* \"#utility.yul\":10994:10995   */\n      0x00\n        /* \"#utility.yul\":10983:10992   */\n      dup4\n        /* \"#utility.yul\":10979:10996   */\n      add\n        /* \"#utility.yul\":10970:10976   */\n      dup6\n        /* \"#utility.yul\":10926:10997   */\n      tag_363\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":11007:11079   */\n      tag_506\n        /* \"#utility.yul\":11075:11077   */\n      0x20\n        /* \"#utility.yul\":11064:11073   */\n      dup4\n        /* \"#utility.yul\":11060:11078   */\n      add\n        /* \"#utility.yul\":11051:11057   */\n      dup5\n        /* \"#utility.yul\":11007:11079   */\n      tag_360\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":10754:11086   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11092:11182   */\n    tag_380:\n        /* \"#utility.yul\":11126:11133   */\n      0x00\n        /* \"#utility.yul\":11169:11174   */\n      dup2\n        /* \"#utility.yul\":11162:11175   */\n      iszero\n        /* \"#utility.yul\":11155:11176   */\n      iszero\n        /* \"#utility.yul\":11144:11176   */\n      swap1\n      pop\n        /* \"#utility.yul\":11092:11182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11188:11304   */\n    tag_381:\n        /* \"#utility.yul\":11258:11279   */\n      tag_509\n        /* \"#utility.yul\":11273:11278   */\n      dup2\n        /* \"#utility.yul\":11258:11279   */\n      tag_380\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11251:11256   */\n      dup2\n        /* \"#utility.yul\":11248:11280   */\n      eq\n        /* \"#utility.yul\":11238:11298   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":11294:11295   */\n      0x00\n        /* \"#utility.yul\":11291:11292   */\n      dup1\n        /* \"#utility.yul\":11284:11296   */\n      revert\n        /* \"#utility.yul\":11238:11298   */\n    tag_510:\n        /* \"#utility.yul\":11188:11304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11310:11447   */\n    tag_382:\n        /* \"#utility.yul\":11364:11369   */\n      0x00\n        /* \"#utility.yul\":11395:11401   */\n      dup2\n        /* \"#utility.yul\":11389:11402   */\n      mload\n        /* \"#utility.yul\":11380:11402   */\n      swap1\n      pop\n        /* \"#utility.yul\":11411:11441   */\n      tag_512\n        /* \"#utility.yul\":11435:11440   */\n      dup2\n        /* \"#utility.yul\":11411:11441   */\n      tag_381\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11310:11447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11798   */\n    tag_162:\n        /* \"#utility.yul\":11520:11526   */\n      0x00\n        /* \"#utility.yul\":11569:11571   */\n      0x20\n        /* \"#utility.yul\":11557:11566   */\n      dup3\n        /* \"#utility.yul\":11548:11555   */\n      dup5\n        /* \"#utility.yul\":11544:11567   */\n      sub\n        /* \"#utility.yul\":11540:11572   */\n      slt\n        /* \"#utility.yul\":11537:11656   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":11575:11654   */\n      tag_515\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11537:11656   */\n    tag_514:\n        /* \"#utility.yul\":11695:11696   */\n      0x00\n        /* \"#utility.yul\":11720:11781   */\n      tag_516\n        /* \"#utility.yul\":11773:11780   */\n      dup5\n        /* \"#utility.yul\":11764:11770   */\n      dup3\n        /* \"#utility.yul\":11753:11762   */\n      dup6\n        /* \"#utility.yul\":11749:11771   */\n      add\n        /* \"#utility.yul\":11720:11781   */\n      tag_382\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":11710:11781   */\n      swap2\n      pop\n        /* \"#utility.yul\":11666:11791   */\n      pop\n        /* \"#utility.yul\":11453:11798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11804:12246   */\n    tag_165:\n        /* \"#utility.yul\":11953:11957   */\n      0x00\n        /* \"#utility.yul\":11991:11993   */\n      0x60\n        /* \"#utility.yul\":11980:11989   */\n      dup3\n        /* \"#utility.yul\":11976:11994   */\n      add\n        /* \"#utility.yul\":11968:11994   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12075   */\n      tag_518\n        /* \"#utility.yul\":12072:12073   */\n      0x00\n        /* \"#utility.yul\":12061:12070   */\n      dup4\n        /* \"#utility.yul\":12057:12074   */\n      add\n        /* \"#utility.yul\":12048:12054   */\n      dup7\n        /* \"#utility.yul\":12004:12075   */\n      tag_363\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":12085:12157   */\n      tag_519\n        /* \"#utility.yul\":12153:12155   */\n      0x20\n        /* \"#utility.yul\":12142:12151   */\n      dup4\n        /* \"#utility.yul\":12138:12156   */\n      add\n        /* \"#utility.yul\":12129:12135   */\n      dup6\n        /* \"#utility.yul\":12085:12157   */\n      tag_363\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":12167:12239   */\n      tag_520\n        /* \"#utility.yul\":12235:12237   */\n      0x40\n        /* \"#utility.yul\":12224:12233   */\n      dup4\n        /* \"#utility.yul\":12220:12238   */\n      add\n        /* \"#utility.yul\":12211:12217   */\n      dup5\n        /* \"#utility.yul\":12167:12239   */\n      tag_360\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":11804:12246   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12252:12395   */\n    tag_383:\n        /* \"#utility.yul\":12309:12314   */\n      0x00\n        /* \"#utility.yul\":12340:12346   */\n      dup2\n        /* \"#utility.yul\":12334:12347   */\n      mload\n        /* \"#utility.yul\":12325:12347   */\n      swap1\n      pop\n        /* \"#utility.yul\":12356:12389   */\n      tag_522\n        /* \"#utility.yul\":12383:12388   */\n      dup2\n        /* \"#utility.yul\":12356:12389   */\n      tag_361\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":12252:12395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12401:12752   */\n    tag_191:\n        /* \"#utility.yul\":12471:12477   */\n      0x00\n        /* \"#utility.yul\":12520:12522   */\n      0x20\n        /* \"#utility.yul\":12508:12517   */\n      dup3\n        /* \"#utility.yul\":12499:12506   */\n      dup5\n        /* \"#utility.yul\":12495:12518   */\n      sub\n        /* \"#utility.yul\":12491:12523   */\n      slt\n        /* \"#utility.yul\":12488:12607   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":12526:12605   */\n      tag_525\n      tag_347\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12488:12607   */\n    tag_524:\n        /* \"#utility.yul\":12646:12647   */\n      0x00\n        /* \"#utility.yul\":12671:12735   */\n      tag_526\n        /* \"#utility.yul\":12727:12734   */\n      dup5\n        /* \"#utility.yul\":12718:12724   */\n      dup3\n        /* \"#utility.yul\":12707:12716   */\n      dup6\n        /* \"#utility.yul\":12703:12725   */\n      add\n        /* \"#utility.yul\":12671:12735   */\n      tag_383\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":12661:12735   */\n      swap2\n      pop\n        /* \"#utility.yul\":12617:12745   */\n      pop\n        /* \"#utility.yul\":12401:12752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12758:13090   */\n    tag_194:\n        /* \"#utility.yul\":12879:12883   */\n      0x00\n        /* \"#utility.yul\":12917:12919   */\n      0x40\n        /* \"#utility.yul\":12906:12915   */\n      dup3\n        /* \"#utility.yul\":12902:12920   */\n      add\n        /* \"#utility.yul\":12894:12920   */\n      swap1\n      pop\n        /* \"#utility.yul\":12930:13001   */\n      tag_528\n        /* \"#utility.yul\":12998:12999   */\n      0x00\n        /* \"#utility.yul\":12987:12996   */\n      dup4\n        /* \"#utility.yul\":12983:13000   */\n      add\n        /* \"#utility.yul\":12974:12980   */\n      dup6\n        /* \"#utility.yul\":12930:13001   */\n      tag_363\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13011:13083   */\n      tag_529\n        /* \"#utility.yul\":13079:13081   */\n      0x20\n        /* \"#utility.yul\":13068:13077   */\n      dup4\n        /* \"#utility.yul\":13064:13082   */\n      add\n        /* \"#utility.yul\":13055:13061   */\n      dup5\n        /* \"#utility.yul\":13011:13083   */\n      tag_363\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":12758:13090   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13096:13267   */\n    tag_384:\n        /* \"#utility.yul\":13236:13259   */\n      0x546f6b656e205472616e73666572204661696c65640000000000000000000000\n        /* \"#utility.yul\":13232:13233   */\n      0x00\n        /* \"#utility.yul\":13224:13230   */\n      dup3\n        /* \"#utility.yul\":13220:13234   */\n      add\n        /* \"#utility.yul\":13213:13260   */\n      mstore\n        /* \"#utility.yul\":13096:13267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13273:13639   */\n    tag_385:\n        /* \"#utility.yul\":13415:13418   */\n      0x00\n        /* \"#utility.yul\":13436:13503   */\n      tag_532\n        /* \"#utility.yul\":13500:13502   */\n      0x15\n        /* \"#utility.yul\":13495:13498   */\n      dup4\n        /* \"#utility.yul\":13436:13503   */\n      tag_373\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":13429:13503   */\n      swap2\n      pop\n        /* \"#utility.yul\":13512:13605   */\n      tag_533\n        /* \"#utility.yul\":13601:13604   */\n      dup3\n        /* \"#utility.yul\":13512:13605   */\n      tag_384\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13630:13632   */\n      0x20\n        /* \"#utility.yul\":13625:13628   */\n      dup3\n        /* \"#utility.yul\":13621:13633   */\n      add\n        /* \"#utility.yul\":13614:13633   */\n      swap1\n      pop\n        /* \"#utility.yul\":13273:13639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13645:14064   */\n    tag_209:\n        /* \"#utility.yul\":13811:13815   */\n      0x00\n        /* \"#utility.yul\":13849:13851   */\n      0x20\n        /* \"#utility.yul\":13838:13847   */\n      dup3\n        /* \"#utility.yul\":13834:13852   */\n      add\n        /* \"#utility.yul\":13826:13852   */\n      swap1\n      pop\n        /* \"#utility.yul\":13898:13907   */\n      dup2\n        /* \"#utility.yul\":13892:13896   */\n      dup2\n        /* \"#utility.yul\":13888:13908   */\n      sub\n        /* \"#utility.yul\":13884:13885   */\n      0x00\n        /* \"#utility.yul\":13873:13882   */\n      dup4\n        /* \"#utility.yul\":13869:13886   */\n      add\n        /* \"#utility.yul\":13862:13909   */\n      mstore\n        /* \"#utility.yul\":13926:14057   */\n      tag_535\n        /* \"#utility.yul\":14052:14056   */\n      dup2\n        /* \"#utility.yul\":13926:14057   */\n      tag_385\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":13918:14057   */\n      swap1\n      pop\n        /* \"#utility.yul\":13645:14064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14070:14295   */\n    tag_386:\n        /* \"#utility.yul\":14210:14244   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14206:14207   */\n      0x00\n        /* \"#utility.yul\":14198:14204   */\n      dup3\n        /* \"#utility.yul\":14194:14208   */\n      add\n        /* \"#utility.yul\":14187:14245   */\n      mstore\n        /* \"#utility.yul\":14279:14287   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14274:14276   */\n      0x20\n        /* \"#utility.yul\":14266:14272   */\n      dup3\n        /* \"#utility.yul\":14262:14277   */\n      add\n        /* \"#utility.yul\":14255:14288   */\n      mstore\n        /* \"#utility.yul\":14070:14295   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14301:14667   */\n    tag_387:\n        /* \"#utility.yul\":14443:14446   */\n      0x00\n        /* \"#utility.yul\":14464:14531   */\n      tag_538\n        /* \"#utility.yul\":14528:14530   */\n      0x26\n        /* \"#utility.yul\":14523:14526   */\n      dup4\n        /* \"#utility.yul\":14464:14531   */\n      tag_373\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":14457:14531   */\n      swap2\n      pop\n        /* \"#utility.yul\":14540:14633   */\n      tag_539\n        /* \"#utility.yul\":14629:14632   */\n      dup3\n        /* \"#utility.yul\":14540:14633   */\n      tag_386\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14658:14660   */\n      0x40\n        /* \"#utility.yul\":14653:14656   */\n      dup3\n        /* \"#utility.yul\":14649:14661   */\n      add\n        /* \"#utility.yul\":14642:14661   */\n      swap1\n      pop\n        /* \"#utility.yul\":14301:14667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14673:15092   */\n    tag_249:\n        /* \"#utility.yul\":14839:14843   */\n      0x00\n        /* \"#utility.yul\":14877:14879   */\n      0x20\n        /* \"#utility.yul\":14866:14875   */\n      dup3\n        /* \"#utility.yul\":14862:14880   */\n      add\n        /* \"#utility.yul\":14854:14880   */\n      swap1\n      pop\n        /* \"#utility.yul\":14926:14935   */\n      dup2\n        /* \"#utility.yul\":14920:14924   */\n      dup2\n        /* \"#utility.yul\":14916:14936   */\n      sub\n        /* \"#utility.yul\":14912:14913   */\n      0x00\n        /* \"#utility.yul\":14901:14910   */\n      dup4\n        /* \"#utility.yul\":14897:14914   */\n      add\n        /* \"#utility.yul\":14890:14937   */\n      mstore\n        /* \"#utility.yul\":14954:15085   */\n      tag_541\n        /* \"#utility.yul\":15080:15084   */\n      dup2\n        /* \"#utility.yul\":14954:15085   */\n      tag_387\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14946:15085   */\n      swap1\n      pop\n        /* \"#utility.yul\":14673:15092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15098:15278   */\n    tag_388:\n        /* \"#utility.yul\":15146:15223   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15143:15144   */\n      0x00\n        /* \"#utility.yul\":15136:15224   */\n      mstore\n        /* \"#utility.yul\":15243:15247   */\n      0x12\n        /* \"#utility.yul\":15240:15241   */\n      0x04\n        /* \"#utility.yul\":15233:15248   */\n      mstore\n        /* \"#utility.yul\":15267:15271   */\n      0x24\n        /* \"#utility.yul\":15264:15265   */\n      0x00\n        /* \"#utility.yul\":15257:15272   */\n      revert\n        /* \"#utility.yul\":15284:15469   */\n    tag_261:\n        /* \"#utility.yul\":15324:15325   */\n      0x00\n        /* \"#utility.yul\":15341:15361   */\n      tag_544\n        /* \"#utility.yul\":15359:15360   */\n      dup3\n        /* \"#utility.yul\":15341:15361   */\n      tag_359\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":15336:15361   */\n      swap2\n      pop\n        /* \"#utility.yul\":15375:15395   */\n      tag_545\n        /* \"#utility.yul\":15393:15394   */\n      dup4\n        /* \"#utility.yul\":15375:15395   */\n      tag_359\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":15370:15395   */\n      swap3\n      pop\n        /* \"#utility.yul\":15414:15415   */\n      dup3\n        /* \"#utility.yul\":15404:15439   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":15419:15437   */\n      tag_547\n      tag_388\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":15404:15439   */\n    tag_546:\n        /* \"#utility.yul\":15461:15462   */\n      dup3\n        /* \"#utility.yul\":15458:15459   */\n      dup3\n        /* \"#utility.yul\":15454:15463   */\n      div\n        /* \"#utility.yul\":15449:15463   */\n      swap1\n      pop\n        /* \"#utility.yul\":15284:15469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15475:15885   */\n    tag_264:\n        /* \"#utility.yul\":15515:15522   */\n      0x00\n        /* \"#utility.yul\":15538:15558   */\n      tag_549\n        /* \"#utility.yul\":15556:15557   */\n      dup3\n        /* \"#utility.yul\":15538:15558   */\n      tag_359\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":15533:15558   */\n      swap2\n      pop\n        /* \"#utility.yul\":15572:15592   */\n      tag_550\n        /* \"#utility.yul\":15590:15591   */\n      dup4\n        /* \"#utility.yul\":15572:15592   */\n      tag_359\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15567:15592   */\n      swap3\n      pop\n        /* \"#utility.yul\":15627:15628   */\n      dup3\n        /* \"#utility.yul\":15624:15625   */\n      dup3\n        /* \"#utility.yul\":15620:15629   */\n      mul\n        /* \"#utility.yul\":15649:15679   */\n      tag_551\n        /* \"#utility.yul\":15667:15678   */\n      dup2\n        /* \"#utility.yul\":15649:15679   */\n      tag_359\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15638:15679   */\n      swap2\n      pop\n        /* \"#utility.yul\":15828:15829   */\n      dup3\n        /* \"#utility.yul\":15819:15826   */\n      dup3\n        /* \"#utility.yul\":15815:15830   */\n      div\n        /* \"#utility.yul\":15812:15813   */\n      dup5\n        /* \"#utility.yul\":15809:15831   */\n      eq\n        /* \"#utility.yul\":15789:15790   */\n      dup4\n        /* \"#utility.yul\":15782:15791   */\n      iszero\n        /* \"#utility.yul\":15762:15845   */\n      or\n        /* \"#utility.yul\":15739:15878   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":15858:15876   */\n      tag_553\n      tag_372\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15739:15878   */\n    tag_552:\n        /* \"#utility.yul\":15523:15885   */\n      pop\n        /* \"#utility.yul\":15475:15885   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15891:16073   */\n    tag_389:\n        /* \"#utility.yul\":16031:16065   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":16027:16028   */\n      0x00\n        /* \"#utility.yul\":16019:16025   */\n      dup3\n        /* \"#utility.yul\":16015:16029   */\n      add\n        /* \"#utility.yul\":16008:16066   */\n      mstore\n        /* \"#utility.yul\":15891:16073   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16079:16445   */\n    tag_390:\n        /* \"#utility.yul\":16221:16224   */\n      0x00\n        /* \"#utility.yul\":16242:16309   */\n      tag_556\n        /* \"#utility.yul\":16306:16308   */\n      0x20\n        /* \"#utility.yul\":16301:16304   */\n      dup4\n        /* \"#utility.yul\":16242:16309   */\n      tag_373\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":16235:16309   */\n      swap2\n      pop\n        /* \"#utility.yul\":16318:16411   */\n      tag_557\n        /* \"#utility.yul\":16407:16410   */\n      dup3\n        /* \"#utility.yul\":16318:16411   */\n      tag_389\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16436:16438   */\n      0x20\n        /* \"#utility.yul\":16431:16434   */\n      dup3\n        /* \"#utility.yul\":16427:16439   */\n      add\n        /* \"#utility.yul\":16420:16439   */\n      swap1\n      pop\n        /* \"#utility.yul\":16079:16445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16451:16870   */\n    tag_271:\n        /* \"#utility.yul\":16617:16621   */\n      0x00\n        /* \"#utility.yul\":16655:16657   */\n      0x20\n        /* \"#utility.yul\":16644:16653   */\n      dup3\n        /* \"#utility.yul\":16640:16658   */\n      add\n        /* \"#utility.yul\":16632:16658   */\n      swap1\n      pop\n        /* \"#utility.yul\":16704:16713   */\n      dup2\n        /* \"#utility.yul\":16698:16702   */\n      dup2\n        /* \"#utility.yul\":16694:16714   */\n      sub\n        /* \"#utility.yul\":16690:16691   */\n      0x00\n        /* \"#utility.yul\":16679:16688   */\n      dup4\n        /* \"#utility.yul\":16675:16692   */\n      add\n        /* \"#utility.yul\":16668:16715   */\n      mstore\n        /* \"#utility.yul\":16732:16863   */\n      tag_559\n        /* \"#utility.yul\":16858:16862   */\n      dup2\n        /* \"#utility.yul\":16732:16863   */\n      tag_390\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16724:16863   */\n      swap1\n      pop\n        /* \"#utility.yul\":16451:16870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16876:17067   */\n    tag_277:\n        /* \"#utility.yul\":16916:16919   */\n      0x00\n        /* \"#utility.yul\":16935:16955   */\n      tag_561\n        /* \"#utility.yul\":16953:16954   */\n      dup3\n        /* \"#utility.yul\":16935:16955   */\n      tag_359\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":16930:16955   */\n      swap2\n      pop\n        /* \"#utility.yul\":16969:16989   */\n      tag_562\n        /* \"#utility.yul\":16987:16988   */\n      dup4\n        /* \"#utility.yul\":16969:16989   */\n      tag_359\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":16964:16989   */\n      swap3\n      pop\n        /* \"#utility.yul\":17012:17013   */\n      dup3\n        /* \"#utility.yul\":17009:17010   */\n      dup3\n        /* \"#utility.yul\":17005:17014   */\n      add\n        /* \"#utility.yul\":16998:17014   */\n      swap1\n      pop\n        /* \"#utility.yul\":17033:17036   */\n      dup1\n        /* \"#utility.yul\":17030:17031   */\n      dup3\n        /* \"#utility.yul\":17027:17037   */\n      gt\n        /* \"#utility.yul\":17024:17060   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":17040:17058   */\n      tag_564\n      tag_372\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":17024:17060   */\n    tag_563:\n        /* \"#utility.yul\":16876:17067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17073:17253   */\n    tag_289:\n        /* \"#utility.yul\":17121:17198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17118:17119   */\n      0x00\n        /* \"#utility.yul\":17111:17199   */\n      mstore\n        /* \"#utility.yul\":17218:17222   */\n      0x32\n        /* \"#utility.yul\":17215:17216   */\n      0x04\n        /* \"#utility.yul\":17208:17223   */\n      mstore\n        /* \"#utility.yul\":17242:17246   */\n      0x24\n        /* \"#utility.yul\":17239:17240   */\n      0x00\n        /* \"#utility.yul\":17232:17247   */\n      revert\n        /* \"#utility.yul\":17259:17439   */\n    tag_296:\n        /* \"#utility.yul\":17307:17384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17304:17305   */\n      0x00\n        /* \"#utility.yul\":17297:17385   */\n      mstore\n        /* \"#utility.yul\":17404:17408   */\n      0x31\n        /* \"#utility.yul\":17401:17402   */\n      0x04\n        /* \"#utility.yul\":17394:17409   */\n      mstore\n        /* \"#utility.yul\":17428:17432   */\n      0x24\n        /* \"#utility.yul\":17425:17426   */\n      0x00\n        /* \"#utility.yul\":17418:17433   */\n      revert\n\n    auxdata: 0xa264697066735822122083d4ae0564dabb7bad705aa1dde1fa681f86f6311e247eaeaf879dca3467770a64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1507": {
									"entryPoint": null,
									"id": 1507,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 490,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 497,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1385:1",
										"nodeType": "YulBlock",
										"src": "0:1385:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1230:152:1",
													"nodeType": "YulBlock",
													"src": "1230:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1247:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1247:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1250:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1250:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1240:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1240:6:1"
																},
																"nativeSrc": "1240:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1240:88:1"
															},
															"nativeSrc": "1240:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1240:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1344:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1344:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1347:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1347:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1337:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1337:6:1"
																},
																"nativeSrc": "1337:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1337:15:1"
															},
															"nativeSrc": "1337:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1337:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1368:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1368:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1371:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1371:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1361:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1361:6:1"
																},
																"nativeSrc": "1361:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1361:15:1"
															},
															"nativeSrc": "1361:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1361:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1202:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1202:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200248938038062002489833981810160405281019062000036919062000317565b620000566200004a620001ea60201b60201c565b620001f160201b60201c565b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061019e60055f806004811115620000b257620000b162000347565b5b6004811115620000c757620000c662000347565b5b81526020019081526020015f208190555061039060055f60016004811115620000f557620000f462000347565b5b60048111156200010a576200010962000347565b5b81526020019081526020015f20819055506112d160055f6002600481111562000138576200013762000347565b5b60048111156200014d576200014c62000347565b5b81526020019081526020015f2081905550611c2d60055f600360048111156200017b576200017a62000347565b5b600481111562000190576200018f62000347565b5b81526020019081526020015f208190555061465060055f600480811115620001bd57620001bc62000347565b5b6004811115620001d257620001d162000347565b5b81526020019081526020015f20819055505062000374565b5f33905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002e182620002b6565b9050919050565b620002f381620002d5565b8114620002fe575f80fd5b50565b5f815190506200031181620002e8565b92915050565b5f602082840312156200032f576200032e620002b2565b5b5f6200033e8482850162000301565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b61210780620003825f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80639e196cad11610095578063bf58390311610064578063bf583903146102ae578063e627f2db146102cc578063e9917c07146102ea578063f2fde38b14610306576100fe565b80639e196cad14610214578063a3fcd25314610244578063ad9159fd14610260578063b8fcf93714610290576100fe565b8063715018a6116100d1578063715018a6146101b25780637e61badd146101bc5780638b0e9f3f146101d85780638da5cb5b146101f6576100fe565b8063063b35bf146101025780630ded03cd146101325780630e15561a146101625780633027ffc014610180575b5f80fd5b61011c60048036038101906101179190611880565b610322565b6040516101299190611931565b60405180910390f35b61014c6004803603810190610147919061194a565b6103ab565b604051610159919061198d565b60405180910390f35b61016a610517565b604051610177919061198d565b60405180910390f35b61019a60048036038101906101959190611880565b61051d565b6040516101a9939291906119a6565b60405180910390f35b6101ba61055a565b005b6101d660048036038101906101d19190611a05565b61056d565b005b6101e0610a8d565b6040516101ed919061198d565b60405180910390f35b6101fe610a93565b60405161020b9190611a52565b60405180910390f35b61022e6004803603810190610229919061194a565b610aba565b60405161023b919061198d565b60405180910390f35b61025e60048036038101906102599190611aa1565b610acf565b005b61027a60048036038101906102759190611880565b610b18565b604051610287919061198d565b60405180910390f35b610298610b94565b6040516102a59190611b3a565b60405180910390f35b6102b6610bb9565b6040516102c3919061198d565b60405180910390f35b6102d4610d09565b6040516102e1919061198d565b60405180910390f35b61030460048036038101906102ff9190611a05565b610d12565b005b610320600480360381019061031b9190611b53565b6111cf565b005b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610374576103736118be565b5b6004811115610386576103856118be565b5b81526020019081526020015f206001015f9054906101000a900460ff16905092915050565b5f8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460048111156103fe576103fd6118be565b5b60048111156104105761040f6118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff166004811115610455576104546118be565b5b6004811115610467576104666118be565b5b815260200160028201548152505090505f610485825f015183611251565b90505f6104d160186104c3603c6104b5603c8860400151426104a79190611bab565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b9050600181106104e157806104e4565b60015b905061050d816104ff61016c856112cc90919063ffffffff16565b6112e190919063ffffffff16565b9350505050919050565b60025481565b6004602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015f9054906101000a900460ff16908060020154905083565b6105626112f6565b61056b5f611374565b565b5f82116105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690611c38565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610601576106006118be565b5b6004811115610613576106126118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff166004811115610658576106576118be565b5b600481111561066a576106696118be565b5b8152602001600282015481525050905061068381611435565b6106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990611ca0565b60405180910390fd5b805f0151831115610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90611d08565b60405180910390fd5b5f610712836103ab565b905061072a84835f015161145d90919063ffffffff16565b825f0181815250508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f856004811115610784576107836118be565b5b6004811115610796576107956118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff021916908360048111156107d5576107d46118be565b5b0217905550604082015181600201559050506107fc8460015461145d90919063ffffffff16565b6001819055506108178160025461147290919063ffffffff16565b6002819055505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f85600481111561086f5761086e6118be565b5b6004811115610881576108806118be565b5b81526020019081526020015f205f0154036108a05761089f33611487565b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016108fc929190611d26565b6020604051808303815f875af1158015610918573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093c9190611d82565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610982610a93565b33846040518463ffffffff1660e01b81526004016109a293929190611dad565b6020604051808303815f875af11580156109be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e29190611d82565b503373ffffffffffffffffffffffffffffffffffffffff167f20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f56858542604051610a2d939291906119a6565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c57828542604051610a7f939291906119a6565b60405180910390a250505050565b60015481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052805f5260405f205f915090505481565b610ad76112f6565b8160ff1660055f836004811115610af157610af06118be565b5b6004811115610b0357610b026118be565b5b81526020019081526020015f20819055505050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610b6a57610b696118be565b5b6004811115610b7c57610b7b6118be565b5b81526020019081526020015f205f0154905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610d0460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231610c02610a93565b6040518263ffffffff1660e01b8152600401610c1e9190611a52565b602060405180830381865afa158015610c39573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5d9190611df6565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610ca2610a93565b306040518363ffffffff1660e01b8152600401610cc0929190611e21565b602060405180830381865afa158015610cdb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cff9190611df6565b61158c565b905090565b5f600254905090565b5f8211610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b90611c38565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610db293929190611dad565b6020604051808303815f875af1158015610dce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df29190611d82565b610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890611e92565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610e8357610e826118be565b5b6004811115610e9557610e946118be565b5b81526020019081526020015f205f015403610fb457610eb3336115a4565b6040518060600160405280838152602001826004811115610ed757610ed66118be565b5b81526020014281525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610f3157610f306118be565b5b6004811115610f4357610f426118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff02191690836004811115610f8257610f816118be565b5b021790555060408201518160020155905050610fa98260015461147290919063ffffffff16565b600181905550611179565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115611006576110056118be565b5b6004811115611018576110176118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff16600481111561105d5761105c6118be565b5b600481111561106f5761106e6118be565b5b8152602001600282015481525050905061109583825f015161147290919063ffffffff16565b815f018181525050428160400181815250508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460048111156110f9576110f86118be565b5b600481111561110b5761110a6118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff0219169083600481111561114a576111496118be565b5b0217905550604082015181600201559050506111718360015461147290919063ffffffff16565b600181905550505b3373ffffffffffffffffffffffffffffffffffffffff167fadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c8383426040516111c3939291906119a6565b60405180910390a25050565b6111d76112f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123c90611f20565b60405180910390fd5b61124e81611374565b50565b5f6112c460646112b660646112a860055f88602001516004811115611279576112786118be565b5b600481111561128b5761128a6118be565b5b81526020019081526020015f2054886112e190919063ffffffff16565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b905092915050565b5f81836112d99190611f6b565b905092915050565b5f81836112ee9190611f9b565b905092915050565b6112fe61161b565b73ffffffffffffffffffffffffffffffffffffffff1661131c610a93565b73ffffffffffffffffffffffffffffffffffffffff1614611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612026565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8061144083611622565b836040015161144f9190612044565b905080421015915050919050565b5f818361146a9190611bab565b905092915050565b5f818361147f9190612044565b905092915050565b5f8061149283611752565b91509150811561158757600360016003805490506114b09190611bab565b815481106114c1576114c0612077565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600382815481106114fd576114fc612077565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003805480611554576115536120a4565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b505050565b5f81831061159a578161159c565b825b905092915050565b5f6115ae82611752565b5090508061161757600382908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b5f33905090565b5f806004811115611636576116356118be565b5b8260200151600481111561164d5761164c6118be565b5b146117405760016004811115611666576116656118be565b5b8260200151600481111561167d5761167c6118be565b5b146117365760026004811115611696576116956118be565b5b826020015160048111156116ad576116ac6118be565b5b1461172c57600360048111156116c6576116c56118be565b5b826020015160048111156116dd576116dc6118be565b5b14611722576004808111156116f5576116f46118be565b5b8260200151600481111561170c5761170b6118be565b5b14611717575f61171d565b6301e133805b611727565b629e34005b611731565b6276a7005b61173b565b62278d005b611745565b6213c6805b63ffffffff169050919050565b5f805f5b6003805490508110156117f2576003818154811061177757611776612077565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117de5760018192509250506117fa565b6001816117eb9190612044565b9050611756565b505f80915091505b915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61182c82611803565b9050919050565b61183c81611822565b8114611846575f80fd5b50565b5f8135905061185781611833565b92915050565b60058110611869575f80fd5b50565b5f8135905061187a8161185d565b92915050565b5f8060408385031215611896576118956117ff565b5b5f6118a385828601611849565b92505060206118b48582860161186c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106118fc576118fb6118be565b5b50565b5f81905061190c826118eb565b919050565b5f61191b826118ff565b9050919050565b61192b81611911565b82525050565b5f6020820190506119445f830184611922565b92915050565b5f6020828403121561195f5761195e6117ff565b5b5f61196c8482850161186c565b91505092915050565b5f819050919050565b61198781611975565b82525050565b5f6020820190506119a05f83018461197e565b92915050565b5f6060820190506119b95f83018661197e565b6119c66020830185611922565b6119d3604083018461197e565b949350505050565b6119e481611975565b81146119ee575f80fd5b50565b5f813590506119ff816119db565b92915050565b5f8060408385031215611a1b57611a1a6117ff565b5b5f611a28858286016119f1565b9250506020611a398582860161186c565b9150509250929050565b611a4c81611822565b82525050565b5f602082019050611a655f830184611a43565b92915050565b5f60ff82169050919050565b611a8081611a6b565b8114611a8a575f80fd5b50565b5f81359050611a9b81611a77565b92915050565b5f8060408385031215611ab757611ab66117ff565b5b5f611ac485828601611a8d565b9250506020611ad58582860161186c565b9150509250929050565b5f819050919050565b5f611b02611afd611af884611803565b611adf565b611803565b9050919050565b5f611b1382611ae8565b9050919050565b5f611b2482611b09565b9050919050565b611b3481611b1a565b82525050565b5f602082019050611b4d5f830184611b2b565b92915050565b5f60208284031215611b6857611b676117ff565b5b5f611b7584828501611849565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bb582611975565b9150611bc083611975565b9250828203905081811115611bd857611bd7611b7e565b5b92915050565b5f82825260208201905092915050565b7f7374616b652076616c75652073686f756c64206e6f74206265207a65726f00005f82015250565b5f611c22601e83611bde565b9150611c2d82611bee565b602082019050919050565b5f6020820190508181035f830152611c4f81611c16565b9050919050565b7f5374616b696e6720706572696f64206973206e6f7420657870697265640000005f82015250565b5f611c8a601d83611bde565b9150611c9582611c56565b602082019050919050565b5f6020820190508181035f830152611cb781611c7e565b9050919050565b7f496e76616c6964205374616b6520416d6f756e740000000000000000000000005f82015250565b5f611cf2601483611bde565b9150611cfd82611cbe565b602082019050919050565b5f6020820190508181035f830152611d1f81611ce6565b9050919050565b5f604082019050611d395f830185611a43565b611d46602083018461197e565b9392505050565b5f8115159050919050565b611d6181611d4d565b8114611d6b575f80fd5b50565b5f81519050611d7c81611d58565b92915050565b5f60208284031215611d9757611d966117ff565b5b5f611da484828501611d6e565b91505092915050565b5f606082019050611dc05f830186611a43565b611dcd6020830185611a43565b611dda604083018461197e565b949350505050565b5f81519050611df0816119db565b92915050565b5f60208284031215611e0b57611e0a6117ff565b5b5f611e1884828501611de2565b91505092915050565b5f604082019050611e345f830185611a43565b611e416020830184611a43565b9392505050565b7f546f6b656e205472616e73666572204661696c656400000000000000000000005f82015250565b5f611e7c601583611bde565b9150611e8782611e48565b602082019050919050565b5f6020820190508181035f830152611ea981611e70565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611f0a602683611bde565b9150611f1582611eb0565b604082019050919050565b5f6020820190508181035f830152611f3781611efe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7582611975565b9150611f8083611975565b925082611f9057611f8f611f3e565b5b828204905092915050565b5f611fa582611975565b9150611fb083611975565b9250828202611fbe81611975565b91508282048414831517611fd557611fd4611b7e565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612010602083611bde565b915061201b82611fdc565b602082019050919050565b5f6020820190508181035f83015261203d81612004565b9050919050565b5f61204e82611975565b915061205983611975565b925082820190508082111561207157612070611b7e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122083d4ae0564dabb7bad705aa1dde1fa681f86f6311e247eaeaf879dca3467770a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2489 CODESIZE SUB DUP1 PUSH3 0x2489 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x317 JUMP JUMPDEST PUSH3 0x56 PUSH3 0x4A PUSH3 0x1EA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1F1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x19E PUSH1 0x5 PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xB2 JUMPI PUSH3 0xB1 PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xC7 JUMPI PUSH3 0xC6 PUSH3 0x347 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x390 PUSH1 0x5 PUSH0 PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0xF5 JUMPI PUSH3 0xF4 PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x10A JUMPI PUSH3 0x109 PUSH3 0x347 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x12D1 PUSH1 0x5 PUSH0 PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x138 JUMPI PUSH3 0x137 PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x14D JUMPI PUSH3 0x14C PUSH3 0x347 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C2D PUSH1 0x5 PUSH0 PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x17B JUMPI PUSH3 0x17A PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x190 JUMPI PUSH3 0x18F PUSH3 0x347 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x4650 PUSH1 0x5 PUSH0 PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH3 0x1BD JUMPI PUSH3 0x1BC PUSH3 0x347 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH3 0x1D2 JUMPI PUSH3 0x1D1 PUSH3 0x347 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP PUSH3 0x374 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2E1 DUP3 PUSH3 0x2B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2F3 DUP2 PUSH3 0x2D5 JUMP JUMPDEST DUP2 EQ PUSH3 0x2FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x311 DUP2 PUSH3 0x2E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x32F JUMPI PUSH3 0x32E PUSH3 0x2B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x33E DUP5 DUP3 DUP6 ADD PUSH3 0x301 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2107 DUP1 PUSH3 0x382 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E196CAD GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBF583903 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xE627F2DB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xE9917C07 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x9E196CAD EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA3FCD253 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xAD9159FD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x7E61BADD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x63B35BF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xDED03CD EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x3027FFC0 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x11CF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x374 JUMPI PUSH2 0x373 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH2 0x454 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x467 JUMPI PUSH2 0x466 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x485 DUP3 PUSH0 ADD MLOAD DUP4 PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4D1 PUSH1 0x18 PUSH2 0x4C3 PUSH1 0x3C PUSH2 0x4B5 PUSH1 0x3C DUP9 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x4E1 JUMPI DUP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 PUSH2 0x4FF PUSH2 0x16C DUP6 PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x56B PUSH0 PUSH2 0x1374 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x601 JUMPI PUSH2 0x600 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x683 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD MLOAD DUP4 GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x712 DUP4 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP5 DUP4 PUSH0 ADD MLOAD PUSH2 0x145D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x784 JUMPI PUSH2 0x783 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x795 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH2 0x7D4 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x7FC DUP5 PUSH1 0x1 SLOAD PUSH2 0x145D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x817 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86E PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x8A0 JUMPI PUSH2 0x89F CALLER PUSH2 0x1487 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP3 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x982 PUSH2 0xA93 JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57 DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD7 PUSH2 0x12F6 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x5 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0xAF0 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD04 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0xC02 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0xCA2 PUSH2 0xA93 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4B SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0xFB4 JUMPI PUSH2 0xEB3 CALLER PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF42 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xFA9 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1179 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1006 JUMPI PUSH2 0x1005 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x106F JUMPI PUSH2 0x106E PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1095 DUP4 DUP3 PUSH0 ADD MLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x110B JUMPI PUSH2 0x110A PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1171 DUP4 PUSH1 0x1 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x11D7 PUSH2 0x12F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x124E DUP2 PUSH2 0x1374 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 PUSH1 0x64 PUSH2 0x12B6 PUSH1 0x64 PUSH2 0x12A8 PUSH1 0x5 PUSH0 DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH2 0x1278 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP9 PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x1F6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FE PUSH2 0x161B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x131C PUSH2 0xA93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1440 DUP4 PUSH2 0x1622 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x147F SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1492 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1587 JUMPI PUSH1 0x3 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x20A4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x159A JUMPI DUP2 PUSH2 0x159C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AE DUP3 PUSH2 0x1752 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x1617 JUMPI PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1636 JUMPI PUSH2 0x1635 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1740 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1736 JUMPI PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1695 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x172C JUMPI PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1722 JUMPI PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F4 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1717 JUMPI PUSH0 PUSH2 0x171D JUMP JUMPDEST PUSH4 0x1E13380 JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH3 0x9E3400 JUMPDEST PUSH2 0x1731 JUMP JUMPDEST PUSH3 0x76A700 JUMPDEST PUSH2 0x173B JUMP JUMPDEST PUSH3 0x278D00 JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH3 0x13C680 JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DE JUMPI PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x17EB SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST POP PUSH0 DUP1 SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182C DUP3 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP2 EQ PUSH2 0x1846 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1857 DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187A DUP2 PUSH2 0x185D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1896 JUMPI PUSH2 0x1895 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x18FC JUMPI PUSH2 0x18FB PUSH2 0x18BE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x190C DUP3 PUSH2 0x18EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x18FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1911 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1944 PUSH0 DUP4 ADD DUP5 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1987 DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x19C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x19D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E4 DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FF DUP2 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1B JUMPI PUSH2 0x1A1A PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A28 DUP6 DUP3 DUP7 ADD PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A39 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A65 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A80 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9B DUP2 PUSH2 0x1A77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B02 PUSH2 0x1AFD PUSH2 0x1AF8 DUP5 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B13 DUP3 PUSH2 0x1AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B24 DUP3 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1B1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BB5 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC0 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C22 PUSH1 0x1E DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4F DUP2 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F742065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A PUSH1 0x1D DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP3 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB7 DUP2 PUSH2 0x1C7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964205374616B6520416D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF2 PUSH1 0x14 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFD DUP3 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D39 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D7C DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D97 JUMPI PUSH2 0x1D96 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1DCD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1DDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DF0 DUP2 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E18 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E34 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1E41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7C PUSH1 0x15 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0A PUSH1 0x26 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F15 DUP3 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F37 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F75 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F80 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F90 JUMPI PUSH2 0x1F8F PUSH2 0x1F3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA5 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB0 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FBE DUP2 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 PUSH1 0x20 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203D DUP2 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204E DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x2059 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xD4 0xAE SDIV PUSH5 0xDABB7BAD70 GAS LOG1 0xDD 0xE1 STATICCALL PUSH9 0x1F86F6311E247EAEAF DUP8 SWAP14 0xCA CALLVALUE PUSH8 0x770A64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "25620:6578:0:-:0;;;26421:361;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1590:32;1609:12;:10;;;:12;;:::i;:::-;1590:18;;;:32;;:::i;:::-;26483:8;26466:7;;:26;;;;;;;;;;;;;;;;;;26533:3;26502;:28;26506:23;26502:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;26588:3;26557;:28;26561:23;26557:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:34;;;;26645:4;26612:3;:30;26616:25;26612:30;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:37;;;;26702:4;26671:3;:28;26675:23;26671:28;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;26758:5;26728:3;:27;26732:22;26728:27;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:35;;;;26421:361;25620:6578;;405:96;458:7;484:10;477:17;;405:96;:::o;3087:187::-;3160:16;3179:6;;;;;;;;;;;3160:25;;3204:8;3195:6;;:17;;;;;;;;;;;;;;;;;;3258:8;3227:40;;3248:8;3227:40;;;;;;;;;;;;3150:124;3087:187;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:180::-;1250:77;1247:1;1240:88;1347:4;1344:1;1337:15;1371:4;1368:1;1361:15;25620:6578:0;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_74": {
									"entryPoint": 4854,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 5659,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_131": {
									"entryPoint": 4980,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addStakeholder_2011": {
									"entryPoint": 5540,
									"id": 2011,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_384": {
									"entryPoint": 5234,
									"id": 384,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@apr_1424": {
									"entryPoint": 2746,
									"id": 1424,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createStake_1627": {
									"entryPoint": 3346,
									"id": 1627,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@div_429": {
									"entryPoint": 4812,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDailyRewards_1952": {
									"entryPoint": 939,
									"id": 1952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getInvestorRewards_1783": {
									"entryPoint": 4689,
									"id": 1783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getStakingPeriodInNumbers_1852": {
									"entryPoint": 5666,
									"id": 1852,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTotalRewards_2052": {
									"entryPoint": 3337,
									"id": 2052,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isStakeholder_1990": {
									"entryPoint": 5970,
									"id": 1990,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@min_562": {
									"entryPoint": 5516,
									"id": 562,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_414": {
									"entryPoint": 4833,
									"id": 414,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@myToken_1427": {
									"entryPoint": 2964,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_60": {
									"entryPoint": 2707,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@remainingTokens_2093": {
									"entryPoint": 3001,
									"id": 2093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeStakeholder_2044": {
									"entryPoint": 5255,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_88": {
									"entryPoint": 1370,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setApyPercentage_2069": {
									"entryPoint": 2767,
									"id": 2069,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeOf_1870": {
									"entryPoint": 2840,
									"id": 1870,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stakes_1419": {
									"entryPoint": 1309,
									"id": 1419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingPeriodOf_1889": {
									"entryPoint": 802,
									"id": 1889,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@sub_399": {
									"entryPoint": 5213,
									"id": 399,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalRewards_1394": {
									"entryPoint": 1303,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStake_1392": {
									"entryPoint": 2701,
									"id": 1392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_111": {
									"entryPoint": 4559,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unStake_1758": {
									"entryPoint": 1389,
									"id": 1758,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@validateStakingPeriod_1806": {
									"entryPoint": 5173,
									"id": 1806,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1400": {
									"entryPoint": 6272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint8t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$209_to_t_address_fromStack": {
									"entryPoint": 6955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_StakingPeriod_$1400__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1400_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 6566,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$209_to_t_address": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_StakingPeriod_$1400_to_t_uint8": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7038,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6334,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8356,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6143,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392": {
									"entryPoint": 7150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6": {
									"entryPoint": 7254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285": {
									"entryPoint": 7358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_enum$_StakingPeriod_$1400": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17442:1",
										"nodeType": "YulBlock",
										"src": "0:17442:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "902:56:1",
													"nodeType": "YulBlock",
													"src": "902:56:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "936:16:1",
																"nodeType": "YulBlock",
																"src": "936:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "945:1:1",
																					"nodeType": "YulLiteral",
																					"src": "945:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "948:1:1",
																					"nodeType": "YulLiteral",
																					"src": "948:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:1"
																			},
																			"nativeSrc": "938:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "938:12:1"
																		},
																		"nativeSrc": "938:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "938:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "925:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "925:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "932:1:1",
																				"nodeType": "YulLiteral",
																				"src": "932:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "922:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "922:2:1"
																		},
																		"nativeSrc": "922:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "922:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "915:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "915:6:1"
																},
																"nativeSrc": "915:20:1",
																"nodeType": "YulFunctionCall",
																"src": "915:20:1"
															},
															"nativeSrc": "912:40:1",
															"nodeType": "YulIf",
															"src": "912:40:1"
														}
													]
												},
												"name": "validator_revert_t_enum$_StakingPeriod_$1400",
												"nativeSrc": "841:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "895:5:1",
														"nodeType": "YulTypedName",
														"src": "895:5:1",
														"type": ""
													}
												],
												"src": "841:117:1"
											},
											{
												"body": {
													"nativeSrc": "1034:105:1",
													"nodeType": "YulBlock",
													"src": "1034:105:1",
													"statements": [
														{
															"nativeSrc": "1044:29:1",
															"nodeType": "YulAssignment",
															"src": "1044:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1066:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1066:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1053:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1053:12:1"
																},
																"nativeSrc": "1053:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1053:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1044:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1044:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1127:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1127:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_enum$_StakingPeriod_$1400",
																	"nativeSrc": "1082:44:1",
																	"nodeType": "YulIdentifier",
																	"src": "1082:44:1"
																},
																"nativeSrc": "1082:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1082:51:1"
															},
															"nativeSrc": "1082:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1082:51:1"
														}
													]
												},
												"name": "abi_decode_t_enum$_StakingPeriod_$1400",
												"nativeSrc": "964:175:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1012:6:1",
														"nodeType": "YulTypedName",
														"src": "1012:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1020:3:1",
														"nodeType": "YulTypedName",
														"src": "1020:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1028:5:1",
														"nodeType": "YulTypedName",
														"src": "1028:5:1",
														"type": ""
													}
												],
												"src": "964:175:1"
											},
											{
												"body": {
													"nativeSrc": "1246:409:1",
													"nodeType": "YulBlock",
													"src": "1246:409:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1292:83:1",
																"nodeType": "YulBlock",
																"src": "1292:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1294:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1294:77:1"
																			},
																			"nativeSrc": "1294:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1294:79:1"
																		},
																		"nativeSrc": "1294:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1294:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1267:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1267:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1276:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1276:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1263:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:1"
																		},
																		"nativeSrc": "1263:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1259:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1259:3:1"
																},
																"nativeSrc": "1259:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1259:32:1"
															},
															"nativeSrc": "1256:119:1",
															"nodeType": "YulIf",
															"src": "1256:119:1"
														},
														{
															"nativeSrc": "1385:117:1",
															"nodeType": "YulBlock",
															"src": "1385:117:1",
															"statements": [
																{
																	"nativeSrc": "1400:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1400:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1414:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1414:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1404:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1404:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1429:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1464:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1464:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1475:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1460:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1460:3:1"
																				},
																				"nativeSrc": "1460:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1484:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1439:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1439:20:1"
																		},
																		"nativeSrc": "1439:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1429:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1429:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1512:136:1",
															"nodeType": "YulBlock",
															"src": "1512:136:1",
															"statements": [
																{
																	"nativeSrc": "1527:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1527:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1541:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1531:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1531:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1557:81:1",
																	"nodeType": "YulAssignment",
																	"src": "1557:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1610:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1610:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1621:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1621:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1606:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1606:3:1"
																				},
																				"nativeSrc": "1606:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1606:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1630:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1630:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1400",
																			"nativeSrc": "1567:38:1",
																			"nodeType": "YulIdentifier",
																			"src": "1567:38:1"
																		},
																		"nativeSrc": "1567:71:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1567:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1557:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1557:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1400",
												"nativeSrc": "1145:510:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1208:9:1",
														"nodeType": "YulTypedName",
														"src": "1208:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1219:7:1",
														"nodeType": "YulTypedName",
														"src": "1219:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1231:6:1",
														"nodeType": "YulTypedName",
														"src": "1231:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1239:6:1",
														"nodeType": "YulTypedName",
														"src": "1239:6:1",
														"type": ""
													}
												],
												"src": "1145:510:1"
											},
											{
												"body": {
													"nativeSrc": "1689:152:1",
													"nodeType": "YulBlock",
													"src": "1689:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1706:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1706:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1709:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1709:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:1"
																},
																"nativeSrc": "1699:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1699:88:1"
															},
															"nativeSrc": "1699:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1699:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1803:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1803:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1806:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1806:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1796:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1796:6:1"
																},
																"nativeSrc": "1796:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1796:15:1"
															},
															"nativeSrc": "1796:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1796:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1827:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1827:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1830:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1830:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1820:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nativeSrc": "1820:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1820:15:1"
															},
															"nativeSrc": "1820:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1820:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1661:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1661:180:1"
											},
											{
												"body": {
													"nativeSrc": "1908:62:1",
													"nodeType": "YulBlock",
													"src": "1908:62:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1942:22:1",
																"nodeType": "YulBlock",
																"src": "1942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "1944:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1944:16:1"
																			},
																			"nativeSrc": "1944:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1944:18:1"
																		},
																		"nativeSrc": "1944:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1931:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1931:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1938:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1938:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1928:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1928:2:1"
																		},
																		"nativeSrc": "1928:12:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1928:12:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1921:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1921:6:1"
																},
																"nativeSrc": "1921:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1921:20:1"
															},
															"nativeSrc": "1918:46:1",
															"nodeType": "YulIf",
															"src": "1918:46:1"
														}
													]
												},
												"name": "validator_assert_t_enum$_StakingPeriod_$1400",
												"nativeSrc": "1847:123:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1901:5:1",
														"nodeType": "YulTypedName",
														"src": "1901:5:1",
														"type": ""
													}
												],
												"src": "1847:123:1"
											},
											{
												"body": {
													"nativeSrc": "2039:84:1",
													"nodeType": "YulBlock",
													"src": "2039:84:1",
													"statements": [
														{
															"nativeSrc": "2049:16:1",
															"nodeType": "YulAssignment",
															"src": "2049:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2060:5:1",
																"nodeType": "YulIdentifier",
																"src": "2060:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2049:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2049:7:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2111:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_StakingPeriod_$1400",
																	"nativeSrc": "2066:44:1",
																	"nodeType": "YulIdentifier",
																	"src": "2066:44:1"
																},
																"nativeSrc": "2066:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2066:51:1"
															},
															"nativeSrc": "2066:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2066:51:1"
														}
													]
												},
												"name": "cleanup_t_enum$_StakingPeriod_$1400",
												"nativeSrc": "1976:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2021:5:1",
														"nodeType": "YulTypedName",
														"src": "2021:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2031:7:1",
														"nodeType": "YulTypedName",
														"src": "2031:7:1",
														"type": ""
													}
												],
												"src": "1976:147:1"
											},
											{
												"body": {
													"nativeSrc": "2205:71:1",
													"nodeType": "YulBlock",
													"src": "2205:71:1",
													"statements": [
														{
															"nativeSrc": "2215:55:1",
															"nodeType": "YulAssignment",
															"src": "2215:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2264:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2264:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_StakingPeriod_$1400",
																	"nativeSrc": "2228:35:1",
																	"nodeType": "YulIdentifier",
																	"src": "2228:35:1"
																},
																"nativeSrc": "2228:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2228:42:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2215:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2215:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_StakingPeriod_$1400_to_t_uint8",
												"nativeSrc": "2129:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2185:5:1",
														"nodeType": "YulTypedName",
														"src": "2185:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2195:9:1",
														"nodeType": "YulTypedName",
														"src": "2195:9:1",
														"type": ""
													}
												],
												"src": "2129:147:1"
											},
											{
												"body": {
													"nativeSrc": "2363:82:1",
													"nodeType": "YulBlock",
													"src": "2363:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2380:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2380:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2432:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2432:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_StakingPeriod_$1400_to_t_uint8",
																			"nativeSrc": "2385:46:1",
																			"nodeType": "YulIdentifier",
																			"src": "2385:46:1"
																		},
																		"nativeSrc": "2385:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2385:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2373:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2373:6:1"
																},
																"nativeSrc": "2373:66:1",
																"nodeType": "YulFunctionCall",
																"src": "2373:66:1"
															},
															"nativeSrc": "2373:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "2373:66:1"
														}
													]
												},
												"name": "abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack",
												"nativeSrc": "2282:163:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2351:5:1",
														"nodeType": "YulTypedName",
														"src": "2351:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2358:3:1",
														"nodeType": "YulTypedName",
														"src": "2358:3:1",
														"type": ""
													}
												],
												"src": "2282:163:1"
											},
											{
												"body": {
													"nativeSrc": "2565:140:1",
													"nodeType": "YulBlock",
													"src": "2565:140:1",
													"statements": [
														{
															"nativeSrc": "2575:26:1",
															"nodeType": "YulAssignment",
															"src": "2575:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2587:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2587:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2598:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2598:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2583:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2583:3:1"
																},
																"nativeSrc": "2583:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2583:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2575:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2575:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2671:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2684:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2684:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2695:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2695:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2680:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2680:3:1"
																		},
																		"nativeSrc": "2680:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2680:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack",
																	"nativeSrc": "2611:59:1",
																	"nodeType": "YulIdentifier",
																	"src": "2611:59:1"
																},
																"nativeSrc": "2611:87:1",
																"nodeType": "YulFunctionCall",
																"src": "2611:87:1"
															},
															"nativeSrc": "2611:87:1",
															"nodeType": "YulExpressionStatement",
															"src": "2611:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_StakingPeriod_$1400__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2451:254:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:1",
														"nodeType": "YulTypedName",
														"src": "2537:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2549:6:1",
														"nodeType": "YulTypedName",
														"src": "2549:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2560:4:1",
														"nodeType": "YulTypedName",
														"src": "2560:4:1",
														"type": ""
													}
												],
												"src": "2451:254:1"
											},
											{
												"body": {
													"nativeSrc": "2795:281:1",
													"nodeType": "YulBlock",
													"src": "2795:281:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2841:83:1",
																"nodeType": "YulBlock",
																"src": "2841:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2843:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2843:77:1"
																			},
																			"nativeSrc": "2843:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2843:79:1"
																		},
																		"nativeSrc": "2843:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2843:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2816:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2816:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2825:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2825:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2812:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:1"
																		},
																		"nativeSrc": "2812:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2837:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2837:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2808:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2808:3:1"
																},
																"nativeSrc": "2808:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2808:32:1"
															},
															"nativeSrc": "2805:119:1",
															"nodeType": "YulIf",
															"src": "2805:119:1"
														},
														{
															"nativeSrc": "2934:135:1",
															"nodeType": "YulBlock",
															"src": "2934:135:1",
															"statements": [
																{
																	"nativeSrc": "2949:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2949:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2963:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2963:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2953:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2953:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2978:81:1",
																	"nodeType": "YulAssignment",
																	"src": "2978:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3031:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3031:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3042:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3042:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3027:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3027:3:1"
																				},
																				"nativeSrc": "3027:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3027:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3051:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3051:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1400",
																			"nativeSrc": "2988:38:1",
																			"nodeType": "YulIdentifier",
																			"src": "2988:38:1"
																		},
																		"nativeSrc": "2988:71:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2978:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2978:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_StakingPeriod_$1400",
												"nativeSrc": "2711:365:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2765:9:1",
														"nodeType": "YulTypedName",
														"src": "2765:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2776:7:1",
														"nodeType": "YulTypedName",
														"src": "2776:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2788:6:1",
														"nodeType": "YulTypedName",
														"src": "2788:6:1",
														"type": ""
													}
												],
												"src": "2711:365:1"
											},
											{
												"body": {
													"nativeSrc": "3127:32:1",
													"nodeType": "YulBlock",
													"src": "3127:32:1",
													"statements": [
														{
															"nativeSrc": "3137:16:1",
															"nodeType": "YulAssignment",
															"src": "3137:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3148:5:1",
																"nodeType": "YulIdentifier",
																"src": "3148:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3137:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3137:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3082:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3109:5:1",
														"nodeType": "YulTypedName",
														"src": "3109:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3119:7:1",
														"nodeType": "YulTypedName",
														"src": "3119:7:1",
														"type": ""
													}
												],
												"src": "3082:77:1"
											},
											{
												"body": {
													"nativeSrc": "3230:53:1",
													"nodeType": "YulBlock",
													"src": "3230:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3247:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3247:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3270:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3270:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3252:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3252:17:1"
																		},
																		"nativeSrc": "3252:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3252:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3240:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3240:6:1"
																},
																"nativeSrc": "3240:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3240:37:1"
															},
															"nativeSrc": "3240:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3240:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3165:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3218:5:1",
														"nodeType": "YulTypedName",
														"src": "3218:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3225:3:1",
														"nodeType": "YulTypedName",
														"src": "3225:3:1",
														"type": ""
													}
												],
												"src": "3165:118:1"
											},
											{
												"body": {
													"nativeSrc": "3387:124:1",
													"nodeType": "YulBlock",
													"src": "3387:124:1",
													"statements": [
														{
															"nativeSrc": "3397:26:1",
															"nodeType": "YulAssignment",
															"src": "3397:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3409:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3409:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3420:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3405:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3405:3:1"
																},
																"nativeSrc": "3405:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3405:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3397:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3397:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3477:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3477:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3490:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3490:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3501:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3501:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3486:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3486:3:1"
																		},
																		"nativeSrc": "3486:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3486:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3433:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3433:43:1"
																},
																"nativeSrc": "3433:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3433:71:1"
															},
															"nativeSrc": "3433:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3433:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3289:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:1",
														"nodeType": "YulTypedName",
														"src": "3359:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3371:6:1",
														"nodeType": "YulTypedName",
														"src": "3371:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3382:4:1",
														"nodeType": "YulTypedName",
														"src": "3382:4:1",
														"type": ""
													}
												],
												"src": "3289:222:1"
											},
											{
												"body": {
													"nativeSrc": "3687:304:1",
													"nodeType": "YulBlock",
													"src": "3687:304:1",
													"statements": [
														{
															"nativeSrc": "3697:26:1",
															"nodeType": "YulAssignment",
															"src": "3697:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3709:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3709:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3720:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3720:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3705:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3705:3:1"
																},
																"nativeSrc": "3705:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3705:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3697:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3697:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3777:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3777:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3790:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3790:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3801:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3801:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3786:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3786:3:1"
																		},
																		"nativeSrc": "3786:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3786:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3733:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3733:43:1"
																},
																"nativeSrc": "3733:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3733:71:1"
															},
															"nativeSrc": "3733:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3733:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3874:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3874:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3887:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3887:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3898:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3898:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3883:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:1"
																		},
																		"nativeSrc": "3883:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack",
																	"nativeSrc": "3814:59:1",
																	"nodeType": "YulIdentifier",
																	"src": "3814:59:1"
																},
																"nativeSrc": "3814:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3814:88:1"
															},
															"nativeSrc": "3814:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3814:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3956:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3969:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3969:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3980:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3980:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3965:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:1"
																		},
																		"nativeSrc": "3965:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3965:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3912:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3912:43:1"
																},
																"nativeSrc": "3912:72:1",
																"nodeType": "YulFunctionCall",
																"src": "3912:72:1"
															},
															"nativeSrc": "3912:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "3912:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1400_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "3517:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3643:9:1",
														"nodeType": "YulTypedName",
														"src": "3643:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3655:6:1",
														"nodeType": "YulTypedName",
														"src": "3655:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3663:6:1",
														"nodeType": "YulTypedName",
														"src": "3663:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3671:6:1",
														"nodeType": "YulTypedName",
														"src": "3671:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3682:4:1",
														"nodeType": "YulTypedName",
														"src": "3682:4:1",
														"type": ""
													}
												],
												"src": "3517:474:1"
											},
											{
												"body": {
													"nativeSrc": "4040:79:1",
													"nodeType": "YulBlock",
													"src": "4040:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4097:16:1",
																"nodeType": "YulBlock",
																"src": "4097:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4106:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4106:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4109:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4109:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4099:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4099:6:1"
																			},
																			"nativeSrc": "4099:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4099:12:1"
																		},
																		"nativeSrc": "4099:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4099:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4063:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4063:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4088:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4088:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4070:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4070:17:1"
																				},
																				"nativeSrc": "4070:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4070:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4060:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4060:2:1"
																		},
																		"nativeSrc": "4060:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4053:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4053:6:1"
																},
																"nativeSrc": "4053:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4053:43:1"
															},
															"nativeSrc": "4050:63:1",
															"nodeType": "YulIf",
															"src": "4050:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3997:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4033:5:1",
														"nodeType": "YulTypedName",
														"src": "4033:5:1",
														"type": ""
													}
												],
												"src": "3997:122:1"
											},
											{
												"body": {
													"nativeSrc": "4177:87:1",
													"nodeType": "YulBlock",
													"src": "4177:87:1",
													"statements": [
														{
															"nativeSrc": "4187:29:1",
															"nodeType": "YulAssignment",
															"src": "4187:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4209:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4209:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4196:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4196:12:1"
																},
																"nativeSrc": "4196:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4196:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4187:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4187:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4252:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4252:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "4225:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4225:26:1"
																},
																"nativeSrc": "4225:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4225:33:1"
															},
															"nativeSrc": "4225:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4225:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "4125:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4155:6:1",
														"nodeType": "YulTypedName",
														"src": "4155:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4163:3:1",
														"nodeType": "YulTypedName",
														"src": "4163:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4171:5:1",
														"nodeType": "YulTypedName",
														"src": "4171:5:1",
														"type": ""
													}
												],
												"src": "4125:139:1"
											},
											{
												"body": {
													"nativeSrc": "4371:409:1",
													"nodeType": "YulBlock",
													"src": "4371:409:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4417:83:1",
																"nodeType": "YulBlock",
																"src": "4417:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4419:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4419:77:1"
																			},
																			"nativeSrc": "4419:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4419:79:1"
																		},
																		"nativeSrc": "4419:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4419:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4401:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4401:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4388:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:1"
																		},
																		"nativeSrc": "4388:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4388:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4413:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4384:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4384:3:1"
																},
																"nativeSrc": "4384:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4384:32:1"
															},
															"nativeSrc": "4381:119:1",
															"nodeType": "YulIf",
															"src": "4381:119:1"
														},
														{
															"nativeSrc": "4510:117:1",
															"nodeType": "YulBlock",
															"src": "4510:117:1",
															"statements": [
																{
																	"nativeSrc": "4525:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4525:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4539:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4529:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4529:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4554:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4554:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4589:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4589:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4600:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4600:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4585:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4585:3:1"
																				},
																				"nativeSrc": "4585:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4585:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4609:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4609:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4564:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4564:20:1"
																		},
																		"nativeSrc": "4564:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4564:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4554:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4554:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4637:136:1",
															"nodeType": "YulBlock",
															"src": "4637:136:1",
															"statements": [
																{
																	"nativeSrc": "4652:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4652:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4666:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4656:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4656:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4682:81:1",
																	"nodeType": "YulAssignment",
																	"src": "4682:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4735:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4735:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4746:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4746:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4731:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4731:3:1"
																				},
																				"nativeSrc": "4731:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4731:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4755:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4755:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1400",
																			"nativeSrc": "4692:38:1",
																			"nodeType": "YulIdentifier",
																			"src": "4692:38:1"
																		},
																		"nativeSrc": "4692:71:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4692:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4682:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4682:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1400",
												"nativeSrc": "4270:510:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4333:9:1",
														"nodeType": "YulTypedName",
														"src": "4333:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4344:7:1",
														"nodeType": "YulTypedName",
														"src": "4344:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4356:6:1",
														"nodeType": "YulTypedName",
														"src": "4356:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													}
												],
												"src": "4270:510:1"
											},
											{
												"body": {
													"nativeSrc": "4851:53:1",
													"nodeType": "YulBlock",
													"src": "4851:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4868:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4868:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4891:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4891:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4873:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4873:17:1"
																		},
																		"nativeSrc": "4873:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4873:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4861:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4861:6:1"
																},
																"nativeSrc": "4861:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4861:37:1"
															},
															"nativeSrc": "4861:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4861:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "4786:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4839:5:1",
														"nodeType": "YulTypedName",
														"src": "4839:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4846:3:1",
														"nodeType": "YulTypedName",
														"src": "4846:3:1",
														"type": ""
													}
												],
												"src": "4786:118:1"
											},
											{
												"body": {
													"nativeSrc": "5008:124:1",
													"nodeType": "YulBlock",
													"src": "5008:124:1",
													"statements": [
														{
															"nativeSrc": "5018:26:1",
															"nodeType": "YulAssignment",
															"src": "5018:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5030:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5030:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5026:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:1"
																},
																"nativeSrc": "5026:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5026:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5018:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5018:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5098:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5098:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5111:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5111:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5122:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5122:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5107:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5107:3:1"
																		},
																		"nativeSrc": "5107:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5107:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5054:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5054:43:1"
																},
																"nativeSrc": "5054:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5054:71:1"
															},
															"nativeSrc": "5054:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5054:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4910:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4980:9:1",
														"nodeType": "YulTypedName",
														"src": "4980:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4992:6:1",
														"nodeType": "YulTypedName",
														"src": "4992:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5003:4:1",
														"nodeType": "YulTypedName",
														"src": "5003:4:1",
														"type": ""
													}
												],
												"src": "4910:222:1"
											},
											{
												"body": {
													"nativeSrc": "5181:43:1",
													"nodeType": "YulBlock",
													"src": "5181:43:1",
													"statements": [
														{
															"nativeSrc": "5191:27:1",
															"nodeType": "YulAssignment",
															"src": "5191:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5206:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5206:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5213:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5213:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5202:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:1"
																},
																"nativeSrc": "5202:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5202:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5191:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5191:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5138:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5163:5:1",
														"nodeType": "YulTypedName",
														"src": "5163:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5173:7:1",
														"nodeType": "YulTypedName",
														"src": "5173:7:1",
														"type": ""
													}
												],
												"src": "5138:86:1"
											},
											{
												"body": {
													"nativeSrc": "5271:77:1",
													"nodeType": "YulBlock",
													"src": "5271:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5326:16:1",
																"nodeType": "YulBlock",
																"src": "5326:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5335:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5335:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5338:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5338:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5328:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5328:6:1"
																			},
																			"nativeSrc": "5328:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5328:12:1"
																		},
																		"nativeSrc": "5328:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5328:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5294:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5294:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5317:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5317:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "5301:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "5301:15:1"
																				},
																				"nativeSrc": "5301:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5301:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5291:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5291:2:1"
																		},
																		"nativeSrc": "5291:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5291:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5284:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5284:6:1"
																},
																"nativeSrc": "5284:41:1",
																"nodeType": "YulFunctionCall",
																"src": "5284:41:1"
															},
															"nativeSrc": "5281:61:1",
															"nodeType": "YulIf",
															"src": "5281:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "5230:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5264:5:1",
														"nodeType": "YulTypedName",
														"src": "5264:5:1",
														"type": ""
													}
												],
												"src": "5230:118:1"
											},
											{
												"body": {
													"nativeSrc": "5404:85:1",
													"nodeType": "YulBlock",
													"src": "5404:85:1",
													"statements": [
														{
															"nativeSrc": "5414:29:1",
															"nodeType": "YulAssignment",
															"src": "5414:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5436:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5436:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5423:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5423:12:1"
																},
																"nativeSrc": "5423:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5423:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5414:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5414:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5477:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5477:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "5452:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "5452:24:1"
																},
																"nativeSrc": "5452:31:1",
																"nodeType": "YulFunctionCall",
																"src": "5452:31:1"
															},
															"nativeSrc": "5452:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "5452:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "5354:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5382:6:1",
														"nodeType": "YulTypedName",
														"src": "5382:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5390:3:1",
														"nodeType": "YulTypedName",
														"src": "5390:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5398:5:1",
														"nodeType": "YulTypedName",
														"src": "5398:5:1",
														"type": ""
													}
												],
												"src": "5354:135:1"
											},
											{
												"body": {
													"nativeSrc": "5594:407:1",
													"nodeType": "YulBlock",
													"src": "5594:407:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5640:83:1",
																"nodeType": "YulBlock",
																"src": "5640:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5642:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5642:77:1"
																			},
																			"nativeSrc": "5642:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5642:79:1"
																		},
																		"nativeSrc": "5642:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5642:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5615:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5615:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5624:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5624:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5611:3:1"
																		},
																		"nativeSrc": "5611:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5611:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5636:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5636:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:1"
																},
																"nativeSrc": "5607:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5607:32:1"
															},
															"nativeSrc": "5604:119:1",
															"nodeType": "YulIf",
															"src": "5604:119:1"
														},
														{
															"nativeSrc": "5733:115:1",
															"nodeType": "YulBlock",
															"src": "5733:115:1",
															"statements": [
																{
																	"nativeSrc": "5748:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5748:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5762:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5762:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5752:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5752:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5777:61:1",
																	"nodeType": "YulAssignment",
																	"src": "5777:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5810:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5810:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5821:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5806:3:1"
																				},
																				"nativeSrc": "5806:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5806:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5830:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "5787:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "5787:18:1"
																		},
																		"nativeSrc": "5787:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5787:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5777:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5777:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5858:136:1",
															"nodeType": "YulBlock",
															"src": "5858:136:1",
															"statements": [
																{
																	"nativeSrc": "5873:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5873:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5887:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5887:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5877:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5877:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5903:81:1",
																	"nodeType": "YulAssignment",
																	"src": "5903:81:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5956:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5956:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5967:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5967:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5952:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5952:3:1"
																				},
																				"nativeSrc": "5952:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5952:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5976:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5976:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_enum$_StakingPeriod_$1400",
																			"nativeSrc": "5913:38:1",
																			"nodeType": "YulIdentifier",
																			"src": "5913:38:1"
																		},
																		"nativeSrc": "5913:71:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5913:71:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5903:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5903:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8t_enum$_StakingPeriod_$1400",
												"nativeSrc": "5495:506:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5556:9:1",
														"nodeType": "YulTypedName",
														"src": "5556:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5567:7:1",
														"nodeType": "YulTypedName",
														"src": "5567:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5579:6:1",
														"nodeType": "YulTypedName",
														"src": "5579:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5587:6:1",
														"nodeType": "YulTypedName",
														"src": "5587:6:1",
														"type": ""
													}
												],
												"src": "5495:506:1"
											},
											{
												"body": {
													"nativeSrc": "6039:28:1",
													"nodeType": "YulBlock",
													"src": "6039:28:1",
													"statements": [
														{
															"nativeSrc": "6049:12:1",
															"nodeType": "YulAssignment",
															"src": "6049:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "6056:5:1",
																"nodeType": "YulIdentifier",
																"src": "6056:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6049:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6007:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6025:5:1",
														"nodeType": "YulTypedName",
														"src": "6025:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6035:3:1",
														"nodeType": "YulTypedName",
														"src": "6035:3:1",
														"type": ""
													}
												],
												"src": "6007:60:1"
											},
											{
												"body": {
													"nativeSrc": "6133:82:1",
													"nodeType": "YulBlock",
													"src": "6133:82:1",
													"statements": [
														{
															"nativeSrc": "6143:66:1",
															"nodeType": "YulAssignment",
															"src": "6143:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6201:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6201:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "6183:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "6183:17:1"
																				},
																				"nativeSrc": "6183:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6183:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6174:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "6174:8:1"
																		},
																		"nativeSrc": "6174:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6174:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6156:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6156:17:1"
																},
																"nativeSrc": "6156:53:1",
																"nodeType": "YulFunctionCall",
																"src": "6156:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6143:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6143:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "6073:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6113:5:1",
														"nodeType": "YulTypedName",
														"src": "6113:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6123:9:1",
														"nodeType": "YulTypedName",
														"src": "6123:9:1",
														"type": ""
													}
												],
												"src": "6073:142:1"
											},
											{
												"body": {
													"nativeSrc": "6281:66:1",
													"nodeType": "YulBlock",
													"src": "6281:66:1",
													"statements": [
														{
															"nativeSrc": "6291:50:1",
															"nodeType": "YulAssignment",
															"src": "6291:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6335:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6335:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "6304:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6304:30:1"
																},
																"nativeSrc": "6304:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6304:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6291:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6291:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "6221:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6261:5:1",
														"nodeType": "YulTypedName",
														"src": "6261:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6271:9:1",
														"nodeType": "YulTypedName",
														"src": "6271:9:1",
														"type": ""
													}
												],
												"src": "6221:126:1"
											},
											{
												"body": {
													"nativeSrc": "6427:66:1",
													"nodeType": "YulBlock",
													"src": "6427:66:1",
													"statements": [
														{
															"nativeSrc": "6437:50:1",
															"nodeType": "YulAssignment",
															"src": "6437:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6481:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6481:5:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "6450:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6450:30:1"
																},
																"nativeSrc": "6450:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6450:37:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6437:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "6437:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$209_to_t_address",
												"nativeSrc": "6353:140:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6407:5:1",
														"nodeType": "YulTypedName",
														"src": "6407:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6417:9:1",
														"nodeType": "YulTypedName",
														"src": "6417:9:1",
														"type": ""
													}
												],
												"src": "6353:140:1"
											},
											{
												"body": {
													"nativeSrc": "6578:80:1",
													"nodeType": "YulBlock",
													"src": "6578:80:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6595:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6595:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6645:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6645:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$209_to_t_address",
																			"nativeSrc": "6600:44:1",
																			"nodeType": "YulIdentifier",
																			"src": "6600:44:1"
																		},
																		"nativeSrc": "6600:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:51:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:1"
																},
																"nativeSrc": "6588:64:1",
																"nodeType": "YulFunctionCall",
																"src": "6588:64:1"
															},
															"nativeSrc": "6588:64:1",
															"nodeType": "YulExpressionStatement",
															"src": "6588:64:1"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$209_to_t_address_fromStack",
												"nativeSrc": "6499:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6566:5:1",
														"nodeType": "YulTypedName",
														"src": "6566:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6573:3:1",
														"nodeType": "YulTypedName",
														"src": "6573:3:1",
														"type": ""
													}
												],
												"src": "6499:159:1"
											},
											{
												"body": {
													"nativeSrc": "6776:138:1",
													"nodeType": "YulBlock",
													"src": "6776:138:1",
													"statements": [
														{
															"nativeSrc": "6786:26:1",
															"nodeType": "YulAssignment",
															"src": "6786:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6798:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6798:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6809:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6809:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6794:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:1"
																},
																"nativeSrc": "6794:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6794:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6786:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6786:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6880:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6880:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6893:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6904:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6889:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:1"
																		},
																		"nativeSrc": "6889:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6889:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$209_to_t_address_fromStack",
																	"nativeSrc": "6822:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "6822:57:1"
																},
																"nativeSrc": "6822:85:1",
																"nodeType": "YulFunctionCall",
																"src": "6822:85:1"
															},
															"nativeSrc": "6822:85:1",
															"nodeType": "YulExpressionStatement",
															"src": "6822:85:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed",
												"nativeSrc": "6664:250:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6748:9:1",
														"nodeType": "YulTypedName",
														"src": "6748:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6760:6:1",
														"nodeType": "YulTypedName",
														"src": "6760:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6771:4:1",
														"nodeType": "YulTypedName",
														"src": "6771:4:1",
														"type": ""
													}
												],
												"src": "6664:250:1"
											},
											{
												"body": {
													"nativeSrc": "6986:263:1",
													"nodeType": "YulBlock",
													"src": "6986:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7032:83:1",
																"nodeType": "YulBlock",
																"src": "7032:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7034:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7034:77:1"
																			},
																			"nativeSrc": "7034:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7034:79:1"
																		},
																		"nativeSrc": "7034:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7034:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7007:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7007:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7016:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7016:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7003:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7003:3:1"
																		},
																		"nativeSrc": "7003:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7003:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6999:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:1"
																},
																"nativeSrc": "6999:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6999:32:1"
															},
															"nativeSrc": "6996:119:1",
															"nodeType": "YulIf",
															"src": "6996:119:1"
														},
														{
															"nativeSrc": "7125:117:1",
															"nodeType": "YulBlock",
															"src": "7125:117:1",
															"statements": [
																{
																	"nativeSrc": "7140:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7140:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7154:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7154:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7144:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7144:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7169:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7169:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7204:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7204:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7215:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7215:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7200:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7200:3:1"
																				},
																				"nativeSrc": "7200:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7200:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7224:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7224:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7179:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7179:20:1"
																		},
																		"nativeSrc": "7179:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7179:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7169:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7169:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6920:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6956:9:1",
														"nodeType": "YulTypedName",
														"src": "6956:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6967:7:1",
														"nodeType": "YulTypedName",
														"src": "6967:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6979:6:1",
														"nodeType": "YulTypedName",
														"src": "6979:6:1",
														"type": ""
													}
												],
												"src": "6920:329:1"
											},
											{
												"body": {
													"nativeSrc": "7283:152:1",
													"nodeType": "YulBlock",
													"src": "7283:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7300:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7300:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7303:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7303:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7293:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7293:6:1"
																},
																"nativeSrc": "7293:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7293:88:1"
															},
															"nativeSrc": "7293:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7293:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7397:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7400:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7390:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:1"
																},
																"nativeSrc": "7390:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7390:15:1"
															},
															"nativeSrc": "7390:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7421:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7421:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7424:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7424:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7414:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7414:6:1"
																},
																"nativeSrc": "7414:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7414:15:1"
															},
															"nativeSrc": "7414:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7414:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7255:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7255:180:1"
											},
											{
												"body": {
													"nativeSrc": "7486:149:1",
													"nodeType": "YulBlock",
													"src": "7486:149:1",
													"statements": [
														{
															"nativeSrc": "7496:25:1",
															"nodeType": "YulAssignment",
															"src": "7496:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7519:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7519:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7501:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7501:17:1"
																},
																"nativeSrc": "7501:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7501:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7496:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7496:1:1"
																}
															]
														},
														{
															"nativeSrc": "7530:25:1",
															"nodeType": "YulAssignment",
															"src": "7530:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7553:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7553:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7535:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "7535:17:1"
																},
																"nativeSrc": "7535:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7535:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7530:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "7530:1:1"
																}
															]
														},
														{
															"nativeSrc": "7564:17:1",
															"nodeType": "YulAssignment",
															"src": "7564:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7576:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7576:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7579:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7579:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7572:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7572:3:1"
																},
																"nativeSrc": "7572:9:1",
																"nodeType": "YulFunctionCall",
																"src": "7572:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7564:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7564:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7606:22:1",
																"nodeType": "YulBlock",
																"src": "7606:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7608:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7608:16:1"
																			},
																			"nativeSrc": "7608:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7608:18:1"
																		},
																		"nativeSrc": "7608:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7608:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7597:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7597:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7603:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7603:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7594:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7594:2:1"
																},
																"nativeSrc": "7594:11:1",
																"nodeType": "YulFunctionCall",
																"src": "7594:11:1"
															},
															"nativeSrc": "7591:37:1",
															"nodeType": "YulIf",
															"src": "7591:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7441:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7472:1:1",
														"nodeType": "YulTypedName",
														"src": "7472:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7475:1:1",
														"nodeType": "YulTypedName",
														"src": "7475:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7481:4:1",
														"nodeType": "YulTypedName",
														"src": "7481:4:1",
														"type": ""
													}
												],
												"src": "7441:194:1"
											},
											{
												"body": {
													"nativeSrc": "7737:73:1",
													"nodeType": "YulBlock",
													"src": "7737:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7754:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7754:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7759:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7759:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7747:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:1"
																},
																"nativeSrc": "7747:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7747:19:1"
															},
															"nativeSrc": "7747:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "7747:19:1"
														},
														{
															"nativeSrc": "7775:29:1",
															"nodeType": "YulAssignment",
															"src": "7775:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7794:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7794:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7799:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7799:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7790:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7790:3:1"
																},
																"nativeSrc": "7790:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7790:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7775:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "7775:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7641:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7709:3:1",
														"nodeType": "YulTypedName",
														"src": "7709:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7714:6:1",
														"nodeType": "YulTypedName",
														"src": "7714:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7725:11:1",
														"nodeType": "YulTypedName",
														"src": "7725:11:1",
														"type": ""
													}
												],
												"src": "7641:169:1"
											},
											{
												"body": {
													"nativeSrc": "7922:74:1",
													"nodeType": "YulBlock",
													"src": "7922:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7944:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7944:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7952:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7952:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7940:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7940:3:1"
																		},
																		"nativeSrc": "7940:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:14:1"
																	},
																	{
																		"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "7956:32:1",
																		"nodeType": "YulLiteral",
																		"src": "7956:32:1",
																		"type": "",
																		"value": "stake value should not be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:1"
																},
																"nativeSrc": "7933:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7933:56:1"
															},
															"nativeSrc": "7933:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "7933:56:1"
														}
													]
												},
												"name": "store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
												"nativeSrc": "7816:180:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7914:6:1",
														"nodeType": "YulTypedName",
														"src": "7914:6:1",
														"type": ""
													}
												],
												"src": "7816:180:1"
											},
											{
												"body": {
													"nativeSrc": "8148:220:1",
													"nodeType": "YulBlock",
													"src": "8148:220:1",
													"statements": [
														{
															"nativeSrc": "8158:74:1",
															"nodeType": "YulAssignment",
															"src": "8158:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8224:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8224:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8229:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8165:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8165:58:1"
																},
																"nativeSrc": "8165:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8165:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8158:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8330:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8330:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																	"nativeSrc": "8241:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "8241:88:1"
																},
																"nativeSrc": "8241:93:1",
																"nodeType": "YulFunctionCall",
																"src": "8241:93:1"
															},
															"nativeSrc": "8241:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "8241:93:1"
														},
														{
															"nativeSrc": "8343:19:1",
															"nodeType": "YulAssignment",
															"src": "8343:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8354:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8354:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8359:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8359:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8350:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8350:3:1"
																},
																"nativeSrc": "8350:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8350:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8343:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8343:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8002:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8136:3:1",
														"nodeType": "YulTypedName",
														"src": "8136:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8144:3:1",
														"nodeType": "YulTypedName",
														"src": "8144:3:1",
														"type": ""
													}
												],
												"src": "8002:366:1"
											},
											{
												"body": {
													"nativeSrc": "8545:248:1",
													"nodeType": "YulBlock",
													"src": "8545:248:1",
													"statements": [
														{
															"nativeSrc": "8555:26:1",
															"nodeType": "YulAssignment",
															"src": "8555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8567:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8567:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8578:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8578:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:1"
																},
																"nativeSrc": "8563:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8555:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8555:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8602:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8602:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8613:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8613:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8598:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8598:3:1"
																		},
																		"nativeSrc": "8598:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8598:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8621:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8621:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8627:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8627:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8617:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8617:3:1"
																		},
																		"nativeSrc": "8617:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8617:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8591:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8591:6:1"
																},
																"nativeSrc": "8591:47:1",
																"nodeType": "YulFunctionCall",
																"src": "8591:47:1"
															},
															"nativeSrc": "8591:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "8591:47:1"
														},
														{
															"nativeSrc": "8647:139:1",
															"nodeType": "YulAssignment",
															"src": "8647:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8781:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8781:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8655:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "8655:124:1"
																},
																"nativeSrc": "8655:131:1",
																"nodeType": "YulFunctionCall",
																"src": "8655:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8647:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8647:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8374:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8525:9:1",
														"nodeType": "YulTypedName",
														"src": "8525:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8540:4:1",
														"nodeType": "YulTypedName",
														"src": "8540:4:1",
														"type": ""
													}
												],
												"src": "8374:419:1"
											},
											{
												"body": {
													"nativeSrc": "8905:73:1",
													"nodeType": "YulBlock",
													"src": "8905:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8927:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8927:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8935:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8935:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8923:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8923:3:1"
																		},
																		"nativeSrc": "8923:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:14:1"
																	},
																	{
																		"hexValue": "5374616b696e6720706572696f64206973206e6f742065787069726564",
																		"kind": "string",
																		"nativeSrc": "8939:31:1",
																		"nodeType": "YulLiteral",
																		"src": "8939:31:1",
																		"type": "",
																		"value": "Staking period is not expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8916:6:1"
																},
																"nativeSrc": "8916:55:1",
																"nodeType": "YulFunctionCall",
																"src": "8916:55:1"
															},
															"nativeSrc": "8916:55:1",
															"nodeType": "YulExpressionStatement",
															"src": "8916:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
												"nativeSrc": "8799:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8897:6:1",
														"nodeType": "YulTypedName",
														"src": "8897:6:1",
														"type": ""
													}
												],
												"src": "8799:179:1"
											},
											{
												"body": {
													"nativeSrc": "9130:220:1",
													"nodeType": "YulBlock",
													"src": "9130:220:1",
													"statements": [
														{
															"nativeSrc": "9140:74:1",
															"nodeType": "YulAssignment",
															"src": "9140:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9206:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9206:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9211:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9147:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "9147:58:1"
																},
																"nativeSrc": "9147:67:1",
																"nodeType": "YulFunctionCall",
																"src": "9147:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9140:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9312:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9312:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																	"nativeSrc": "9223:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "9223:88:1"
																},
																"nativeSrc": "9223:93:1",
																"nodeType": "YulFunctionCall",
																"src": "9223:93:1"
															},
															"nativeSrc": "9223:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "9223:93:1"
														},
														{
															"nativeSrc": "9325:19:1",
															"nodeType": "YulAssignment",
															"src": "9325:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9336:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9336:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9341:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9341:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9332:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9332:3:1"
																},
																"nativeSrc": "9332:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9332:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9325:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9325:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8984:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9118:3:1",
														"nodeType": "YulTypedName",
														"src": "9118:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9126:3:1",
														"nodeType": "YulTypedName",
														"src": "9126:3:1",
														"type": ""
													}
												],
												"src": "8984:366:1"
											},
											{
												"body": {
													"nativeSrc": "9527:248:1",
													"nodeType": "YulBlock",
													"src": "9527:248:1",
													"statements": [
														{
															"nativeSrc": "9537:26:1",
															"nodeType": "YulAssignment",
															"src": "9537:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9549:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9549:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9560:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9545:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9545:3:1"
																},
																"nativeSrc": "9545:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9545:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9537:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9537:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9584:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9595:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9595:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9580:3:1"
																		},
																		"nativeSrc": "9580:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9580:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9603:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "9603:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9599:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9599:3:1"
																		},
																		"nativeSrc": "9599:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9599:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9573:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9573:6:1"
																},
																"nativeSrc": "9573:47:1",
																"nodeType": "YulFunctionCall",
																"src": "9573:47:1"
															},
															"nativeSrc": "9573:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "9573:47:1"
														},
														{
															"nativeSrc": "9629:139:1",
															"nodeType": "YulAssignment",
															"src": "9629:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9763:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9763:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9637:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "9637:124:1"
																},
																"nativeSrc": "9637:131:1",
																"nodeType": "YulFunctionCall",
																"src": "9637:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9629:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9629:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9356:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9507:9:1",
														"nodeType": "YulTypedName",
														"src": "9507:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9522:4:1",
														"nodeType": "YulTypedName",
														"src": "9522:4:1",
														"type": ""
													}
												],
												"src": "9356:419:1"
											},
											{
												"body": {
													"nativeSrc": "9887:64:1",
													"nodeType": "YulBlock",
													"src": "9887:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9909:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9909:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9917:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9917:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9905:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9905:3:1"
																		},
																		"nativeSrc": "9905:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9905:14:1"
																	},
																	{
																		"hexValue": "496e76616c6964205374616b6520416d6f756e74",
																		"kind": "string",
																		"nativeSrc": "9921:22:1",
																		"nodeType": "YulLiteral",
																		"src": "9921:22:1",
																		"type": "",
																		"value": "Invalid Stake Amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9898:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9898:6:1"
																},
																"nativeSrc": "9898:46:1",
																"nodeType": "YulFunctionCall",
																"src": "9898:46:1"
															},
															"nativeSrc": "9898:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "9898:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
												"nativeSrc": "9781:170:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9879:6:1",
														"nodeType": "YulTypedName",
														"src": "9879:6:1",
														"type": ""
													}
												],
												"src": "9781:170:1"
											},
											{
												"body": {
													"nativeSrc": "10103:220:1",
													"nodeType": "YulBlock",
													"src": "10103:220:1",
													"statements": [
														{
															"nativeSrc": "10113:74:1",
															"nodeType": "YulAssignment",
															"src": "10113:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10179:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10179:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10184:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10184:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10120:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "10120:58:1"
																},
																"nativeSrc": "10120:67:1",
																"nodeType": "YulFunctionCall",
																"src": "10120:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10113:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10113:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10285:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10285:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																	"nativeSrc": "10196:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "10196:88:1"
																},
																"nativeSrc": "10196:93:1",
																"nodeType": "YulFunctionCall",
																"src": "10196:93:1"
															},
															"nativeSrc": "10196:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "10196:93:1"
														},
														{
															"nativeSrc": "10298:19:1",
															"nodeType": "YulAssignment",
															"src": "10298:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10309:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10309:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10314:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10314:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10305:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10305:3:1"
																},
																"nativeSrc": "10305:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10305:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10298:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10298:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9957:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10091:3:1",
														"nodeType": "YulTypedName",
														"src": "10091:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10099:3:1",
														"nodeType": "YulTypedName",
														"src": "10099:3:1",
														"type": ""
													}
												],
												"src": "9957:366:1"
											},
											{
												"body": {
													"nativeSrc": "10500:248:1",
													"nodeType": "YulBlock",
													"src": "10500:248:1",
													"statements": [
														{
															"nativeSrc": "10510:26:1",
															"nodeType": "YulAssignment",
															"src": "10510:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10522:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10522:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10533:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10533:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10518:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:1"
																},
																"nativeSrc": "10518:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10518:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10510:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10510:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10557:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10557:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10568:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10568:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10553:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10553:3:1"
																		},
																		"nativeSrc": "10553:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10553:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10576:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10576:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10582:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10582:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10572:3:1"
																		},
																		"nativeSrc": "10572:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10572:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10546:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10546:6:1"
																},
																"nativeSrc": "10546:47:1",
																"nodeType": "YulFunctionCall",
																"src": "10546:47:1"
															},
															"nativeSrc": "10546:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "10546:47:1"
														},
														{
															"nativeSrc": "10602:139:1",
															"nodeType": "YulAssignment",
															"src": "10602:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10736:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10736:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10610:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "10610:124:1"
																},
																"nativeSrc": "10610:131:1",
																"nodeType": "YulFunctionCall",
																"src": "10610:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10602:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10602:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10329:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10480:9:1",
														"nodeType": "YulTypedName",
														"src": "10480:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10495:4:1",
														"nodeType": "YulTypedName",
														"src": "10495:4:1",
														"type": ""
													}
												],
												"src": "10329:419:1"
											},
											{
												"body": {
													"nativeSrc": "10880:206:1",
													"nodeType": "YulBlock",
													"src": "10880:206:1",
													"statements": [
														{
															"nativeSrc": "10890:26:1",
															"nodeType": "YulAssignment",
															"src": "10890:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10902:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10902:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10913:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10913:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10898:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10898:3:1"
																},
																"nativeSrc": "10898:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10898:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10890:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10890:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10970:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10970:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10983:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10983:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10994:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10994:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10979:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:1"
																		},
																		"nativeSrc": "10979:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10926:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10926:43:1"
																},
																"nativeSrc": "10926:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10926:71:1"
															},
															"nativeSrc": "10926:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10926:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11051:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11051:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11064:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11064:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11075:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11075:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11060:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:1"
																		},
																		"nativeSrc": "11060:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11060:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11007:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11007:43:1"
																},
																"nativeSrc": "11007:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11007:72:1"
															},
															"nativeSrc": "11007:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11007:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10754:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10844:9:1",
														"nodeType": "YulTypedName",
														"src": "10844:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10856:6:1",
														"nodeType": "YulTypedName",
														"src": "10856:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10864:6:1",
														"nodeType": "YulTypedName",
														"src": "10864:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10875:4:1",
														"nodeType": "YulTypedName",
														"src": "10875:4:1",
														"type": ""
													}
												],
												"src": "10754:332:1"
											},
											{
												"body": {
													"nativeSrc": "11134:48:1",
													"nodeType": "YulBlock",
													"src": "11134:48:1",
													"statements": [
														{
															"nativeSrc": "11144:32:1",
															"nodeType": "YulAssignment",
															"src": "11144:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11169:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11169:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11162:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11162:6:1"
																		},
																		"nativeSrc": "11162:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11162:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11155:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11155:6:1"
																},
																"nativeSrc": "11155:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11155:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11144:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11144:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "11092:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11116:5:1",
														"nodeType": "YulTypedName",
														"src": "11116:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11126:7:1",
														"nodeType": "YulTypedName",
														"src": "11126:7:1",
														"type": ""
													}
												],
												"src": "11092:90:1"
											},
											{
												"body": {
													"nativeSrc": "11228:76:1",
													"nodeType": "YulBlock",
													"src": "11228:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11282:16:1",
																"nodeType": "YulBlock",
																"src": "11282:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11291:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11291:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11294:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11294:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11284:6:1"
																			},
																			"nativeSrc": "11284:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11284:12:1"
																		},
																		"nativeSrc": "11284:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11284:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11251:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11251:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11273:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11273:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11258:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "11258:14:1"
																				},
																				"nativeSrc": "11258:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11258:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11248:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11248:2:1"
																		},
																		"nativeSrc": "11248:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11248:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11241:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11241:6:1"
																},
																"nativeSrc": "11241:40:1",
																"nodeType": "YulFunctionCall",
																"src": "11241:40:1"
															},
															"nativeSrc": "11238:60:1",
															"nodeType": "YulIf",
															"src": "11238:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11188:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11221:5:1",
														"nodeType": "YulTypedName",
														"src": "11221:5:1",
														"type": ""
													}
												],
												"src": "11188:116:1"
											},
											{
												"body": {
													"nativeSrc": "11370:77:1",
													"nodeType": "YulBlock",
													"src": "11370:77:1",
													"statements": [
														{
															"nativeSrc": "11380:22:1",
															"nodeType": "YulAssignment",
															"src": "11380:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11395:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11395:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11389:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11389:5:1"
																},
																"nativeSrc": "11389:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11389:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11380:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11380:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11435:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11435:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11411:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "11411:23:1"
																},
																"nativeSrc": "11411:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11411:30:1"
															},
															"nativeSrc": "11411:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11411:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11310:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11348:6:1",
														"nodeType": "YulTypedName",
														"src": "11348:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11356:3:1",
														"nodeType": "YulTypedName",
														"src": "11356:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11364:5:1",
														"nodeType": "YulTypedName",
														"src": "11364:5:1",
														"type": ""
													}
												],
												"src": "11310:137:1"
											},
											{
												"body": {
													"nativeSrc": "11527:271:1",
													"nodeType": "YulBlock",
													"src": "11527:271:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11573:83:1",
																"nodeType": "YulBlock",
																"src": "11573:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11575:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "11575:77:1"
																			},
																			"nativeSrc": "11575:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11575:79:1"
																		},
																		"nativeSrc": "11575:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11575:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11548:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11548:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11557:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11557:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11544:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11544:3:1"
																		},
																		"nativeSrc": "11544:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11544:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11569:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11569:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11540:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11540:3:1"
																},
																"nativeSrc": "11540:32:1",
																"nodeType": "YulFunctionCall",
																"src": "11540:32:1"
															},
															"nativeSrc": "11537:119:1",
															"nodeType": "YulIf",
															"src": "11537:119:1"
														},
														{
															"nativeSrc": "11666:125:1",
															"nodeType": "YulBlock",
															"src": "11666:125:1",
															"statements": [
																{
																	"nativeSrc": "11681:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11681:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11695:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11695:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11685:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11685:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11710:71:1",
																	"nodeType": "YulAssignment",
																	"src": "11710:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11753:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11753:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11764:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11764:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11749:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11749:3:1"
																				},
																				"nativeSrc": "11749:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11749:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11773:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11773:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11720:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "11720:28:1"
																		},
																		"nativeSrc": "11720:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11720:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11710:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11710:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11453:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11497:9:1",
														"nodeType": "YulTypedName",
														"src": "11497:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11508:7:1",
														"nodeType": "YulTypedName",
														"src": "11508:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11520:6:1",
														"nodeType": "YulTypedName",
														"src": "11520:6:1",
														"type": ""
													}
												],
												"src": "11453:345:1"
											},
											{
												"body": {
													"nativeSrc": "11958:288:1",
													"nodeType": "YulBlock",
													"src": "11958:288:1",
													"statements": [
														{
															"nativeSrc": "11968:26:1",
															"nodeType": "YulAssignment",
															"src": "11968:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11980:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11980:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11991:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11991:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11976:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11976:3:1"
																},
																"nativeSrc": "11976:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11976:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11968:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11968:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12048:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12048:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12061:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12061:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12072:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12072:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12057:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12057:3:1"
																		},
																		"nativeSrc": "12057:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12057:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12004:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12004:43:1"
																},
																"nativeSrc": "12004:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12004:71:1"
															},
															"nativeSrc": "12004:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12004:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12129:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12129:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12142:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12142:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12153:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12153:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12138:3:1"
																		},
																		"nativeSrc": "12138:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12138:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12085:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12085:43:1"
																},
																"nativeSrc": "12085:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12085:72:1"
															},
															"nativeSrc": "12085:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12085:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12211:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12211:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12224:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12224:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12235:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12235:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12220:3:1"
																		},
																		"nativeSrc": "12220:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12220:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12167:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12167:43:1"
																},
																"nativeSrc": "12167:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12167:72:1"
															},
															"nativeSrc": "12167:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12167:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11804:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11914:9:1",
														"nodeType": "YulTypedName",
														"src": "11914:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11926:6:1",
														"nodeType": "YulTypedName",
														"src": "11926:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11934:6:1",
														"nodeType": "YulTypedName",
														"src": "11934:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11942:6:1",
														"nodeType": "YulTypedName",
														"src": "11942:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11953:4:1",
														"nodeType": "YulTypedName",
														"src": "11953:4:1",
														"type": ""
													}
												],
												"src": "11804:442:1"
											},
											{
												"body": {
													"nativeSrc": "12315:80:1",
													"nodeType": "YulBlock",
													"src": "12315:80:1",
													"statements": [
														{
															"nativeSrc": "12325:22:1",
															"nodeType": "YulAssignment",
															"src": "12325:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12340:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12340:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12334:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12334:5:1"
																},
																"nativeSrc": "12334:13:1",
																"nodeType": "YulFunctionCall",
																"src": "12334:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12325:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12325:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12383:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12383:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "12356:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "12356:26:1"
																},
																"nativeSrc": "12356:33:1",
																"nodeType": "YulFunctionCall",
																"src": "12356:33:1"
															},
															"nativeSrc": "12356:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "12356:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "12252:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12293:6:1",
														"nodeType": "YulTypedName",
														"src": "12293:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12301:3:1",
														"nodeType": "YulTypedName",
														"src": "12301:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12309:5:1",
														"nodeType": "YulTypedName",
														"src": "12309:5:1",
														"type": ""
													}
												],
												"src": "12252:143:1"
											},
											{
												"body": {
													"nativeSrc": "12478:274:1",
													"nodeType": "YulBlock",
													"src": "12478:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12524:83:1",
																"nodeType": "YulBlock",
																"src": "12524:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12526:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12526:77:1"
																			},
																			"nativeSrc": "12526:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12526:79:1"
																		},
																		"nativeSrc": "12526:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12526:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12499:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12499:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12508:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12508:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12495:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12495:3:1"
																		},
																		"nativeSrc": "12495:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12495:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12520:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12520:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12491:3:1"
																},
																"nativeSrc": "12491:32:1",
																"nodeType": "YulFunctionCall",
																"src": "12491:32:1"
															},
															"nativeSrc": "12488:119:1",
															"nodeType": "YulIf",
															"src": "12488:119:1"
														},
														{
															"nativeSrc": "12617:128:1",
															"nodeType": "YulBlock",
															"src": "12617:128:1",
															"statements": [
																{
																	"nativeSrc": "12632:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12632:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12646:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12646:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12636:6:1",
																			"nodeType": "YulTypedName",
																			"src": "12636:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12661:74:1",
																	"nodeType": "YulAssignment",
																	"src": "12661:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12707:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "12707:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12718:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12718:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12703:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12703:3:1"
																				},
																				"nativeSrc": "12703:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12703:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12727:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "12727:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12671:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "12671:31:1"
																		},
																		"nativeSrc": "12671:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12671:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12661:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12661:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12401:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12448:9:1",
														"nodeType": "YulTypedName",
														"src": "12448:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12459:7:1",
														"nodeType": "YulTypedName",
														"src": "12459:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12471:6:1",
														"nodeType": "YulTypedName",
														"src": "12471:6:1",
														"type": ""
													}
												],
												"src": "12401:351:1"
											},
											{
												"body": {
													"nativeSrc": "12884:206:1",
													"nodeType": "YulBlock",
													"src": "12884:206:1",
													"statements": [
														{
															"nativeSrc": "12894:26:1",
															"nodeType": "YulAssignment",
															"src": "12894:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12906:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12906:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12917:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12902:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12902:3:1"
																},
																"nativeSrc": "12902:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12902:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12894:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12894:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12974:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12974:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12987:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12987:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12998:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12998:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12983:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12983:3:1"
																		},
																		"nativeSrc": "12983:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12983:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12930:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12930:43:1"
																},
																"nativeSrc": "12930:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12930:71:1"
															},
															"nativeSrc": "12930:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12930:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13055:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13068:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13068:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13079:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13079:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13064:3:1"
																		},
																		"nativeSrc": "13064:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13064:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13011:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13011:43:1"
																},
																"nativeSrc": "13011:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13011:72:1"
															},
															"nativeSrc": "13011:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13011:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12758:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12848:9:1",
														"nodeType": "YulTypedName",
														"src": "12848:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12860:6:1",
														"nodeType": "YulTypedName",
														"src": "12860:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12868:6:1",
														"nodeType": "YulTypedName",
														"src": "12868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12879:4:1",
														"nodeType": "YulTypedName",
														"src": "12879:4:1",
														"type": ""
													}
												],
												"src": "12758:332:1"
											},
											{
												"body": {
													"nativeSrc": "13202:65:1",
													"nodeType": "YulBlock",
													"src": "13202:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13224:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13224:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13232:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13232:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13220:3:1"
																		},
																		"nativeSrc": "13220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13220:14:1"
																	},
																	{
																		"hexValue": "546f6b656e205472616e73666572204661696c6564",
																		"kind": "string",
																		"nativeSrc": "13236:23:1",
																		"nodeType": "YulLiteral",
																		"src": "13236:23:1",
																		"type": "",
																		"value": "Token Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13213:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:1"
																},
																"nativeSrc": "13213:47:1",
																"nodeType": "YulFunctionCall",
																"src": "13213:47:1"
															},
															"nativeSrc": "13213:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "13213:47:1"
														}
													]
												},
												"name": "store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
												"nativeSrc": "13096:171:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13194:6:1",
														"nodeType": "YulTypedName",
														"src": "13194:6:1",
														"type": ""
													}
												],
												"src": "13096:171:1"
											},
											{
												"body": {
													"nativeSrc": "13419:220:1",
													"nodeType": "YulBlock",
													"src": "13419:220:1",
													"statements": [
														{
															"nativeSrc": "13429:74:1",
															"nodeType": "YulAssignment",
															"src": "13429:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13495:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13495:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13500:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13500:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13436:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "13436:58:1"
																},
																"nativeSrc": "13436:67:1",
																"nodeType": "YulFunctionCall",
																"src": "13436:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13429:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13429:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13601:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13601:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																	"nativeSrc": "13512:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "13512:88:1"
																},
																"nativeSrc": "13512:93:1",
																"nodeType": "YulFunctionCall",
																"src": "13512:93:1"
															},
															"nativeSrc": "13512:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "13512:93:1"
														},
														{
															"nativeSrc": "13614:19:1",
															"nodeType": "YulAssignment",
															"src": "13614:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13625:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13625:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13630:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13630:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13621:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13621:3:1"
																},
																"nativeSrc": "13621:12:1",
																"nodeType": "YulFunctionCall",
																"src": "13621:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13614:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13614:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13273:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13407:3:1",
														"nodeType": "YulTypedName",
														"src": "13407:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13415:3:1",
														"nodeType": "YulTypedName",
														"src": "13415:3:1",
														"type": ""
													}
												],
												"src": "13273:366:1"
											},
											{
												"body": {
													"nativeSrc": "13816:248:1",
													"nodeType": "YulBlock",
													"src": "13816:248:1",
													"statements": [
														{
															"nativeSrc": "13826:26:1",
															"nodeType": "YulAssignment",
															"src": "13826:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13838:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13838:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13849:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13834:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13834:3:1"
																},
																"nativeSrc": "13834:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13834:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13826:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13826:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13884:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13884:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13869:3:1"
																		},
																		"nativeSrc": "13869:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13869:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13892:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "13892:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13898:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13898:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13888:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13888:3:1"
																		},
																		"nativeSrc": "13888:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13888:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13862:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13862:6:1"
																},
																"nativeSrc": "13862:47:1",
																"nodeType": "YulFunctionCall",
																"src": "13862:47:1"
															},
															"nativeSrc": "13862:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "13862:47:1"
														},
														{
															"nativeSrc": "13918:139:1",
															"nodeType": "YulAssignment",
															"src": "13918:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14052:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14052:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13926:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "13926:124:1"
																},
																"nativeSrc": "13926:131:1",
																"nodeType": "YulFunctionCall",
																"src": "13926:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13918:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13645:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13796:9:1",
														"nodeType": "YulTypedName",
														"src": "13796:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13811:4:1",
														"nodeType": "YulTypedName",
														"src": "13811:4:1",
														"type": ""
													}
												],
												"src": "13645:419:1"
											},
											{
												"body": {
													"nativeSrc": "14176:119:1",
													"nodeType": "YulBlock",
													"src": "14176:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14198:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "14198:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14206:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14206:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14194:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14194:3:1"
																		},
																		"nativeSrc": "14194:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14194:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "14210:34:1",
																		"nodeType": "YulLiteral",
																		"src": "14210:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14187:6:1"
																},
																"nativeSrc": "14187:58:1",
																"nodeType": "YulFunctionCall",
																"src": "14187:58:1"
															},
															"nativeSrc": "14187:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "14187:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14266:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "14266:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14274:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14274:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14262:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14262:3:1"
																		},
																		"nativeSrc": "14262:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14262:15:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "14279:8:1",
																		"nodeType": "YulLiteral",
																		"src": "14279:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:1"
																},
																"nativeSrc": "14255:33:1",
																"nodeType": "YulFunctionCall",
																"src": "14255:33:1"
															},
															"nativeSrc": "14255:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "14255:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "14070:225:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14168:6:1",
														"nodeType": "YulTypedName",
														"src": "14168:6:1",
														"type": ""
													}
												],
												"src": "14070:225:1"
											},
											{
												"body": {
													"nativeSrc": "14447:220:1",
													"nodeType": "YulBlock",
													"src": "14447:220:1",
													"statements": [
														{
															"nativeSrc": "14457:74:1",
															"nodeType": "YulAssignment",
															"src": "14457:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14523:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14523:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14528:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14528:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14464:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "14464:58:1"
																},
																"nativeSrc": "14464:67:1",
																"nodeType": "YulFunctionCall",
																"src": "14464:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14457:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14457:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14629:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14629:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "14540:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "14540:88:1"
																},
																"nativeSrc": "14540:93:1",
																"nodeType": "YulFunctionCall",
																"src": "14540:93:1"
															},
															"nativeSrc": "14540:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "14540:93:1"
														},
														{
															"nativeSrc": "14642:19:1",
															"nodeType": "YulAssignment",
															"src": "14642:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14653:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14653:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14658:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14658:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14649:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14649:3:1"
																},
																"nativeSrc": "14649:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14649:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14642:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14642:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14301:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14435:3:1",
														"nodeType": "YulTypedName",
														"src": "14435:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14443:3:1",
														"nodeType": "YulTypedName",
														"src": "14443:3:1",
														"type": ""
													}
												],
												"src": "14301:366:1"
											},
											{
												"body": {
													"nativeSrc": "14844:248:1",
													"nodeType": "YulBlock",
													"src": "14844:248:1",
													"statements": [
														{
															"nativeSrc": "14854:26:1",
															"nodeType": "YulAssignment",
															"src": "14854:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14866:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14866:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14877:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14877:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14862:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14862:3:1"
																},
																"nativeSrc": "14862:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14862:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14854:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14854:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14901:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14901:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14912:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14912:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14897:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14897:3:1"
																		},
																		"nativeSrc": "14897:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14897:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14920:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14920:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14926:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14926:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14916:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14916:3:1"
																		},
																		"nativeSrc": "14916:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14916:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14890:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14890:6:1"
																},
																"nativeSrc": "14890:47:1",
																"nodeType": "YulFunctionCall",
																"src": "14890:47:1"
															},
															"nativeSrc": "14890:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "14890:47:1"
														},
														{
															"nativeSrc": "14946:139:1",
															"nodeType": "YulAssignment",
															"src": "14946:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15080:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15080:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14954:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "14954:124:1"
																},
																"nativeSrc": "14954:131:1",
																"nodeType": "YulFunctionCall",
																"src": "14954:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14946:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14946:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14673:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14824:9:1",
														"nodeType": "YulTypedName",
														"src": "14824:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14839:4:1",
														"nodeType": "YulTypedName",
														"src": "14839:4:1",
														"type": ""
													}
												],
												"src": "14673:419:1"
											},
											{
												"body": {
													"nativeSrc": "15126:152:1",
													"nodeType": "YulBlock",
													"src": "15126:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15143:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15143:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15146:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15146:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15136:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15136:6:1"
																},
																"nativeSrc": "15136:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15136:88:1"
															},
															"nativeSrc": "15136:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15136:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15240:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15240:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15243:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15243:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15233:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15233:6:1"
																},
																"nativeSrc": "15233:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15233:15:1"
															},
															"nativeSrc": "15233:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15233:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15264:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15264:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15267:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15267:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15257:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15257:6:1"
																},
																"nativeSrc": "15257:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15257:15:1"
															},
															"nativeSrc": "15257:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15257:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15098:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15098:180:1"
											},
											{
												"body": {
													"nativeSrc": "15326:143:1",
													"nodeType": "YulBlock",
													"src": "15326:143:1",
													"statements": [
														{
															"nativeSrc": "15336:25:1",
															"nodeType": "YulAssignment",
															"src": "15336:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15359:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15359:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15341:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15341:17:1"
																},
																"nativeSrc": "15341:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15341:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15336:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15336:1:1"
																}
															]
														},
														{
															"nativeSrc": "15370:25:1",
															"nodeType": "YulAssignment",
															"src": "15370:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15393:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15393:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15375:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15375:17:1"
																},
																"nativeSrc": "15375:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15375:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15370:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15370:1:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15417:22:1",
																"nodeType": "YulBlock",
																"src": "15417:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15419:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15419:16:1"
																			},
																			"nativeSrc": "15419:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15419:18:1"
																		},
																		"nativeSrc": "15419:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15419:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15414:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15414:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15407:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15407:6:1"
																},
																"nativeSrc": "15407:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15407:9:1"
															},
															"nativeSrc": "15404:35:1",
															"nodeType": "YulIf",
															"src": "15404:35:1"
														},
														{
															"nativeSrc": "15449:14:1",
															"nodeType": "YulAssignment",
															"src": "15449:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15458:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15458:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15461:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15461:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15454:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15454:3:1"
																},
																"nativeSrc": "15454:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15454:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15449:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15449:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15284:185:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15315:1:1",
														"nodeType": "YulTypedName",
														"src": "15315:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15318:1:1",
														"nodeType": "YulTypedName",
														"src": "15318:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15324:1:1",
														"nodeType": "YulTypedName",
														"src": "15324:1:1",
														"type": ""
													}
												],
												"src": "15284:185:1"
											},
											{
												"body": {
													"nativeSrc": "15523:362:1",
													"nodeType": "YulBlock",
													"src": "15523:362:1",
													"statements": [
														{
															"nativeSrc": "15533:25:1",
															"nodeType": "YulAssignment",
															"src": "15533:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15556:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15556:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15538:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15538:17:1"
																},
																"nativeSrc": "15538:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15538:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15533:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15533:1:1"
																}
															]
														},
														{
															"nativeSrc": "15567:25:1",
															"nodeType": "YulAssignment",
															"src": "15567:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15590:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15590:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15572:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15572:17:1"
																},
																"nativeSrc": "15572:20:1",
																"nodeType": "YulFunctionCall",
																"src": "15572:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15567:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "15567:1:1"
																}
															]
														},
														{
															"nativeSrc": "15601:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15601:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15624:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15624:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15627:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15627:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15620:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15620:3:1"
																},
																"nativeSrc": "15620:9:1",
																"nodeType": "YulFunctionCall",
																"src": "15620:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "15605:11:1",
																	"nodeType": "YulTypedName",
																	"src": "15605:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15638:41:1",
															"nodeType": "YulAssignment",
															"src": "15638:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "15667:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "15667:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15649:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "15649:17:1"
																},
																"nativeSrc": "15649:30:1",
																"nodeType": "YulFunctionCall",
																"src": "15649:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "15638:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "15638:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15856:22:1",
																"nodeType": "YulBlock",
																"src": "15856:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15858:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "15858:16:1"
																			},
																			"nativeSrc": "15858:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15858:18:1"
																		},
																		"nativeSrc": "15858:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "15858:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15789:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15789:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15782:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "15782:6:1"
																				},
																				"nativeSrc": "15782:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15782:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15812:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "15812:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15819:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "15819:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15828:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "15828:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15815:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "15815:3:1"
																						},
																						"nativeSrc": "15815:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "15815:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15809:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "15809:2:1"
																				},
																				"nativeSrc": "15809:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "15809:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15762:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "15762:2:1"
																		},
																		"nativeSrc": "15762:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15762:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15742:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15742:6:1"
																},
																"nativeSrc": "15742:113:1",
																"nodeType": "YulFunctionCall",
																"src": "15742:113:1"
															},
															"nativeSrc": "15739:139:1",
															"nodeType": "YulIf",
															"src": "15739:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "15475:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15506:1:1",
														"nodeType": "YulTypedName",
														"src": "15506:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15509:1:1",
														"nodeType": "YulTypedName",
														"src": "15509:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "15515:7:1",
														"nodeType": "YulTypedName",
														"src": "15515:7:1",
														"type": ""
													}
												],
												"src": "15475:410:1"
											},
											{
												"body": {
													"nativeSrc": "15997:76:1",
													"nodeType": "YulBlock",
													"src": "15997:76:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16019:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16019:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16027:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16027:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16015:3:1"
																		},
																		"nativeSrc": "16015:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16015:14:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "16031:34:1",
																		"nodeType": "YulLiteral",
																		"src": "16031:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16008:6:1"
																},
																"nativeSrc": "16008:58:1",
																"nodeType": "YulFunctionCall",
																"src": "16008:58:1"
															},
															"nativeSrc": "16008:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "16008:58:1"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "15891:182:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15989:6:1",
														"nodeType": "YulTypedName",
														"src": "15989:6:1",
														"type": ""
													}
												],
												"src": "15891:182:1"
											},
											{
												"body": {
													"nativeSrc": "16225:220:1",
													"nodeType": "YulBlock",
													"src": "16225:220:1",
													"statements": [
														{
															"nativeSrc": "16235:74:1",
															"nodeType": "YulAssignment",
															"src": "16235:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16301:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16301:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16242:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "16242:58:1"
																},
																"nativeSrc": "16242:67:1",
																"nodeType": "YulFunctionCall",
																"src": "16242:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16235:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16235:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16407:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16407:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "16318:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "16318:88:1"
																},
																"nativeSrc": "16318:93:1",
																"nodeType": "YulFunctionCall",
																"src": "16318:93:1"
															},
															"nativeSrc": "16318:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "16318:93:1"
														},
														{
															"nativeSrc": "16420:19:1",
															"nodeType": "YulAssignment",
															"src": "16420:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16431:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16431:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16436:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16436:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16427:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16427:3:1"
																},
																"nativeSrc": "16427:12:1",
																"nodeType": "YulFunctionCall",
																"src": "16427:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16420:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16420:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16079:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16213:3:1",
														"nodeType": "YulTypedName",
														"src": "16213:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16221:3:1",
														"nodeType": "YulTypedName",
														"src": "16221:3:1",
														"type": ""
													}
												],
												"src": "16079:366:1"
											},
											{
												"body": {
													"nativeSrc": "16622:248:1",
													"nodeType": "YulBlock",
													"src": "16622:248:1",
													"statements": [
														{
															"nativeSrc": "16632:26:1",
															"nodeType": "YulAssignment",
															"src": "16632:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16644:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16644:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16655:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16655:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16640:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16640:3:1"
																},
																"nativeSrc": "16640:18:1",
																"nodeType": "YulFunctionCall",
																"src": "16640:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16632:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16632:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16679:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16679:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16690:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16690:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16675:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16675:3:1"
																		},
																		"nativeSrc": "16675:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16675:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16698:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "16698:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16704:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16704:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16694:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16694:3:1"
																		},
																		"nativeSrc": "16694:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16694:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16668:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16668:6:1"
																},
																"nativeSrc": "16668:47:1",
																"nodeType": "YulFunctionCall",
																"src": "16668:47:1"
															},
															"nativeSrc": "16668:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "16668:47:1"
														},
														{
															"nativeSrc": "16724:139:1",
															"nodeType": "YulAssignment",
															"src": "16724:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16858:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "16858:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16732:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "16732:124:1"
																},
																"nativeSrc": "16732:131:1",
																"nodeType": "YulFunctionCall",
																"src": "16732:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16724:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16724:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16451:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16602:9:1",
														"nodeType": "YulTypedName",
														"src": "16602:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16617:4:1",
														"nodeType": "YulTypedName",
														"src": "16617:4:1",
														"type": ""
													}
												],
												"src": "16451:419:1"
											},
											{
												"body": {
													"nativeSrc": "16920:147:1",
													"nodeType": "YulBlock",
													"src": "16920:147:1",
													"statements": [
														{
															"nativeSrc": "16930:25:1",
															"nodeType": "YulAssignment",
															"src": "16930:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16953:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16953:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16935:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16935:17:1"
																},
																"nativeSrc": "16935:20:1",
																"nodeType": "YulFunctionCall",
																"src": "16935:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16930:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "16930:1:1"
																}
															]
														},
														{
															"nativeSrc": "16964:25:1",
															"nodeType": "YulAssignment",
															"src": "16964:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16987:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "16987:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16969:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "16969:17:1"
																},
																"nativeSrc": "16969:20:1",
																"nodeType": "YulFunctionCall",
																"src": "16969:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16964:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "16964:1:1"
																}
															]
														},
														{
															"nativeSrc": "16998:16:1",
															"nodeType": "YulAssignment",
															"src": "16998:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17009:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17009:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17012:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17012:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17005:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17005:3:1"
																},
																"nativeSrc": "17005:9:1",
																"nodeType": "YulFunctionCall",
																"src": "17005:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "16998:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16998:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17038:22:1",
																"nodeType": "YulBlock",
																"src": "17038:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17040:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "17040:16:1"
																			},
																			"nativeSrc": "17040:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17040:18:1"
																		},
																		"nativeSrc": "17040:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17040:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17030:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "17030:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "17033:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "17033:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17027:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "17027:2:1"
																},
																"nativeSrc": "17027:10:1",
																"nodeType": "YulFunctionCall",
																"src": "17027:10:1"
															},
															"nativeSrc": "17024:36:1",
															"nodeType": "YulIf",
															"src": "17024:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "16876:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16907:1:1",
														"nodeType": "YulTypedName",
														"src": "16907:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16910:1:1",
														"nodeType": "YulTypedName",
														"src": "16910:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "16916:3:1",
														"nodeType": "YulTypedName",
														"src": "16916:3:1",
														"type": ""
													}
												],
												"src": "16876:191:1"
											},
											{
												"body": {
													"nativeSrc": "17101:152:1",
													"nodeType": "YulBlock",
													"src": "17101:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17118:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17118:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17121:77:1",
																		"nodeType": "YulLiteral",
																		"src": "17121:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17111:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17111:6:1"
																},
																"nativeSrc": "17111:88:1",
																"nodeType": "YulFunctionCall",
																"src": "17111:88:1"
															},
															"nativeSrc": "17111:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "17111:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17215:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17215:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17218:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17218:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17208:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17208:6:1"
																},
																"nativeSrc": "17208:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17208:15:1"
															},
															"nativeSrc": "17208:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17208:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17239:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17239:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17242:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17242:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17232:6:1"
																},
																"nativeSrc": "17232:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17232:15:1"
															},
															"nativeSrc": "17232:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17232:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17073:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "17073:180:1"
											},
											{
												"body": {
													"nativeSrc": "17287:152:1",
													"nodeType": "YulBlock",
													"src": "17287:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17304:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17304:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17307:77:1",
																		"nodeType": "YulLiteral",
																		"src": "17307:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17297:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17297:6:1"
																},
																"nativeSrc": "17297:88:1",
																"nodeType": "YulFunctionCall",
																"src": "17297:88:1"
															},
															"nativeSrc": "17297:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "17297:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17401:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17401:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17404:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17404:4:1",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17394:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17394:6:1"
																},
																"nativeSrc": "17394:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17394:15:1"
															},
															"nativeSrc": "17394:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17394:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17425:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17425:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17428:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17428:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17418:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17418:6:1"
																},
																"nativeSrc": "17418:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17418:15:1"
															},
															"nativeSrc": "17418:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17418:15:1"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "17259:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "17259:180:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_enum$_StakingPeriod_$1400(value) {\n        if iszero(lt(value, 5)) { revert(0, 0) }\n    }\n\n    function abi_decode_t_enum$_StakingPeriod_$1400(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_StakingPeriod_$1400(value)\n    }\n\n    function abi_decode_tuple_t_addresst_enum$_StakingPeriod_$1400(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$1400(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_StakingPeriod_$1400(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_StakingPeriod_$1400(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_StakingPeriod_$1400(value)\n    }\n\n    function convert_t_enum$_StakingPeriod_$1400_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_StakingPeriod_$1400(value)\n    }\n\n    function abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_StakingPeriod_$1400_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_StakingPeriod_$1400__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_enum$_StakingPeriod_$1400(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_StakingPeriod_$1400(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_StakingPeriod_$1400_t_uint256__to_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_StakingPeriod_$1400_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_enum$_StakingPeriod_$1400(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$1400(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8t_enum$_StakingPeriod_$1400(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_StakingPeriod_$1400(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$209_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$209_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$209_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$209__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$209_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392(memPtr) {\n\n        mstore(add(memPtr, 0), \"stake value should not be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking period is not expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid Stake Amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token Transfer Failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80639e196cad11610095578063bf58390311610064578063bf583903146102ae578063e627f2db146102cc578063e9917c07146102ea578063f2fde38b14610306576100fe565b80639e196cad14610214578063a3fcd25314610244578063ad9159fd14610260578063b8fcf93714610290576100fe565b8063715018a6116100d1578063715018a6146101b25780637e61badd146101bc5780638b0e9f3f146101d85780638da5cb5b146101f6576100fe565b8063063b35bf146101025780630ded03cd146101325780630e15561a146101625780633027ffc014610180575b5f80fd5b61011c60048036038101906101179190611880565b610322565b6040516101299190611931565b60405180910390f35b61014c6004803603810190610147919061194a565b6103ab565b604051610159919061198d565b60405180910390f35b61016a610517565b604051610177919061198d565b60405180910390f35b61019a60048036038101906101959190611880565b61051d565b6040516101a9939291906119a6565b60405180910390f35b6101ba61055a565b005b6101d660048036038101906101d19190611a05565b61056d565b005b6101e0610a8d565b6040516101ed919061198d565b60405180910390f35b6101fe610a93565b60405161020b9190611a52565b60405180910390f35b61022e6004803603810190610229919061194a565b610aba565b60405161023b919061198d565b60405180910390f35b61025e60048036038101906102599190611aa1565b610acf565b005b61027a60048036038101906102759190611880565b610b18565b604051610287919061198d565b60405180910390f35b610298610b94565b6040516102a59190611b3a565b60405180910390f35b6102b6610bb9565b6040516102c3919061198d565b60405180910390f35b6102d4610d09565b6040516102e1919061198d565b60405180910390f35b61030460048036038101906102ff9190611a05565b610d12565b005b610320600480360381019061031b9190611b53565b6111cf565b005b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610374576103736118be565b5b6004811115610386576103856118be565b5b81526020019081526020015f206001015f9054906101000a900460ff16905092915050565b5f8060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460048111156103fe576103fd6118be565b5b60048111156104105761040f6118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff166004811115610455576104546118be565b5b6004811115610467576104666118be565b5b815260200160028201548152505090505f610485825f015183611251565b90505f6104d160186104c3603c6104b5603c8860400151426104a79190611bab565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b9050600181106104e157806104e4565b60015b905061050d816104ff61016c856112cc90919063ffffffff16565b6112e190919063ffffffff16565b9350505050919050565b60025481565b6004602052815f5260405f20602052805f5260405f205f9150915050805f015490806001015f9054906101000a900460ff16908060020154905083565b6105626112f6565b61056b5f611374565b565b5f82116105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690611c38565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610601576106006118be565b5b6004811115610613576106126118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff166004811115610658576106576118be565b5b600481111561066a576106696118be565b5b8152602001600282015481525050905061068381611435565b6106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990611ca0565b60405180910390fd5b805f0151831115610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff90611d08565b60405180910390fd5b5f610712836103ab565b905061072a84835f015161145d90919063ffffffff16565b825f0181815250508160045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f856004811115610784576107836118be565b5b6004811115610796576107956118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff021916908360048111156107d5576107d46118be565b5b0217905550604082015181600201559050506107fc8460015461145d90919063ffffffff16565b6001819055506108178160025461147290919063ffffffff16565b6002819055505f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f85600481111561086f5761086e6118be565b5b6004811115610881576108806118be565b5b81526020019081526020015f205f0154036108a05761089f33611487565b5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016108fc929190611d26565b6020604051808303815f875af1158015610918573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061093c9190611d82565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd610982610a93565b33846040518463ffffffff1660e01b81526004016109a293929190611dad565b6020604051808303815f875af11580156109be573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e29190611d82565b503373ffffffffffffffffffffffffffffffffffffffff167f20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f56858542604051610a2d939291906119a6565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c57828542604051610a7f939291906119a6565b60405180910390a250505050565b60015481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052805f5260405f205f915090505481565b610ad76112f6565b8160ff1660055f836004811115610af157610af06118be565b5b6004811115610b0357610b026118be565b5b81526020019081526020015f20819055505050565b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610b6a57610b696118be565b5b6004811115610b7c57610b7b6118be565b5b81526020019081526020015f205f0154905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f610d0460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231610c02610a93565b6040518263ffffffff1660e01b8152600401610c1e9190611a52565b602060405180830381865afa158015610c39573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c5d9190611df6565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e610ca2610a93565b306040518363ffffffff1660e01b8152600401610cc0929190611e21565b602060405180830381865afa158015610cdb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cff9190611df6565b61158c565b905090565b5f600254905090565b5f8211610d54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4b90611c38565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610db293929190611dad565b6020604051808303815f875af1158015610dce573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610df29190611d82565b610e31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2890611e92565b60405180910390fd5b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610e8357610e826118be565b5b6004811115610e9557610e946118be565b5b81526020019081526020015f205f015403610fb457610eb3336115a4565b6040518060600160405280838152602001826004811115610ed757610ed66118be565b5b81526020014281525060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115610f3157610f306118be565b5b6004811115610f4357610f426118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff02191690836004811115610f8257610f816118be565b5b021790555060408201518160020155905050610fa98260015461147290919063ffffffff16565b600181905550611179565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f836004811115611006576110056118be565b5b6004811115611018576110176118be565b5b81526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff16600481111561105d5761105c6118be565b5b600481111561106f5761106e6118be565b5b8152602001600282015481525050905061109583825f015161147290919063ffffffff16565b815f018181525050428160400181815250508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8460048111156110f9576110f86118be565b5b600481111561110b5761110a6118be565b5b81526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff0219169083600481111561114a576111496118be565b5b0217905550604082015181600201559050506111718360015461147290919063ffffffff16565b600181905550505b3373ffffffffffffffffffffffffffffffffffffffff167fadd17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c8383426040516111c3939291906119a6565b60405180910390a25050565b6111d76112f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123c90611f20565b60405180910390fd5b61124e81611374565b50565b5f6112c460646112b660646112a860055f88602001516004811115611279576112786118be565b5b600481111561128b5761128a6118be565b5b81526020019081526020015f2054886112e190919063ffffffff16565b6112cc90919063ffffffff16565b6112cc90919063ffffffff16565b905092915050565b5f81836112d99190611f6b565b905092915050565b5f81836112ee9190611f9b565b905092915050565b6112fe61161b565b73ffffffffffffffffffffffffffffffffffffffff1661131c610a93565b73ffffffffffffffffffffffffffffffffffffffff1614611372576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136990612026565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8061144083611622565b836040015161144f9190612044565b905080421015915050919050565b5f818361146a9190611bab565b905092915050565b5f818361147f9190612044565b905092915050565b5f8061149283611752565b91509150811561158757600360016003805490506114b09190611bab565b815481106114c1576114c0612077565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600382815481106114fd576114fc612077565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003805480611554576115536120a4565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555b505050565b5f81831061159a578161159c565b825b905092915050565b5f6115ae82611752565b5090508061161757600382908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5050565b5f33905090565b5f806004811115611636576116356118be565b5b8260200151600481111561164d5761164c6118be565b5b146117405760016004811115611666576116656118be565b5b8260200151600481111561167d5761167c6118be565b5b146117365760026004811115611696576116956118be565b5b826020015160048111156116ad576116ac6118be565b5b1461172c57600360048111156116c6576116c56118be565b5b826020015160048111156116dd576116dc6118be565b5b14611722576004808111156116f5576116f46118be565b5b8260200151600481111561170c5761170b6118be565b5b14611717575f61171d565b6301e133805b611727565b629e34005b611731565b6276a7005b61173b565b62278d005b611745565b6213c6805b63ffffffff169050919050565b5f805f5b6003805490508110156117f2576003818154811061177757611776612077565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117de5760018192509250506117fa565b6001816117eb9190612044565b9050611756565b505f80915091505b915091565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61182c82611803565b9050919050565b61183c81611822565b8114611846575f80fd5b50565b5f8135905061185781611833565b92915050565b60058110611869575f80fd5b50565b5f8135905061187a8161185d565b92915050565b5f8060408385031215611896576118956117ff565b5b5f6118a385828601611849565b92505060206118b48582860161186c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106118fc576118fb6118be565b5b50565b5f81905061190c826118eb565b919050565b5f61191b826118ff565b9050919050565b61192b81611911565b82525050565b5f6020820190506119445f830184611922565b92915050565b5f6020828403121561195f5761195e6117ff565b5b5f61196c8482850161186c565b91505092915050565b5f819050919050565b61198781611975565b82525050565b5f6020820190506119a05f83018461197e565b92915050565b5f6060820190506119b95f83018661197e565b6119c66020830185611922565b6119d3604083018461197e565b949350505050565b6119e481611975565b81146119ee575f80fd5b50565b5f813590506119ff816119db565b92915050565b5f8060408385031215611a1b57611a1a6117ff565b5b5f611a28858286016119f1565b9250506020611a398582860161186c565b9150509250929050565b611a4c81611822565b82525050565b5f602082019050611a655f830184611a43565b92915050565b5f60ff82169050919050565b611a8081611a6b565b8114611a8a575f80fd5b50565b5f81359050611a9b81611a77565b92915050565b5f8060408385031215611ab757611ab66117ff565b5b5f611ac485828601611a8d565b9250506020611ad58582860161186c565b9150509250929050565b5f819050919050565b5f611b02611afd611af884611803565b611adf565b611803565b9050919050565b5f611b1382611ae8565b9050919050565b5f611b2482611b09565b9050919050565b611b3481611b1a565b82525050565b5f602082019050611b4d5f830184611b2b565b92915050565b5f60208284031215611b6857611b676117ff565b5b5f611b7584828501611849565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611bb582611975565b9150611bc083611975565b9250828203905081811115611bd857611bd7611b7e565b5b92915050565b5f82825260208201905092915050565b7f7374616b652076616c75652073686f756c64206e6f74206265207a65726f00005f82015250565b5f611c22601e83611bde565b9150611c2d82611bee565b602082019050919050565b5f6020820190508181035f830152611c4f81611c16565b9050919050565b7f5374616b696e6720706572696f64206973206e6f7420657870697265640000005f82015250565b5f611c8a601d83611bde565b9150611c9582611c56565b602082019050919050565b5f6020820190508181035f830152611cb781611c7e565b9050919050565b7f496e76616c6964205374616b6520416d6f756e740000000000000000000000005f82015250565b5f611cf2601483611bde565b9150611cfd82611cbe565b602082019050919050565b5f6020820190508181035f830152611d1f81611ce6565b9050919050565b5f604082019050611d395f830185611a43565b611d46602083018461197e565b9392505050565b5f8115159050919050565b611d6181611d4d565b8114611d6b575f80fd5b50565b5f81519050611d7c81611d58565b92915050565b5f60208284031215611d9757611d966117ff565b5b5f611da484828501611d6e565b91505092915050565b5f606082019050611dc05f830186611a43565b611dcd6020830185611a43565b611dda604083018461197e565b949350505050565b5f81519050611df0816119db565b92915050565b5f60208284031215611e0b57611e0a6117ff565b5b5f611e1884828501611de2565b91505092915050565b5f604082019050611e345f830185611a43565b611e416020830184611a43565b9392505050565b7f546f6b656e205472616e73666572204661696c656400000000000000000000005f82015250565b5f611e7c601583611bde565b9150611e8782611e48565b602082019050919050565b5f6020820190508181035f830152611ea981611e70565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f611f0a602683611bde565b9150611f1582611eb0565b604082019050919050565b5f6020820190508181035f830152611f3781611efe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611f7582611975565b9150611f8083611975565b925082611f9057611f8f611f3e565b5b828204905092915050565b5f611fa582611975565b9150611fb083611975565b9250828202611fbe81611975565b91508282048414831517611fd557611fd4611b7e565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612010602083611bde565b915061201b82611fdc565b602082019050919050565b5f6020820190508181035f83015261203d81612004565b9050919050565b5f61204e82611975565b915061205983611975565b925082820190508082111561207157612070611b7e565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffdfea264697066735822122083d4ae0564dabb7bad705aa1dde1fa681f86f6311e247eaeaf879dca3467770a64736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E196CAD GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBF583903 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBF583903 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0xE627F2DB EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xE9917C07 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x9E196CAD EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0xA3FCD253 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xAD9159FD EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x290 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x7E61BADD EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x63B35BF EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0xDED03CD EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x3027FFC0 EQ PUSH2 0x180 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x11C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x1931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH2 0x517 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x177 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BA PUSH2 0x55A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0x56D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x275 SWAP2 SWAP1 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1A05 JUMP JUMPDEST PUSH2 0xD12 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x11CF JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x374 JUMPI PUSH2 0x373 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x386 JUMPI PUSH2 0x385 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x3FE JUMPI PUSH2 0x3FD PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x410 JUMPI PUSH2 0x40F PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x455 JUMPI PUSH2 0x454 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x467 JUMPI PUSH2 0x466 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0x485 DUP3 PUSH0 ADD MLOAD DUP4 PUSH2 0x1251 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x4D1 PUSH1 0x18 PUSH2 0x4C3 PUSH1 0x3C PUSH2 0x4B5 PUSH1 0x3C DUP9 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x4A7 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x4E1 JUMPI DUP1 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 PUSH2 0x4FF PUSH2 0x16C DUP6 PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x56B PUSH0 PUSH2 0x1374 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x601 JUMPI PUSH2 0x600 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x613 JUMPI PUSH2 0x612 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x683 DUP2 PUSH2 0x1435 JUMP JUMPDEST PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD MLOAD DUP4 GT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x712 DUP4 PUSH2 0x3AB JUMP JUMPDEST SWAP1 POP PUSH2 0x72A DUP5 DUP4 PUSH0 ADD MLOAD PUSH2 0x145D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH0 ADD DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x784 JUMPI PUSH2 0x783 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x796 JUMPI PUSH2 0x795 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7D5 JUMPI PUSH2 0x7D4 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x7FC DUP5 PUSH1 0x1 SLOAD PUSH2 0x145D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x817 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x86F JUMPI PUSH2 0x86E PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x881 JUMPI PUSH2 0x880 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0x8A0 JUMPI PUSH2 0x89F CALLER PUSH2 0x1487 JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP3 SWAP2 SWAP1 PUSH2 0x1D26 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x918 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0x982 PUSH2 0xA93 JUMP JUMPDEST CALLER DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9BE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA2D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57 DUP3 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA7F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAD7 PUSH2 0x12F6 JUMP JUMPDEST DUP2 PUSH1 0xFF AND PUSH1 0x5 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xAF1 JUMPI PUSH2 0xAF0 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB03 JUMPI PUSH2 0xB02 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH2 0xB69 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB7C JUMPI PUSH2 0xB7B PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xD04 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 PUSH2 0xC02 PUSH2 0xA93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC39 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E PUSH2 0xCA2 PUSH2 0xA93 JUMP JUMPDEST ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC0 SWAP3 SWAP2 SWAP1 PUSH2 0x1E21 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCDB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCFF SWAP2 SWAP1 PUSH2 0x1DF6 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xD54 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4B SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1D82 JUMP JUMPDEST PUSH2 0xE31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE28 SWAP1 PUSH2 0x1E92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE83 JUMPI PUSH2 0xE82 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE95 JUMPI PUSH2 0xE94 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD SUB PUSH2 0xFB4 JUMPI PUSH2 0xEB3 CALLER PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xED7 JUMPI PUSH2 0xED6 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF31 JUMPI PUSH2 0xF30 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF42 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xF82 JUMPI PUSH2 0xF81 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0xFA9 DUP3 PUSH1 0x1 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH2 0x1179 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1006 JUMPI PUSH2 0x1005 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1018 JUMPI PUSH2 0x1017 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x105D JUMPI PUSH2 0x105C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x106F JUMPI PUSH2 0x106E PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x1095 DUP4 DUP3 PUSH0 ADD MLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH0 ADD DUP2 DUP2 MSTORE POP POP TIMESTAMP DUP2 PUSH1 0x40 ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F8 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x110B JUMPI PUSH2 0x110A PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH2 0x1171 DUP4 PUSH1 0x1 SLOAD PUSH2 0x1472 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x11C3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x11D7 PUSH2 0x12F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123C SWAP1 PUSH2 0x1F20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x124E DUP2 PUSH2 0x1374 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 PUSH1 0x64 PUSH2 0x12B6 PUSH1 0x64 PUSH2 0x12A8 PUSH1 0x5 PUSH0 DUP9 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH2 0x1278 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x128B JUMPI PUSH2 0x128A PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP9 PUSH2 0x12E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x12CC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12D9 SWAP2 SWAP1 PUSH2 0x1F6B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x12EE SWAP2 SWAP1 PUSH2 0x1F9B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12FE PUSH2 0x161B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x131C PUSH2 0xA93 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1369 SWAP1 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1440 DUP4 PUSH2 0x1622 JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD PUSH2 0x144F SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP DUP1 TIMESTAMP LT ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x146A SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x147F SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1492 DUP4 PUSH2 0x1752 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1587 JUMPI PUSH1 0x3 PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1BAB JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 DUP1 SLOAD DUP1 PUSH2 0x1554 JUMPI PUSH2 0x1553 PUSH2 0x20A4 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x159A JUMPI DUP2 PUSH2 0x159C JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x15AE DUP3 PUSH2 0x1752 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0x1617 JUMPI PUSH1 0x3 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1636 JUMPI PUSH2 0x1635 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x164D JUMPI PUSH2 0x164C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1740 JUMPI PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1736 JUMPI PUSH1 0x2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1695 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16AD JUMPI PUSH2 0x16AC PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x172C JUMPI PUSH1 0x3 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16C6 JUMPI PUSH2 0x16C5 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DC PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1722 JUMPI PUSH1 0x4 DUP1 DUP2 GT ISZERO PUSH2 0x16F5 JUMPI PUSH2 0x16F4 PUSH2 0x18BE JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x170B PUSH2 0x18BE JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1717 JUMPI PUSH0 PUSH2 0x171D JUMP JUMPDEST PUSH4 0x1E13380 JUMPDEST PUSH2 0x1727 JUMP JUMPDEST PUSH3 0x9E3400 JUMPDEST PUSH2 0x1731 JUMP JUMPDEST PUSH3 0x76A700 JUMPDEST PUSH2 0x173B JUMP JUMPDEST PUSH3 0x278D00 JUMPDEST PUSH2 0x1745 JUMP JUMPDEST PUSH3 0x13C680 JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x17F2 JUMPI PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1777 JUMPI PUSH2 0x1776 PUSH2 0x2077 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17DE JUMPI PUSH1 0x1 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x17FA JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH2 0x17EB SWAP2 SWAP1 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP PUSH2 0x1756 JUMP JUMPDEST POP PUSH0 DUP1 SWAP2 POP SWAP2 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x182C DUP3 PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP2 EQ PUSH2 0x1846 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1857 DUP2 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x1869 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x187A DUP2 PUSH2 0x185D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1896 JUMPI PUSH2 0x1895 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18A3 DUP6 DUP3 DUP7 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x18FC JUMPI PUSH2 0x18FB PUSH2 0x18BE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x190C DUP3 PUSH2 0x18EB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP3 PUSH2 0x18FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192B DUP2 PUSH2 0x1911 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1944 PUSH0 DUP4 ADD DUP5 PUSH2 0x1922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH2 0x195E PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x196C DUP5 DUP3 DUP6 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1987 DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19B9 PUSH0 DUP4 ADD DUP7 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x19C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x19D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x19E4 DUP2 PUSH2 0x1975 JUMP JUMPDEST DUP2 EQ PUSH2 0x19EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FF DUP2 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1B JUMPI PUSH2 0x1A1A PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A28 DUP6 DUP3 DUP7 ADD PUSH2 0x19F1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A39 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A65 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A80 DUP2 PUSH2 0x1A6B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A9B DUP2 PUSH2 0x1A77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB7 JUMPI PUSH2 0x1AB6 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AC4 DUP6 DUP3 DUP7 ADD PUSH2 0x1A8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1AD5 DUP6 DUP3 DUP7 ADD PUSH2 0x186C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B02 PUSH2 0x1AFD PUSH2 0x1AF8 DUP5 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x1ADF JUMP JUMPDEST PUSH2 0x1803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B13 DUP3 PUSH2 0x1AE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B24 DUP3 PUSH2 0x1B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1B1A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B4D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH2 0x1B67 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B75 DUP5 DUP3 DUP6 ADD PUSH2 0x1849 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BB5 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC0 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1BD8 JUMPI PUSH2 0x1BD7 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C22 PUSH1 0x1E DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C4F DUP2 PUSH2 0x1C16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E6720706572696F64206973206E6F742065787069726564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A PUSH1 0x1D DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1C95 DUP3 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CB7 DUP2 PUSH2 0x1C7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964205374616B6520416D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CF2 PUSH1 0x14 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1CFD DUP3 PUSH2 0x1CBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D1F DUP2 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D39 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1D46 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D61 DUP2 PUSH2 0x1D4D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D6B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D7C DUP2 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D97 JUMPI PUSH2 0x1D96 PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DA4 DUP5 DUP3 DUP6 ADD PUSH2 0x1D6E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1DCD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1DDA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x197E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DF0 DUP2 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E0B JUMPI PUSH2 0x1E0A PUSH2 0x17FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E18 DUP5 DUP3 DUP6 ADD PUSH2 0x1DE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E34 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A43 JUMP JUMPDEST PUSH2 0x1E41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E205472616E73666572204661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7C PUSH1 0x15 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1E87 DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EA9 DUP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F0A PUSH1 0x26 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x1F15 DUP3 PUSH2 0x1EB0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F37 DUP2 PUSH2 0x1EFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F75 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F80 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F90 JUMPI PUSH2 0x1F8F PUSH2 0x1F3E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA5 DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB0 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1FBE DUP2 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 PUSH1 0x20 DUP4 PUSH2 0x1BDE JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP3 PUSH2 0x1FDC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x203D DUP2 PUSH2 0x2004 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x204E DUP3 PUSH2 0x1975 JUMP JUMPDEST SWAP2 POP PUSH2 0x2059 DUP4 PUSH2 0x1975 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x1B7E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xD4 0xAE SDIV PUSH5 0xDABB7BAD70 GAS LOG1 0xDD 0xE1 STATICCALL PUSH9 0x1F86F6311E247EAEAF DUP8 SWAP14 0xCA CALLVALUE PUSH8 0x770A64736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "25620:6578:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30122:181;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30309:536;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25718:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25981:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2485:101;;;:::i;:::-;;27707:1079;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25687:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26052:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31891:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29927:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26100:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;32035:160;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31725:120;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26825:876;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2735:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30122:181;30218:13;30250:6;:20;30257:12;30250:20;;;;;;;;;;;;;;;:34;30271:12;30250:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:46;;;;;;;;;;;;30243:53;;30122:181;;;;:::o;30309:536::-;30383:7;30402:22;30427:6;:18;30434:10;30427:18;;;;;;;;;;;;;;;:32;30446:12;30427:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;30402:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;30469:21;30493:47;30512:9;:16;;;30530:9;30493:18;:47::i;:::-;30469:71;;30550:16;30569:63;30629:2;30569:55;30621:2;30569:47;30613:2;30588:9;:19;;;30570:15;:37;;;;:::i;:::-;30569:43;;:47;;;;:::i;:::-;:51;;:55;;;;:::i;:::-;:59;;:63;;;;:::i;:::-;30550:82;;30665:1;30654:8;:12;30653:29;;30674:8;30653:29;;;30670:1;30653:29;30642:40;;30802:36;30829:8;30802:22;30820:3;30802:13;:17;;:22;;;;:::i;:::-;:26;;:36;;;;:::i;:::-;30795:43;;;;;30309:536;;;:::o;25718:27::-;;;;:::o;25981:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2485:101::-;1748:13;:11;:13::i;:::-;2549:30:::1;2576:1;2549:18;:30::i;:::-;2485:101::o:0;27707:1079::-;27802:1;27793:6;:10;27785:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;27848:22;27873:6;:18;27880:10;27873:18;;;;;;;;;;;;;;;:32;27892:12;27873:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;27848:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;27923:32;27945:9;27923:21;:32::i;:::-;27915:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;28017:9;:16;;;28007:6;:26;;27999:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;28068:23;28094:29;28110:12;28094:15;:29::i;:::-;28068:55;;28152:28;28173:6;28152:9;:16;;;:20;;:28;;;;:::i;:::-;28133:9;:16;;:47;;;;;28225:9;28190:6;:18;28197:10;28190:18;;;;;;;;;;;;;;;:32;28209:12;28190:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;28257:22;28272:6;28257:10;;:14;;:22;;;;:::i;:::-;28244:10;:35;;;;28304:33;28321:15;28304:12;;:16;;:33;;;;:::i;:::-;28289:12;:48;;;;28461:1;28418:6;:18;28425:10;28418:18;;;;;;;;;;;;;;;:32;28437:12;28418:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:44;28415:78;;28464:29;28482:10;28464:17;:29::i;:::-;28415:78;28503:7;;;;;;;;;;;:16;;;28520:10;28532:6;28503:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28549:7;;;;;;;;;;;:20;;;28570:7;:5;:7::i;:::-;28579:10;28591:15;28549:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;28636:10;28622:64;;;28648:6;28656:12;28670:15;28622:64;;;;;;;;:::i;:::-;;;;;;;;28720:10;28701:78;;;28732:15;28749:12;28763:15;28701:78;;;;;;;;:::i;:::-;;;;;;;;27775:1011;;27707:1079;;:::o;25687:25::-;;;;:::o;1855:85::-;1901:7;1927:6;;;;;;;;;;;1920:13;;1855:85;:::o;26052:41::-;;;;;;;;;;;;;;;;;:::o;31891:138::-;1748:13;:11;:13::i;:::-;32011:11:::1;31991:31;;:3;:17;31995:12;31991:17;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:31;;;;31891:138:::0;;:::o;29927:189::-;30038:7;30068:6;:20;30075:12;30068:20;;;;;;;;;;;;;;;:34;30089:12;30068:34;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:41;;;30061:48;;29927:189;;;;:::o;26100:21::-;;;;;;;;;;;;;:::o;32035:160::-;32083:7;32109:79;32118:7;;;;;;;;;;;:17;;;32136:7;:5;:7::i;:::-;32118:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32146:7;;;;;;;;;;;:17;;;32164:7;:5;:7::i;:::-;32181:4;32146:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32109:8;:79::i;:::-;32102:86;;32035:160;:::o;31725:120::-;31796:7;31826:12;;31819:19;;31725:120;:::o;26825:876::-;26924:1;26915:6;:10;26907:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;26978:7;;;;;;;;;;;:20;;;26999:10;27019:4;27026:6;26978:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26970:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;27115:1;27072:6;:18;27079:10;27072:18;;;;;;;;;;;;;;;:32;27091:12;27072:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:39;;;:44;27069:549;;27132:26;27147:10;27132:14;:26::i;:::-;27207:44;;;;;;;;27213:6;27207:44;;;;27221:12;27207:44;;;;;;;;:::i;:::-;;;;;;27235:15;27207:44;;;27172:6;:18;27179:10;27172:18;;;;;;;;;;;;;;;:32;27191:12;27172:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;27278:22;27293:6;27278:10;;:14;;:22;;;;:::i;:::-;27265:10;:35;;;;27069:549;;;27331:22;27356:6;:18;27363:10;27356:18;;;;;;;;;;;;;;;:32;27375:12;27356:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;27331:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;27421:28;27442:6;27421:9;:16;;;:20;;:28;;;;:::i;:::-;27402:9;:16;;:47;;;;;27485:15;27463:9;:19;;:37;;;;;27549:9;27514:6;:18;27521:10;27514:18;;;;;;;;;;;;;;;:32;27533:12;27514:32;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;27585:22;27600:6;27585:10;;:14;;:22;;;;:::i;:::-;27572:10;:35;;;;27317:301;27069:549;27644:10;27632:62;;;27656:6;27664:12;27678:15;27632:62;;;;;;;;:::i;:::-;;;;;;;;26825:876;;:::o;2735:198::-;1748:13;:11;:13::i;:::-;2843:1:::1;2823:22;;:8;:22;;::::0;2815:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2898:28;2917:8;2898:18;:28::i;:::-;2735:198:::0;:::o;28792:453::-;28891:7;29174:64;29234:3;29174:55;29225:3;29174:46;29193:3;:26;29197:9;:21;;;29193:26;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;29174:14;:18;;:46;;;;:::i;:::-;:50;;:55;;;;:::i;:::-;:59;;:64;;;;:::i;:::-;29167:71;;28792:453;;;;:::o;10055:96::-;10113:7;10143:1;10139;:5;;;;:::i;:::-;10132:12;;10055:96;;;;:::o;9670:::-;9728:7;9758:1;9754;:5;;;;:::i;:::-;9747:12;;9670:96;;;;:::o;2013:130::-;2087:12;:10;:12::i;:::-;2076:23;;:7;:5;:7::i;:::-;:23;;;2068:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2013:130::o;3087:187::-;3160:16;3179:6;;;;;;;;;;;3160:25;;3204:8;3195:6;;:17;;;;;;;;;;;;;;;;;;3258:8;3227:40;;3248:8;3227:40;;;;;;;;;;;;3150:124;3087:187;:::o;29252:238::-;29329:4;29345:24;29394:36;29420:9;29394:25;:36::i;:::-;29372:9;:19;;;:58;;;;:::i;:::-;29345:85;;29466:16;29447:15;:35;;29440:42;;;29252:238;;;:::o;9327:96::-;9385:7;9415:1;9411;:5;;;;:::i;:::-;9404:12;;9327:96;;;;:::o;8960:::-;9018:7;9048:1;9044;:5;;;;:::i;:::-;9037:12;;8960:96;;;;:::o;31388:289::-;31469:19;31490:9;31503:27;31517:12;31503:13;:27::i;:::-;31468:62;;;;31543:14;31540:130;;;31590:12;31625:1;31603:12;:19;;;;:23;;;;:::i;:::-;31590:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31572:12;31585:1;31572:15;;;;;;;;:::i;:::-;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;31641:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;31540:130;31458:219;;31388:289;:::o;13653:104::-;13711:7;13741:1;13737;:5;:13;;13749:1;13737:13;;;13745:1;13737:13;13730:20;;13653:104;;;;:::o;31179:198::-;31257:19;31282:27;31296:12;31282:13;:27::i;:::-;31256:53;;;31323:14;31319:51;;31339:12;31357;31339:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31319:51;31246:131;31179:198;:::o;405:96::-;458:7;484:10;477:17;;405:96;:::o;29497:424::-;29579:7;29629:23;29604:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:309;;29690:23;29665:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:248;;29751:25;29726:50;;;;;;;;:::i;:::-;;:9;:21;;;:50;;;;;;;;:::i;:::-;;;:187;;29814:23;29789:48;;;;;;;;:::i;:::-;;:9;:21;;;:48;;;;;;;;:::i;:::-;;;:124;;29876:22;29851:47;;;;;;;;:::i;:::-;;:9;:21;;;:47;;;;;;;;:::i;:::-;;;:62;;29912:1;29851:62;;;29901:8;29851:62;29789:124;;;29840:8;29789:124;29726:187;;;29779:7;29726:187;29665:248;;;29716:7;29665:248;29604:309;;;29655:7;29604:309;29597:316;;;;29497:424;;;:::o;30894:275::-;30981:4;30987:7;31015:9;31010:126;31034:12;:19;;;;31030:1;:23;31010:126;;;31092:12;31105:1;31092:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;31080:27;;:8;:27;;;31076:49;;31117:4;31123:1;31109:16;;;;;;;31076:49;31060:1;31055:6;;;;;:::i;:::-;;;31010:126;;;;31153:5;31160:1;31145:17;;;;30894:275;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:117::-;932:1;925:5;922:12;912:40;;948:1;945;938:12;912:40;841:117;:::o;964:175::-;1028:5;1066:6;1053:20;1044:29;;1082:51;1127:5;1082:51;:::i;:::-;964:175;;;;:::o;1145:510::-;1231:6;1239;1288:2;1276:9;1267:7;1263:23;1259:32;1256:119;;;1294:79;;:::i;:::-;1256:119;1414:1;1439:53;1484:7;1475:6;1464:9;1460:22;1439:53;:::i;:::-;1429:63;;1385:117;1541:2;1567:71;1630:7;1621:6;1610:9;1606:22;1567:71;:::i;:::-;1557:81;;1512:136;1145:510;;;;;:::o;1661:180::-;1709:77;1706:1;1699:88;1806:4;1803:1;1796:15;1830:4;1827:1;1820:15;1847:123;1938:1;1931:5;1928:12;1918:46;;1944:18;;:::i;:::-;1918:46;1847:123;:::o;1976:147::-;2031:7;2060:5;2049:16;;2066:51;2111:5;2066:51;:::i;:::-;1976:147;;;:::o;2129:::-;2195:9;2228:42;2264:5;2228:42;:::i;:::-;2215:55;;2129:147;;;:::o;2282:163::-;2385:53;2432:5;2385:53;:::i;:::-;2380:3;2373:66;2282:163;;:::o;2451:254::-;2560:4;2598:2;2587:9;2583:18;2575:26;;2611:87;2695:1;2684:9;2680:17;2671:6;2611:87;:::i;:::-;2451:254;;;;:::o;2711:365::-;2788:6;2837:2;2825:9;2816:7;2812:23;2808:32;2805:119;;;2843:79;;:::i;:::-;2805:119;2963:1;2988:71;3051:7;3042:6;3031:9;3027:22;2988:71;:::i;:::-;2978:81;;2934:135;2711:365;;;;:::o;3082:77::-;3119:7;3148:5;3137:16;;3082:77;;;:::o;3165:118::-;3252:24;3270:5;3252:24;:::i;:::-;3247:3;3240:37;3165:118;;:::o;3289:222::-;3382:4;3420:2;3409:9;3405:18;3397:26;;3433:71;3501:1;3490:9;3486:17;3477:6;3433:71;:::i;:::-;3289:222;;;;:::o;3517:474::-;3682:4;3720:2;3709:9;3705:18;3697:26;;3733:71;3801:1;3790:9;3786:17;3777:6;3733:71;:::i;:::-;3814:88;3898:2;3887:9;3883:18;3874:6;3814:88;:::i;:::-;3912:72;3980:2;3969:9;3965:18;3956:6;3912:72;:::i;:::-;3517:474;;;;;;:::o;3997:122::-;4070:24;4088:5;4070:24;:::i;:::-;4063:5;4060:35;4050:63;;4109:1;4106;4099:12;4050:63;3997:122;:::o;4125:139::-;4171:5;4209:6;4196:20;4187:29;;4225:33;4252:5;4225:33;:::i;:::-;4125:139;;;;:::o;4270:510::-;4356:6;4364;4413:2;4401:9;4392:7;4388:23;4384:32;4381:119;;;4419:79;;:::i;:::-;4381:119;4539:1;4564:53;4609:7;4600:6;4589:9;4585:22;4564:53;:::i;:::-;4554:63;;4510:117;4666:2;4692:71;4755:7;4746:6;4735:9;4731:22;4692:71;:::i;:::-;4682:81;;4637:136;4270:510;;;;;:::o;4786:118::-;4873:24;4891:5;4873:24;:::i;:::-;4868:3;4861:37;4786:118;;:::o;4910:222::-;5003:4;5041:2;5030:9;5026:18;5018:26;;5054:71;5122:1;5111:9;5107:17;5098:6;5054:71;:::i;:::-;4910:222;;;;:::o;5138:86::-;5173:7;5213:4;5206:5;5202:16;5191:27;;5138:86;;;:::o;5230:118::-;5301:22;5317:5;5301:22;:::i;:::-;5294:5;5291:33;5281:61;;5338:1;5335;5328:12;5281:61;5230:118;:::o;5354:135::-;5398:5;5436:6;5423:20;5414:29;;5452:31;5477:5;5452:31;:::i;:::-;5354:135;;;;:::o;5495:506::-;5579:6;5587;5636:2;5624:9;5615:7;5611:23;5607:32;5604:119;;;5642:79;;:::i;:::-;5604:119;5762:1;5787:51;5830:7;5821:6;5810:9;5806:22;5787:51;:::i;:::-;5777:61;;5733:115;5887:2;5913:71;5976:7;5967:6;5956:9;5952:22;5913:71;:::i;:::-;5903:81;;5858:136;5495:506;;;;;:::o;6007:60::-;6035:3;6056:5;6049:12;;6007:60;;;:::o;6073:142::-;6123:9;6156:53;6174:34;6183:24;6201:5;6183:24;:::i;:::-;6174:34;:::i;:::-;6156:53;:::i;:::-;6143:66;;6073:142;;;:::o;6221:126::-;6271:9;6304:37;6335:5;6304:37;:::i;:::-;6291:50;;6221:126;;;:::o;6353:140::-;6417:9;6450:37;6481:5;6450:37;:::i;:::-;6437:50;;6353:140;;;:::o;6499:159::-;6600:51;6645:5;6600:51;:::i;:::-;6595:3;6588:64;6499:159;;:::o;6664:250::-;6771:4;6809:2;6798:9;6794:18;6786:26;;6822:85;6904:1;6893:9;6889:17;6880:6;6822:85;:::i;:::-;6664:250;;;;:::o;6920:329::-;6979:6;7028:2;7016:9;7007:7;7003:23;6999:32;6996:119;;;7034:79;;:::i;:::-;6996:119;7154:1;7179:53;7224:7;7215:6;7204:9;7200:22;7179:53;:::i;:::-;7169:63;;7125:117;6920:329;;;;:::o;7255:180::-;7303:77;7300:1;7293:88;7400:4;7397:1;7390:15;7424:4;7421:1;7414:15;7441:194;7481:4;7501:20;7519:1;7501:20;:::i;:::-;7496:25;;7535:20;7553:1;7535:20;:::i;:::-;7530:25;;7579:1;7576;7572:9;7564:17;;7603:1;7597:4;7594:11;7591:37;;;7608:18;;:::i;:::-;7591:37;7441:194;;;;:::o;7641:169::-;7725:11;7759:6;7754:3;7747:19;7799:4;7794:3;7790:14;7775:29;;7641:169;;;;:::o;7816:180::-;7956:32;7952:1;7944:6;7940:14;7933:56;7816:180;:::o;8002:366::-;8144:3;8165:67;8229:2;8224:3;8165:67;:::i;:::-;8158:74;;8241:93;8330:3;8241:93;:::i;:::-;8359:2;8354:3;8350:12;8343:19;;8002:366;;;:::o;8374:419::-;8540:4;8578:2;8567:9;8563:18;8555:26;;8627:9;8621:4;8617:20;8613:1;8602:9;8598:17;8591:47;8655:131;8781:4;8655:131;:::i;:::-;8647:139;;8374:419;;;:::o;8799:179::-;8939:31;8935:1;8927:6;8923:14;8916:55;8799:179;:::o;8984:366::-;9126:3;9147:67;9211:2;9206:3;9147:67;:::i;:::-;9140:74;;9223:93;9312:3;9223:93;:::i;:::-;9341:2;9336:3;9332:12;9325:19;;8984:366;;;:::o;9356:419::-;9522:4;9560:2;9549:9;9545:18;9537:26;;9609:9;9603:4;9599:20;9595:1;9584:9;9580:17;9573:47;9637:131;9763:4;9637:131;:::i;:::-;9629:139;;9356:419;;;:::o;9781:170::-;9921:22;9917:1;9909:6;9905:14;9898:46;9781:170;:::o;9957:366::-;10099:3;10120:67;10184:2;10179:3;10120:67;:::i;:::-;10113:74;;10196:93;10285:3;10196:93;:::i;:::-;10314:2;10309:3;10305:12;10298:19;;9957:366;;;:::o;10329:419::-;10495:4;10533:2;10522:9;10518:18;10510:26;;10582:9;10576:4;10572:20;10568:1;10557:9;10553:17;10546:47;10610:131;10736:4;10610:131;:::i;:::-;10602:139;;10329:419;;;:::o;10754:332::-;10875:4;10913:2;10902:9;10898:18;10890:26;;10926:71;10994:1;10983:9;10979:17;10970:6;10926:71;:::i;:::-;11007:72;11075:2;11064:9;11060:18;11051:6;11007:72;:::i;:::-;10754:332;;;;;:::o;11092:90::-;11126:7;11169:5;11162:13;11155:21;11144:32;;11092:90;;;:::o;11188:116::-;11258:21;11273:5;11258:21;:::i;:::-;11251:5;11248:32;11238:60;;11294:1;11291;11284:12;11238:60;11188:116;:::o;11310:137::-;11364:5;11395:6;11389:13;11380:22;;11411:30;11435:5;11411:30;:::i;:::-;11310:137;;;;:::o;11453:345::-;11520:6;11569:2;11557:9;11548:7;11544:23;11540:32;11537:119;;;11575:79;;:::i;:::-;11537:119;11695:1;11720:61;11773:7;11764:6;11753:9;11749:22;11720:61;:::i;:::-;11710:71;;11666:125;11453:345;;;;:::o;11804:442::-;11953:4;11991:2;11980:9;11976:18;11968:26;;12004:71;12072:1;12061:9;12057:17;12048:6;12004:71;:::i;:::-;12085:72;12153:2;12142:9;12138:18;12129:6;12085:72;:::i;:::-;12167;12235:2;12224:9;12220:18;12211:6;12167:72;:::i;:::-;11804:442;;;;;;:::o;12252:143::-;12309:5;12340:6;12334:13;12325:22;;12356:33;12383:5;12356:33;:::i;:::-;12252:143;;;;:::o;12401:351::-;12471:6;12520:2;12508:9;12499:7;12495:23;12491:32;12488:119;;;12526:79;;:::i;:::-;12488:119;12646:1;12671:64;12727:7;12718:6;12707:9;12703:22;12671:64;:::i;:::-;12661:74;;12617:128;12401:351;;;;:::o;12758:332::-;12879:4;12917:2;12906:9;12902:18;12894:26;;12930:71;12998:1;12987:9;12983:17;12974:6;12930:71;:::i;:::-;13011:72;13079:2;13068:9;13064:18;13055:6;13011:72;:::i;:::-;12758:332;;;;;:::o;13096:171::-;13236:23;13232:1;13224:6;13220:14;13213:47;13096:171;:::o;13273:366::-;13415:3;13436:67;13500:2;13495:3;13436:67;:::i;:::-;13429:74;;13512:93;13601:3;13512:93;:::i;:::-;13630:2;13625:3;13621:12;13614:19;;13273:366;;;:::o;13645:419::-;13811:4;13849:2;13838:9;13834:18;13826:26;;13898:9;13892:4;13888:20;13884:1;13873:9;13869:17;13862:47;13926:131;14052:4;13926:131;:::i;:::-;13918:139;;13645:419;;;:::o;14070:225::-;14210:34;14206:1;14198:6;14194:14;14187:58;14279:8;14274:2;14266:6;14262:15;14255:33;14070:225;:::o;14301:366::-;14443:3;14464:67;14528:2;14523:3;14464:67;:::i;:::-;14457:74;;14540:93;14629:3;14540:93;:::i;:::-;14658:2;14653:3;14649:12;14642:19;;14301:366;;;:::o;14673:419::-;14839:4;14877:2;14866:9;14862:18;14854:26;;14926:9;14920:4;14916:20;14912:1;14901:9;14897:17;14890:47;14954:131;15080:4;14954:131;:::i;:::-;14946:139;;14673:419;;;:::o;15098:180::-;15146:77;15143:1;15136:88;15243:4;15240:1;15233:15;15267:4;15264:1;15257:15;15284:185;15324:1;15341:20;15359:1;15341:20;:::i;:::-;15336:25;;15375:20;15393:1;15375:20;:::i;:::-;15370:25;;15414:1;15404:35;;15419:18;;:::i;:::-;15404:35;15461:1;15458;15454:9;15449:14;;15284:185;;;;:::o;15475:410::-;15515:7;15538:20;15556:1;15538:20;:::i;:::-;15533:25;;15572:20;15590:1;15572:20;:::i;:::-;15567:25;;15627:1;15624;15620:9;15649:30;15667:11;15649:30;:::i;:::-;15638:41;;15828:1;15819:7;15815:15;15812:1;15809:22;15789:1;15782:9;15762:83;15739:139;;15858:18;;:::i;:::-;15739:139;15523:362;15475:410;;;;:::o;15891:182::-;16031:34;16027:1;16019:6;16015:14;16008:58;15891:182;:::o;16079:366::-;16221:3;16242:67;16306:2;16301:3;16242:67;:::i;:::-;16235:74;;16318:93;16407:3;16318:93;:::i;:::-;16436:2;16431:3;16427:12;16420:19;;16079:366;;;:::o;16451:419::-;16617:4;16655:2;16644:9;16640:18;16632:26;;16704:9;16698:4;16694:20;16690:1;16679:9;16675:17;16668:47;16732:131;16858:4;16732:131;:::i;:::-;16724:139;;16451:419;;;:::o;16876:191::-;16916:3;16935:20;16953:1;16935:20;:::i;:::-;16930:25;;16969:20;16987:1;16969:20;:::i;:::-;16964:25;;17012:1;17009;17005:9;16998:16;;17033:3;17030:1;17027:10;17024:36;;;17040:18;;:::i;:::-;17024:36;16876:191;;;;:::o;17073:180::-;17121:77;17118:1;17111:88;17218:4;17215:1;17208:15;17242:4;17239:1;17232:15;17259:180;17307:77;17304:1;17297:88;17404:4;17401:1;17394:15;17428:4;17425:1;17418:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1691000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"apr(uint8)": "2735",
								"createStake(uint256,uint8)": "infinite",
								"getDailyRewards(uint8)": "infinite",
								"getTotalRewards()": "2476",
								"myToken()": "infinite",
								"owner()": "2604",
								"remainingTokens()": "infinite",
								"renounceOwnership()": "30413",
								"setApyPercentage(uint8,uint8)": "25090",
								"stakeOf(address,uint8)": "3158",
								"stakes(address,uint8)": "infinite",
								"stakingPeriodOf(address,uint8)": "3245",
								"totalRewards()": "2493",
								"totalStake()": "2492",
								"transferOwnership(address)": "30819",
								"unStake(uint256,uint8)": "infinite"
							},
							"internal": {
								"addStakeholder(address)": "infinite",
								"getInvestorRewards(uint256,struct Staking.stake memory)": "infinite",
								"getStakingPeriodInNumbers(struct Staking.stake memory)": "infinite",
								"isStakeholder(address)": "infinite",
								"removeStakeholder(address)": "infinite",
								"validateStakingPeriod(struct Staking.stake memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26421,
									"end": 26782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1609,
									"end": 1621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1609,
									"end": 1619,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1609,
									"end": 1619,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1609,
									"end": 1619,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1609,
									"end": 1621,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1609,
									"end": 1621,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1609,
									"end": 1621,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1590,
									"end": 1608,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1590,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26483,
									"end": 26491,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26473,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 26466,
									"end": 26473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26466,
									"end": 26492,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26533,
									"end": 26536,
									"name": "PUSH",
									"source": 0,
									"value": "19E"
								},
								{
									"begin": 26502,
									"end": 26505,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26506,
									"end": 26529,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26502,
									"end": 26530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26502,
									"end": 26530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26502,
									"end": 26530,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26536,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26536,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26536,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26502,
									"end": 26536,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26588,
									"end": 26591,
									"name": "PUSH",
									"source": 0,
									"value": "390"
								},
								{
									"begin": 26557,
									"end": 26560,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26561,
									"end": 26584,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26557,
									"end": 26585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26557,
									"end": 26585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26557,
									"end": 26585,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26591,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26591,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26591,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26557,
									"end": 26591,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26645,
									"end": 26649,
									"name": "PUSH",
									"source": 0,
									"value": "12D1"
								},
								{
									"begin": 26612,
									"end": 26615,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26616,
									"end": 26641,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26612,
									"end": 26642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26612,
									"end": 26642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26612,
									"end": 26642,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26649,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26649,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26649,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26612,
									"end": 26649,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26702,
									"end": 26706,
									"name": "PUSH",
									"source": 0,
									"value": "1C2D"
								},
								{
									"begin": 26671,
									"end": 26674,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26675,
									"end": 26698,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26671,
									"end": 26699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26671,
									"end": 26699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26671,
									"end": 26699,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26706,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26706,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26706,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26671,
									"end": 26706,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26758,
									"end": 26763,
									"name": "PUSH",
									"source": 0,
									"value": "4650"
								},
								{
									"begin": 26728,
									"end": 26731,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26732,
									"end": 26754,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26728,
									"end": 26755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 26728,
									"end": 26755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26728,
									"end": 26755,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26763,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 26728,
									"end": 26763,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 26421,
									"end": 26782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 501,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 405,
									"end": 501,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 458,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 494,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 477,
									"end": 494,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 477,
									"end": 494,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 405,
									"end": 501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 405,
									"end": 501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3087,
									"end": 3274,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 3087,
									"end": 3274,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3160,
									"end": 3176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3179,
									"end": 3185,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3160,
									"end": 3185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3160,
									"end": 3185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3204,
									"end": 3212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3195,
									"end": 3201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3258,
									"end": 3266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3248,
									"end": 3256,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3150,
									"end": 3274,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3087,
									"end": 3274,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3087,
									"end": 3274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1382,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1202,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1250,
									"end": 1327,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1247,
									"end": 1248,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1240,
									"end": 1328,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1337,
									"end": 1352,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1371,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1368,
									"end": 1369,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1361,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25620,
									"end": 32198,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083d4ae0564dabb7bad705aa1dde1fa681f86f6311e247eaeaf879dca3467770a64736f6c63430008150033",
									".code": [
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "9E196CAD"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "BF583903"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "BF583903"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "E627F2DB"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "E9917C07"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "9E196CAD"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "A3FCD253"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "AD9159FD"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "B8FCF937"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "7E61BADD"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "8B0E9F3F"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "63B35BF"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "DED03CD"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "E15561A"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "3027FFC0"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25620,
											"end": 32198,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 30122,
											"end": 30303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30122,
											"end": 30303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 30122,
											"end": 30303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 30309,
											"end": 30845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30309,
											"end": 30845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30309,
											"end": 30845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25718,
											"end": 25745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25718,
											"end": 25745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25981,
											"end": 26046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25981,
											"end": 26046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 25981,
											"end": 26046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2485,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27707,
											"end": 28786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27707,
											"end": 28786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25687,
											"end": 25712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25687,
											"end": 25712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1855,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26052,
											"end": 26093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26052,
											"end": 26093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 26052,
											"end": 26093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 31891,
											"end": 32029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31891,
											"end": 32029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 29927,
											"end": 30116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29927,
											"end": 30116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29927,
											"end": 30116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26100,
											"end": 26121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26100,
											"end": 26121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32035,
											"end": 32195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 32035,
											"end": 32195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 31725,
											"end": 31845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31725,
											"end": 31845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26825,
											"end": 27701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26825,
											"end": 27701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2735,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2735,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30218,
											"end": 30231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30250,
											"end": 30256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30257,
											"end": 30269,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30250,
											"end": 30270,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30271,
											"end": 30283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30250,
											"end": 30284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30250,
											"end": 30284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30250,
											"end": 30284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30250,
											"end": 30296,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30243,
											"end": 30296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30243,
											"end": 30296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30122,
											"end": 30303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30383,
											"end": 30390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30402,
											"end": 30424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30434,
											"end": 30444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30427,
											"end": 30445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30446,
											"end": 30458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30427,
											"end": 30459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30427,
											"end": 30459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30427,
											"end": 30459,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30402,
											"end": 30459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30402,
											"end": 30459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30402,
											"end": 30459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30493,
											"end": 30540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30512,
											"end": 30521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30512,
											"end": 30528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30512,
											"end": 30528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30512,
											"end": 30528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30530,
											"end": 30539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30493,
											"end": 30511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 30493,
											"end": 30540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30493,
											"end": 30540,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 30493,
											"end": 30540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30469,
											"end": 30540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 30566,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30629,
											"end": 30631,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30621,
											"end": 30623,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30613,
											"end": 30615,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 30588,
											"end": 30597,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30588,
											"end": 30607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30588,
											"end": 30607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30570,
											"end": 30585,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30570,
											"end": 30607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 30570,
											"end": 30607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30569,
											"end": 30612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 30569,
											"end": 30616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30569,
											"end": 30620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 30569,
											"end": 30624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30569,
											"end": 30628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 30569,
											"end": 30632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 30632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30550,
											"end": 30632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30665,
											"end": 30666,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30654,
											"end": 30662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30654,
											"end": 30666,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30674,
											"end": 30682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30670,
											"end": 30671,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 30653,
											"end": 30682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30642,
											"end": 30682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30642,
											"end": 30682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30829,
											"end": 30837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 30820,
											"end": 30823,
											"name": "PUSH",
											"source": 0,
											"value": "16C"
										},
										{
											"begin": 30802,
											"end": 30815,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 30802,
											"end": 30819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 30802,
											"end": 30824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 30802,
											"end": 30828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 30802,
											"end": 30838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30838,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30795,
											"end": 30838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30309,
											"end": 30845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25718,
											"end": 25745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25981,
											"end": 26046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2485,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2576,
											"end": 2577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2549,
											"end": 2579,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2549,
											"end": 2579,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27802,
											"end": 27803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27793,
											"end": 27799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27793,
											"end": 27803,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27785,
											"end": 27838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27785,
											"end": 27838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27873,
											"end": 27879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27880,
											"end": 27890,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27873,
											"end": 27891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27892,
											"end": 27904,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27873,
											"end": 27905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27873,
											"end": 27905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27873,
											"end": 27905,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27848,
											"end": 27905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27848,
											"end": 27905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27848,
											"end": 27905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27923,
											"end": 27955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27945,
											"end": 27954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27923,
											"end": 27944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 27923,
											"end": 27955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27923,
											"end": 27955,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27923,
											"end": 27955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27915,
											"end": 27989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 27915,
											"end": 27989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28017,
											"end": 28026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28017,
											"end": 28033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28017,
											"end": 28033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28017,
											"end": 28033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 28013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 28033,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28007,
											"end": 28033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 27999,
											"end": 28058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 27999,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28094,
											"end": 28123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28110,
											"end": 28122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28094,
											"end": 28109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28094,
											"end": 28123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28094,
											"end": 28123,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28094,
											"end": 28123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28173,
											"end": 28179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28152,
											"end": 28168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28152,
											"end": 28172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 28152,
											"end": 28180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28133,
											"end": 28149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28225,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28196,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28197,
											"end": 28207,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28190,
											"end": 28208,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28209,
											"end": 28221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28190,
											"end": 28222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28190,
											"end": 28222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28190,
											"end": 28222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28190,
											"end": 28234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28272,
											"end": 28278,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28267,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28257,
											"end": 28267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28257,
											"end": 28271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 28257,
											"end": 28279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28244,
											"end": 28254,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28244,
											"end": 28279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28244,
											"end": 28279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28244,
											"end": 28279,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28244,
											"end": 28279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 28321,
											"end": 28336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28316,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28304,
											"end": 28316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 28304,
											"end": 28320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 28304,
											"end": 28337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28289,
											"end": 28301,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28289,
											"end": 28337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28289,
											"end": 28337,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28289,
											"end": 28337,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 28289,
											"end": 28337,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28461,
											"end": 28462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28418,
											"end": 28424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28425,
											"end": 28435,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28418,
											"end": 28436,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28437,
											"end": 28449,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28418,
											"end": 28450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 28418,
											"end": 28450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28418,
											"end": 28450,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28418,
											"end": 28457,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28418,
											"end": 28462,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28415,
											"end": 28493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28415,
											"end": 28493,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 28482,
											"end": 28492,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 28464,
											"end": 28493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28464,
											"end": 28493,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 28464,
											"end": 28493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28415,
											"end": 28493,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28415,
											"end": 28493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28503,
											"end": 28510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28519,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28503,
											"end": 28519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28519,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28520,
											"end": 28530,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28532,
											"end": 28538,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 28503,
											"end": 28539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28503,
											"end": 28539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28503,
											"end": 28539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28549,
											"end": 28556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28569,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28549,
											"end": 28569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28569,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28570,
											"end": 28577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 28570,
											"end": 28575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 28570,
											"end": 28577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28570,
											"end": 28577,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 28570,
											"end": 28577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28579,
											"end": 28589,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28591,
											"end": 28606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 28549,
											"end": 28607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 28549,
											"end": 28607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28549,
											"end": 28607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28636,
											"end": 28646,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH",
											"source": 0,
											"value": "20B8C145B65CB389FBD3274CE53DDF475D0167C30E65FC56215BBC9988670F56"
										},
										{
											"begin": 28648,
											"end": 28654,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28656,
											"end": 28668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28670,
											"end": 28685,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28622,
											"end": 28686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28622,
											"end": 28686,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28720,
											"end": 28730,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "6719F60144372D022E82B9BBCEC8A044FC8DBAF58504F89906532D12008E4C57"
										},
										{
											"begin": 28732,
											"end": 28747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28749,
											"end": 28761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28763,
											"end": 28778,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 28701,
											"end": 28779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28701,
											"end": 28779,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 28786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27775,
											"end": 28786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27707,
											"end": 28786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1920,
											"end": 1933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26052,
											"end": 26093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32011,
											"end": 32022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 31994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31995,
											"end": 32007,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 31991,
											"end": 32008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 31991,
											"end": 32008,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31991,
											"end": 32008,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32022,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31891,
											"end": 32029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30038,
											"end": 30045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30068,
											"end": 30074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30075,
											"end": 30087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30068,
											"end": 30088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30089,
											"end": 30101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30068,
											"end": 30102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 30068,
											"end": 30102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30068,
											"end": 30102,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30068,
											"end": 30109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30068,
											"end": 30109,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30061,
											"end": 30109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30061,
											"end": 30109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29927,
											"end": 30116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26100,
											"end": 26121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32083,
											"end": 32090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32109,
											"end": 32188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32118,
											"end": 32125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32118,
											"end": 32135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32135,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 32136,
											"end": 32143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 32136,
											"end": 32141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32136,
											"end": 32143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32136,
											"end": 32143,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 32136,
											"end": 32143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 32118,
											"end": 32144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32118,
											"end": 32144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 32118,
											"end": 32144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32163,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 32164,
											"end": 32171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 32164,
											"end": 32169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 32164,
											"end": 32171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32164,
											"end": 32171,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 32164,
											"end": 32171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32181,
											"end": 32185,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 32146,
											"end": 32187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 32146,
											"end": 32187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 32146,
											"end": 32187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32109,
											"end": 32117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 32109,
											"end": 32188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32109,
											"end": 32188,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 32109,
											"end": 32188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32102,
											"end": 32188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32102,
											"end": 32188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32035,
											"end": 32195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31796,
											"end": 31803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31826,
											"end": 31838,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 31826,
											"end": 31838,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31819,
											"end": 31838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31725,
											"end": 31845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26924,
											"end": 26925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26915,
											"end": 26921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26915,
											"end": 26925,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 26907,
											"end": 26960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 26907,
											"end": 26960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26978,
											"end": 26985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26978,
											"end": 26998,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 26998,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 26999,
											"end": 27009,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27019,
											"end": 27023,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27026,
											"end": 27032,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26978,
											"end": 27033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 26978,
											"end": 27033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 26978,
											"end": 27033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 26970,
											"end": 27059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 26970,
											"end": 27059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27115,
											"end": 27116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27072,
											"end": 27078,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27079,
											"end": 27089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27072,
											"end": 27090,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27091,
											"end": 27103,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27072,
											"end": 27104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27072,
											"end": 27104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27072,
											"end": 27104,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27072,
											"end": 27111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27072,
											"end": 27116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27132,
											"end": 27158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27147,
											"end": 27157,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27132,
											"end": 27146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 27132,
											"end": 27158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27132,
											"end": 27158,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 27132,
											"end": 27158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27213,
											"end": 27219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27221,
											"end": 27233,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27207,
											"end": 27251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27235,
											"end": 27250,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27207,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27179,
											"end": 27189,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27191,
											"end": 27203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27172,
											"end": 27204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27172,
											"end": 27204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27204,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27172,
											"end": 27251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27293,
											"end": 27299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27278,
											"end": 27288,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27278,
											"end": 27292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 27278,
											"end": 27300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27275,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27265,
											"end": 27300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27300,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27356,
											"end": 27362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27363,
											"end": 27373,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27356,
											"end": 27374,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27375,
											"end": 27387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27356,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27356,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27356,
											"end": 27388,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27331,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27331,
											"end": 27388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 27442,
											"end": 27448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27421,
											"end": 27437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27421,
											"end": 27441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 27421,
											"end": 27449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27402,
											"end": 27418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27402,
											"end": 27449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27485,
											"end": 27500,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27463,
											"end": 27482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27463,
											"end": 27500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27549,
											"end": 27558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27520,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27521,
											"end": 27531,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27532,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27533,
											"end": 27545,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27514,
											"end": 27546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27514,
											"end": 27546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27546,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27514,
											"end": 27558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27514,
											"end": 27558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 27600,
											"end": 27606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27585,
											"end": 27595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27585,
											"end": 27599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 27585,
											"end": 27607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27582,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27572,
											"end": 27607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27607,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27572,
											"end": 27607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27317,
											"end": 27618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 27069,
											"end": 27618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27644,
											"end": 27654,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH",
											"source": 0,
											"value": "ADD17B9D82CB146EAFF151F4F864FAA55B09599B4EFF7714935025B99054FE1C"
										},
										{
											"begin": 27656,
											"end": 27662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27664,
											"end": 27676,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27678,
											"end": 27693,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27632,
											"end": 27694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27632,
											"end": 27694,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26825,
											"end": 27701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1748,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1748,
											"end": 1761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2843,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2845,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2845,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2815,
											"end": 2888,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2815,
											"end": 2888,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2917,
											"end": 2925,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2898,
											"end": 2926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 2898,
											"end": 2926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28891,
											"end": 28898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 29234,
											"end": 29237,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 29225,
											"end": 29228,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29193,
											"end": 29196,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29197,
											"end": 29206,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29197,
											"end": 29218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29197,
											"end": 29218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29193,
											"end": 29219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29193,
											"end": 29219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29193,
											"end": 29219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29188,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29174,
											"end": 29192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 29174,
											"end": 29220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29174,
											"end": 29224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 29174,
											"end": 29229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 29174,
											"end": 29233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 29174,
											"end": 29238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29167,
											"end": 29238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28792,
											"end": 29245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10143,
											"end": 10144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10139,
											"end": 10144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10139,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10132,
											"end": 10144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10132,
											"end": 10144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10055,
											"end": 10151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9728,
											"end": 9735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9755,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 9754,
											"end": 9759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 9754,
											"end": 9759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9670,
											"end": 9766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2143,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2013,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2087,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2087,
											"end": 2099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2087,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2099,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2068,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2068,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3274,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3087,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3179,
											"end": 3185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3204,
											"end": 3212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3212,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3248,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3267,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3087,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29490,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29252,
											"end": 29490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29329,
											"end": 29333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29345,
											"end": 29369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 29420,
											"end": 29429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 29394,
											"end": 29430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29394,
											"end": 29430,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 29394,
											"end": 29430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29372,
											"end": 29391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 29372,
											"end": 29430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 29372,
											"end": 29430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29345,
											"end": 29430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29466,
											"end": 29482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29462,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29482,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29447,
											"end": 29482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29440,
											"end": 29482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29440,
											"end": 29482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29440,
											"end": 29482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29252,
											"end": 29490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9385,
											"end": 9392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9415,
											"end": 9416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9411,
											"end": 9416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 9411,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9018,
											"end": 9025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 9044,
											"end": 9049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 9044,
											"end": 9049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9037,
											"end": 9049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8960,
											"end": 9056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31388,
											"end": 31677,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 31388,
											"end": 31677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31469,
											"end": 31488,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31490,
											"end": 31499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31503,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 31517,
											"end": 31529,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31503,
											"end": 31516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 31503,
											"end": 31530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31503,
											"end": 31530,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 31503,
											"end": 31530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31530,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31468,
											"end": 31530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31543,
											"end": 31557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31540,
											"end": 31670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31540,
											"end": 31670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 31540,
											"end": 31670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31602,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31625,
											"end": 31626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31603,
											"end": 31615,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31603,
											"end": 31622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31603,
											"end": 31626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 31603,
											"end": 31626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 31590,
											"end": 31627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31590,
											"end": 31627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31584,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31585,
											"end": 31586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 31572,
											"end": 31587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31572,
											"end": 31627,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31653,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 31641,
											"end": 31659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31641,
											"end": 31659,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31540,
											"end": 31670,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 31540,
											"end": 31670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31458,
											"end": 31677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31388,
											"end": 31677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31388,
											"end": 31677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13741,
											"end": 13742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13738,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 13737,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13730,
											"end": 13750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13653,
											"end": 13757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31377,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 31179,
											"end": 31377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31257,
											"end": 31276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31282,
											"end": 31309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31296,
											"end": 31308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31282,
											"end": 31295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 31282,
											"end": 31309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31282,
											"end": 31309,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 31282,
											"end": 31309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31256,
											"end": 31309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31323,
											"end": 31337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 31319,
											"end": 31370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31351,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31357,
											"end": 31369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31339,
											"end": 31370,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31319,
											"end": 31370,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 31319,
											"end": 31370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31246,
											"end": 31377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31179,
											"end": 31377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 501,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 405,
											"end": 501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 458,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 494,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 477,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 477,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 405,
											"end": 501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29497,
											"end": 29921,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 29497,
											"end": 29921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29629,
											"end": 29652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29604,
											"end": 29652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29604,
											"end": 29625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29604,
											"end": 29652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29690,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29665,
											"end": 29713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29665,
											"end": 29686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29665,
											"end": 29713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29751,
											"end": 29776,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29726,
											"end": 29776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29735,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29726,
											"end": 29747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29726,
											"end": 29776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29776,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29814,
											"end": 29837,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29789,
											"end": 29837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29810,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29789,
											"end": 29810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29789,
											"end": 29837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29837,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29876,
											"end": 29898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29851,
											"end": 29898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29860,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29872,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29851,
											"end": 29872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 29851,
											"end": 29898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29898,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29912,
											"end": 29913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29901,
											"end": 29909,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 29851,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29840,
											"end": 29848,
											"name": "PUSH",
											"source": 0,
											"value": "9E3400"
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 29789,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29779,
											"end": 29786,
											"name": "PUSH",
											"source": 0,
											"value": "76A700"
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 29726,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29716,
											"end": 29723,
											"name": "PUSH",
											"source": 0,
											"value": "278D00"
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 29665,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29655,
											"end": 29662,
											"name": "PUSH",
											"source": 0,
											"value": "13C680"
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 29604,
											"end": 29913,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29913,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 29597,
											"end": 29913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29597,
											"end": 29913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29497,
											"end": 29921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29497,
											"end": 29921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29497,
											"end": 29921,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29497,
											"end": 29921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30981,
											"end": 30985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30987,
											"end": 30994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31015,
											"end": 31024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31046,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31034,
											"end": 31053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31053,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31034,
											"end": 31053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31030,
											"end": 31053,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31104,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31105,
											"end": 31106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 31092,
											"end": 31107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31092,
											"end": 31107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31080,
											"end": 31107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31080,
											"end": 31107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31080,
											"end": 31107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 31076,
											"end": 31125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31117,
											"end": 31121,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31123,
											"end": 31124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 31109,
											"end": 31125,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31125,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 31076,
											"end": 31125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31060,
											"end": 31061,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 31055,
											"end": 31061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31055,
											"end": 31061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31010,
											"end": 31136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31153,
											"end": 31158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31160,
											"end": 31161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31145,
											"end": 31162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30894,
											"end": 31169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 958,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 841,
											"end": 958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 925,
											"end": 930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 934,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 912,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 912,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 948,
											"end": 949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 945,
											"end": 946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 938,
											"end": 950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 912,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 912,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 841,
											"end": 958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1073,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1044,
											"end": 1073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 1127,
											"end": 1132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1082,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1133,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 1082,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1290,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1291,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 1256,
											"end": 1375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1294,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 1256,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1439,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1492,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 1439,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 1630,
											"end": 1637,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1621,
											"end": 1627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1619,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 1567,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1638,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 1567,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1648,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1841,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1661,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1786,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1810,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 1811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1834,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1827,
											"end": 1828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1847,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1931,
											"end": 1936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 1918,
											"end": 1964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1944,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 1944,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1964,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 1918,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2123,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1976,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 2111,
											"end": 2116,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2066,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 2123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2276,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2129,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2195,
											"end": 2204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2264,
											"end": 2269,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 2228,
											"end": 2270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 2228,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2445,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2282,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2432,
											"end": 2437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 2385,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2695,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2693,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2611,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 2611,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2788,
											"end": 2794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2816,
											"end": 2823,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2835,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2840,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2843,
											"end": 2922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 2843,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 2805,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3051,
											"end": 3058,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3042,
											"end": 3048,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2988,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2988,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 3059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 3069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 3076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3159,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 3082,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3126,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3153,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3137,
											"end": 3153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3283,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3165,
											"end": 3283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 3252,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3276,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3252,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3277,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3382,
											"end": 3386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3397,
											"end": 3423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3501,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3433,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 3433,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3720,
											"end": 3722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3709,
											"end": 3718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3733,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3804,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 3733,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3898,
											"end": 3900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3814,
											"end": 3902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3902,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 3814,
											"end": 3902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3956,
											"end": 3962,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3912,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 3912,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4119,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 3997,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 4088,
											"end": 4093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4070,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 4070,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4063,
											"end": 4068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4111,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 4050,
											"end": 4113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3997,
											"end": 4119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4216,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4187,
											"end": 4216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4225,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 4225,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4410,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4411,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4416,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4500,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4381,
											"end": 4500,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4419,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 4419,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4419,
											"end": 4498,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 4419,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4500,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 4381,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4564,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4609,
											"end": 4616,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4600,
											"end": 4606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4564,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4617,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4564,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4554,
											"end": 4617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4692,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4731,
											"end": 4753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4692,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4763,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 4692,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4637,
											"end": 4773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4891,
											"end": 4896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4873,
											"end": 4897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 4873,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4861,
											"end": 4898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4786,
											"end": 4904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5107,
											"end": 5124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5054,
											"end": 5125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 5054,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 5132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5224,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5138,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5206,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5218,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5191,
											"end": 5218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5191,
											"end": 5218,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5138,
											"end": 5224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5348,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5230,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 5317,
											"end": 5322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5301,
											"end": 5323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5323,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 5301,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5324,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 5281,
											"end": 5342,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5338,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5335,
											"end": 5336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5340,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5342,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 5281,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5477,
											"end": 5482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5452,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 5452,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5579,
											"end": 5585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5624,
											"end": 5633,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5622,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5634,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5607,
											"end": 5639,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 5604,
											"end": 5723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5642,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 5642,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5723,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 5604,
											"end": 5723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5762,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5787,
											"end": 5838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5830,
											"end": 5837,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5810,
											"end": 5819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5806,
											"end": 5828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5787,
											"end": 5838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5838,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5787,
											"end": 5838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5838,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5777,
											"end": 5838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5913,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5976,
											"end": 5983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5956,
											"end": 5965,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 5913,
											"end": 5984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5913,
											"end": 5984,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 5913,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5984,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5984,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 6001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6067,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6007,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6035,
											"end": 6038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6056,
											"end": 6061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6215,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6073,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6123,
											"end": 6132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6183,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 6201,
											"end": 6206,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6183,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6207,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 6183,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6174,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6156,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6209,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6156,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6215,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6221,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6304,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6341,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 6304,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6341,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6493,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6353,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6450,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6450,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6487,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 6450,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6353,
											"end": 6493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6658,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6499,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6645,
											"end": 6650,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6600,
											"end": 6651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6651,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 6600,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6598,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6652,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6809,
											"end": 6811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6798,
											"end": 6807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6794,
											"end": 6812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6889,
											"end": 6906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6822,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6907,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6822,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6664,
											"end": 6914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 6985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7014,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7026,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7031,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7115,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 6996,
											"end": 7115,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 7034,
											"end": 7113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 7034,
											"end": 7113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7113,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 7034,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 6996,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7179,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7204,
											"end": 7213,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7179,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7179,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 7179,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7255,
											"end": 7435,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7255,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 7380,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7300,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7424,
											"end": 7428,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7421,
											"end": 7422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7414,
											"end": 7429,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7519,
											"end": 7520,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7501,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7521,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 7501,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7496,
											"end": 7521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7553,
											"end": 7554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7535,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7555,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 7535,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7555,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7576,
											"end": 7577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7581,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7603,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7597,
											"end": 7601,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7605,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 7608,
											"end": 7626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 7608,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 7591,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7754,
											"end": 7757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7747,
											"end": 7766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7803,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7775,
											"end": 7804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7996,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7816,
											"end": 7996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7988,
											"name": "PUSH",
											"source": 1,
											"value": "7374616B652076616C75652073686F756C64206E6F74206265207A65726F0000"
										},
										{
											"begin": 7952,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7944,
											"end": 7950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7940,
											"end": 7954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7933,
											"end": 7989,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 8224,
											"end": 8227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 8165,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 8165,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8232,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8158,
											"end": 8232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 8330,
											"end": 8333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 8241,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 8241,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8359,
											"end": 8361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8580,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8563,
											"end": 8581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8621,
											"end": 8625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8637,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 8781,
											"end": 8785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 8655,
											"end": 8786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 8655,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8647,
											"end": 8786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8647,
											"end": 8786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8978,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 8799,
											"end": 8978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 8970,
											"name": "PUSH",
											"source": 1,
											"value": "5374616B696E6720706572696F64206973206E6F742065787069726564000000"
										},
										{
											"begin": 8935,
											"end": 8936,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8937,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8916,
											"end": 8971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8799,
											"end": 8978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 9350,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 8984,
											"end": 9350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9126,
											"end": 9129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9147,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 9211,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 9206,
											"end": 9209,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9147,
											"end": 9214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9147,
											"end": 9214,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 9147,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9140,
											"end": 9214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 9312,
											"end": 9315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 9223,
											"end": 9316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9316,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 9223,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9336,
											"end": 9339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9332,
											"end": 9344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 9350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 9350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 9350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8984,
											"end": 9350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 9356,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9522,
											"end": 9526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9549,
											"end": 9558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9563,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9603,
											"end": 9607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9584,
											"end": 9593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9580,
											"end": 9597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 9763,
											"end": 9767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 9637,
											"end": 9768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9637,
											"end": 9768,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 9637,
											"end": 9768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9629,
											"end": 9768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9775,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9356,
											"end": 9775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9951,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 9781,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9921,
											"end": 9943,
											"name": "PUSH",
											"source": 1,
											"value": "496E76616C6964205374616B6520416D6F756E74000000000000000000000000"
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9905,
											"end": 9919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9898,
											"end": 9944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9781,
											"end": 9951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 10323,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 9957,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10120,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 10184,
											"end": 10186,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 10120,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10120,
											"end": 10187,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 10120,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10113,
											"end": 10187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 10285,
											"end": 10288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 10196,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10289,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 10196,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10314,
											"end": 10316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10309,
											"end": 10312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10305,
											"end": 10317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 10323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 10323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 10323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 10323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10748,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 10329,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10533,
											"end": 10535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10518,
											"end": 10536,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10582,
											"end": 10591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10572,
											"end": 10592,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10553,
											"end": 10570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10546,
											"end": 10593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 10736,
											"end": 10740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 10610,
											"end": 10741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10610,
											"end": 10741,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 10610,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10748,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10329,
											"end": 10748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10913,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10902,
											"end": 10911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10898,
											"end": 10916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10916,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 10994,
											"end": 10995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10983,
											"end": 10992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10979,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10970,
											"end": 10976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 10926,
											"end": 10997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10926,
											"end": 10997,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 10926,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 11075,
											"end": 11077,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11064,
											"end": 11073,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11060,
											"end": 11078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11057,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 11007,
											"end": 11079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11079,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 11007,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10754,
											"end": 11086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11182,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 11092,
											"end": 11182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11126,
											"end": 11133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11162,
											"end": 11175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11176,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11144,
											"end": 11176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11144,
											"end": 11176,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11304,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 11188,
											"end": 11304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 11273,
											"end": 11278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 11258,
											"end": 11279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11279,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 11258,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11251,
											"end": 11256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11280,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 11238,
											"end": 11298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11294,
											"end": 11295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11284,
											"end": 11296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11298,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 11238,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11395,
											"end": 11401,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11389,
											"end": 11402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11380,
											"end": 11402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 11435,
											"end": 11440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 11411,
											"end": 11441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11411,
											"end": 11441,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 11411,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11310,
											"end": 11447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11520,
											"end": 11526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11569,
											"end": 11571,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11557,
											"end": 11566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11548,
											"end": 11555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11572,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11656,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 11537,
											"end": 11656,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 11575,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 11575,
											"end": 11654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11654,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 11575,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11537,
											"end": 11656,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 11537,
											"end": 11656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 11773,
											"end": 11780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11753,
											"end": 11762,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11749,
											"end": 11771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 11720,
											"end": 11781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11781,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 11720,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 11791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11453,
											"end": 11798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11953,
											"end": 11957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11991,
											"end": 11993,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11980,
											"end": 11989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11976,
											"end": 11994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 11994,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11968,
											"end": 11994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 12072,
											"end": 12073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12070,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12057,
											"end": 12074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12048,
											"end": 12054,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12004,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12075,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 12004,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12085,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 12153,
											"end": 12155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12142,
											"end": 12151,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12085,
											"end": 12157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12085,
											"end": 12157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12085,
											"end": 12157,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 12085,
											"end": 12157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 12235,
											"end": 12237,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12224,
											"end": 12233,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12220,
											"end": 12238,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12211,
											"end": 12217,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 12167,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12167,
											"end": 12239,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 12167,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 12246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12309,
											"end": 12314,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12340,
											"end": 12346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12334,
											"end": 12347,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12325,
											"end": 12347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 12383,
											"end": 12388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 12356,
											"end": 12389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12389,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 12356,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12252,
											"end": 12395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12471,
											"end": 12477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12499,
											"end": 12506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12495,
											"end": 12518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12491,
											"end": 12523,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12607,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 12488,
											"end": 12607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 12526,
											"end": 12605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 12526,
											"end": 12605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12526,
											"end": 12605,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 12526,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12607,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 12488,
											"end": 12607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 12727,
											"end": 12734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12718,
											"end": 12724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12716,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 12671,
											"end": 12735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12671,
											"end": 12735,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 12671,
											"end": 12735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12661,
											"end": 12735,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12661,
											"end": 12735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12617,
											"end": 12745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12906,
											"end": 12915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12894,
											"end": 12920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12930,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 12998,
											"end": 12999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12983,
											"end": 13000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 12980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12930,
											"end": 13001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12930,
											"end": 13001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12930,
											"end": 13001,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 12930,
											"end": 13001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 13079,
											"end": 13081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13068,
											"end": 13077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13064,
											"end": 13082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 13011,
											"end": 13083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13011,
											"end": 13083,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 13011,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12758,
											"end": 13090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13096,
											"end": 13267,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 13096,
											"end": 13267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13259,
											"name": "PUSH",
											"source": 1,
											"value": "546F6B656E205472616E73666572204661696C65640000000000000000000000"
										},
										{
											"begin": 13232,
											"end": 13233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13224,
											"end": 13230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13260,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13096,
											"end": 13267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13096,
											"end": 13267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13639,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 13273,
											"end": 13639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13436,
											"end": 13503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 13500,
											"end": 13502,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 13495,
											"end": 13498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 13436,
											"end": 13503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13436,
											"end": 13503,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 13436,
											"end": 13503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13429,
											"end": 13503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13429,
											"end": 13503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 13601,
											"end": 13604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 13512,
											"end": 13605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13605,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 13512,
											"end": 13605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13630,
											"end": 13632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13625,
											"end": 13628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13614,
											"end": 13633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13614,
											"end": 13633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 14064,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 13645,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13811,
											"end": 13815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13838,
											"end": 13847,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13826,
											"end": 13852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13898,
											"end": 13907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13892,
											"end": 13896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13888,
											"end": 13908,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13884,
											"end": 13885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13873,
											"end": 13882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13869,
											"end": 13886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13862,
											"end": 13909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13926,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 14052,
											"end": 14056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13926,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 13926,
											"end": 14057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13926,
											"end": 14057,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 13926,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13918,
											"end": 14057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13918,
											"end": 14057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 14064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 14064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 14064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13645,
											"end": 14064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14070,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 14070,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14210,
											"end": 14244,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14206,
											"end": 14207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14194,
											"end": 14208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14187,
											"end": 14245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14279,
											"end": 14287,
											"name": "PUSH",
											"source": 1,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14274,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14262,
											"end": 14277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14255,
											"end": 14288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14070,
											"end": 14295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14070,
											"end": 14295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14667,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 14301,
											"end": 14667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14443,
											"end": 14446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14464,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 14528,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14523,
											"end": 14526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 14464,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14531,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 14464,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14457,
											"end": 14531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 14540,
											"end": 14633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14540,
											"end": 14633,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 14540,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14660,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14653,
											"end": 14656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14649,
											"end": 14661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14673,
											"end": 15092,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 14673,
											"end": 15092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14839,
											"end": 14843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14877,
											"end": 14879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14866,
											"end": 14875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14880,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14926,
											"end": 14935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14920,
											"end": 14924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14916,
											"end": 14936,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14912,
											"end": 14913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14901,
											"end": 14910,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14897,
											"end": 14914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14890,
											"end": 14937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 15080,
											"end": 15084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 14954,
											"end": 15085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15085,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 14954,
											"end": 15085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14946,
											"end": 15085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14946,
											"end": 15085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14673,
											"end": 15092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14673,
											"end": 15092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14673,
											"end": 15092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14673,
											"end": 15092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15098,
											"end": 15278,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 15098,
											"end": 15278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15223,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15143,
											"end": 15144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15136,
											"end": 15224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15243,
											"end": 15247,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15240,
											"end": 15241,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15233,
											"end": 15248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15271,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15264,
											"end": 15265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15257,
											"end": 15272,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15324,
											"end": 15325,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15341,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15359,
											"end": 15360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15341,
											"end": 15361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15341,
											"end": 15361,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 15341,
											"end": 15361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15336,
											"end": 15361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15336,
											"end": 15361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 15393,
											"end": 15394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15375,
											"end": 15395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15375,
											"end": 15395,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 15375,
											"end": 15395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15370,
											"end": 15395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15414,
											"end": 15415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 15404,
											"end": 15439,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 15419,
											"end": 15437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15439,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 15404,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15461,
											"end": 15462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15458,
											"end": 15459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15454,
											"end": 15463,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15449,
											"end": 15463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15449,
											"end": 15463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15515,
											"end": 15522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15538,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 15556,
											"end": 15557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15538,
											"end": 15558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15538,
											"end": 15558,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 15538,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15533,
											"end": 15558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15533,
											"end": 15558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 15590,
											"end": 15591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15572,
											"end": 15592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15572,
											"end": 15592,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 15572,
											"end": 15592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15567,
											"end": 15592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15567,
											"end": 15592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15627,
											"end": 15628,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15624,
											"end": 15625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15620,
											"end": 15629,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 15649,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 15667,
											"end": 15678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15649,
											"end": 15679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15649,
											"end": 15679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15649,
											"end": 15679,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 15649,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15638,
											"end": 15679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15828,
											"end": 15829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15819,
											"end": 15826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15815,
											"end": 15830,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15812,
											"end": 15813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15831,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15789,
											"end": 15790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15782,
											"end": 15791,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15845,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15739,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 15739,
											"end": 15878,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 15858,
											"end": 15876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15739,
											"end": 15878,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 15739,
											"end": 15878,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15523,
											"end": 15885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15475,
											"end": 15885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15891,
											"end": 16073,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 15891,
											"end": 16073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16031,
											"end": 16065,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 16027,
											"end": 16028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16019,
											"end": 16025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16015,
											"end": 16029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16008,
											"end": 16066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15891,
											"end": 16073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15891,
											"end": 16073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16445,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 16079,
											"end": 16445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16221,
											"end": 16224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16242,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 16306,
											"end": 16308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16301,
											"end": 16304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16242,
											"end": 16309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 16242,
											"end": 16309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16242,
											"end": 16309,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 16242,
											"end": 16309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16235,
											"end": 16309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16235,
											"end": 16309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 16407,
											"end": 16410,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 16318,
											"end": 16411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16411,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 16318,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16436,
											"end": 16438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16431,
											"end": 16434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16451,
											"end": 16870,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 16451,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16617,
											"end": 16621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16655,
											"end": 16657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16644,
											"end": 16653,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16640,
											"end": 16658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16632,
											"end": 16658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16632,
											"end": 16658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16698,
											"end": 16702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16694,
											"end": 16714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16690,
											"end": 16691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16679,
											"end": 16688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16675,
											"end": 16692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16668,
											"end": 16715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 16858,
											"end": 16862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 16732,
											"end": 16863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16732,
											"end": 16863,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 16732,
											"end": 16863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16724,
											"end": 16863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16724,
											"end": 16863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16451,
											"end": 16870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16451,
											"end": 16870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16451,
											"end": 16870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16451,
											"end": 16870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16916,
											"end": 16919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 16953,
											"end": 16954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16935,
											"end": 16955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 16935,
											"end": 16955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16930,
											"end": 16955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16930,
											"end": 16955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 16987,
											"end": 16988,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 16969,
											"end": 16989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 16969,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 16989,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16964,
											"end": 16989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17012,
											"end": 17013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17009,
											"end": 17010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17005,
											"end": 17014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16998,
											"end": 17014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16998,
											"end": 17014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17033,
											"end": 17036,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17027,
											"end": 17037,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17060,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 17024,
											"end": 17060,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 17040,
											"end": 17058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 17040,
											"end": 17058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17040,
											"end": 17058,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 17040,
											"end": 17058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17024,
											"end": 17060,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 17024,
											"end": 17060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16876,
											"end": 17067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17073,
											"end": 17253,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 17073,
											"end": 17253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17121,
											"end": 17198,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17118,
											"end": 17119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17111,
											"end": 17199,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17218,
											"end": 17222,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 17215,
											"end": 17216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17208,
											"end": 17223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17242,
											"end": 17246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17239,
											"end": 17240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17232,
											"end": 17247,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17439,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 17259,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17307,
											"end": 17384,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17304,
											"end": 17305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17297,
											"end": 17385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17404,
											"end": 17408,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 17401,
											"end": 17402,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17394,
											"end": 17409,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17428,
											"end": 17432,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17425,
											"end": 17426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17418,
											"end": 17433,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/StakingUrgent/1stContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"apr(uint8)": "9e196cad",
							"createStake(uint256,uint8)": "e9917c07",
							"getDailyRewards(uint8)": "0ded03cd",
							"getTotalRewards()": "e627f2db",
							"myToken()": "b8fcf937",
							"owner()": "8da5cb5b",
							"remainingTokens()": "bf583903",
							"renounceOwnership()": "715018a6",
							"setApyPercentage(uint8,uint8)": "a3fcd253",
							"stakeOf(address,uint8)": "ad9159fd",
							"stakes(address,uint8)": "3027ffc0",
							"stakingPeriodOf(address,uint8)": "063b35bf",
							"totalRewards()": "0e15561a",
							"totalStake()": "8b0e9f3f",
							"transferOwnership(address)": "f2fde38b",
							"unStake(uint256,uint8)": "7e61badd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_myToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardsTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenUnstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"apr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"createStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"getDailyRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_percentage\",\"type\":\"uint8\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"setApyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeholder\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"stakeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"stakePeriod\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeholder\",\"type\":\"address\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"stakingPeriodOf\",\"outputs\":[{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stake\",\"type\":\"uint256\"},{\"internalType\":\"enum Staking.StakingPeriod\",\"name\":\"_stakePeriod\",\"type\":\"uint8\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingUrgent/1stContract.sol\":\"Staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/StakingUrgent/1stContract.sol\":{\"keccak256\":\"0x00678c0ad9f6cd25bbc152c43695bd925bf89ca486e8be6875efef4ff4042d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746333743fd3eedda80c27129737be5bcc3263cb57716af7dfb976f7e67c1b8c\",\"dweb:/ipfs/Qmdx28DJzoApgXi8V5rMW2ZtgydipUHaaBLWkunhpYKan9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1392,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "totalStake",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1394,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "totalRewards",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1411,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "stakeholders",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1419,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_enum(StakingPeriod)1400,t_struct(stake)1408_storage))"
							},
							{
								"astId": 1424,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "apr",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_enum(StakingPeriod)1400,t_uint256)"
							},
							{
								"astId": 1427,
								"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
								"label": "myToken",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)209"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)209": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(StakingPeriod)1400": {
								"encoding": "inplace",
								"label": "enum Staking.StakingPeriod",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_enum(StakingPeriod)1400,t_struct(stake)1408_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_enum(StakingPeriod)1400,t_struct(stake)1408_storage)"
							},
							"t_mapping(t_enum(StakingPeriod)1400,t_struct(stake)1408_storage)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)1400",
								"label": "mapping(enum Staking.StakingPeriod => struct Staking.stake)",
								"numberOfBytes": "32",
								"value": "t_struct(stake)1408_storage"
							},
							"t_mapping(t_enum(StakingPeriod)1400,t_uint256)": {
								"encoding": "mapping",
								"key": "t_enum(StakingPeriod)1400",
								"label": "mapping(enum Staking.StakingPeriod => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(stake)1408_storage": {
								"encoding": "inplace",
								"label": "struct Staking.stake",
								"members": [
									{
										"astId": 1402,
										"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1405,
										"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
										"label": "stakePeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_enum(StakingPeriod)1400"
									},
									{
										"astId": 1407,
										"contract": "contracts/StakingUrgent/1stContract.sol:Staking",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/StakingUrgent/1stContract.sol": {
				"ast": {
					"absolutePath": "contracts/StakingUrgent/1stContract.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"IERC20": [
							209
						],
						"Math": [
							1384
						],
						"Ownable": [
							132
						],
						"SafeMath": [
							520
						],
						"Staking": [
							2094
						]
					},
					"id": 2095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "258:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "282:90:0",
								"text": " This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "391:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "467:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "484:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "488:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "484:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "477:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "414:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "458:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "458:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:9:0"
									},
									"scope": 21,
									"src": "405:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "574:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "591:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "595:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "591:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "584:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "516:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "524:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "558:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "558:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:16:0"
									},
									"scope": 21,
									"src": "507:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "373:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "787:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"1337:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1337:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1337:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "813:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "1326:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1367:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "1351:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1351:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1386:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1423:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1407:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1454:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1438:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:57:0"
									},
									"src": "1380:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1580:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1609:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1609:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1590:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1590:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1590:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1470:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1580:0:0"
									},
									"scope": 132,
									"src": "1566:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1738:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1748:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1748:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "1771:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1635:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "1726:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1735:2:0"
									},
									"src": "1717:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1910:30:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1927:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "1920:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1785:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1864:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:9:0"
									},
									"scope": 132,
									"src": "1855:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2058:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "2076:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2076:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2087:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2087:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2076:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2068:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1946:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2022:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2033:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:0"
									},
									"scope": 132,
									"src": "2013:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2539:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2576:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2568:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2568:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2568:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2549:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2549:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2549:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2149:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nameLocations": [
													"2529:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2529:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2529:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2494:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2511:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2539:0:0"
									},
									"scope": 132,
									"src": "2485:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2805:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2823:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2843:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2835:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2835:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2835:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2823:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2815:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2815:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2815:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2917:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2898:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "2898:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2592:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nameLocations": [
													"2795:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2795:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2795:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2744:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2770:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2762:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2805:0:0"
									},
									"scope": 132,
									"src": "2735:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3150:124:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3168:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3160:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3160:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3179:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3160:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3195:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3204:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3195:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3195:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3248:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3258:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3227:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3227:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3222:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2939:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3096:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3123:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3115:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3150:0:0"
									},
									"scope": 132,
									"src": "3087:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "1308:1968:0",
							"usedErrors": [],
							"usedEvents": [
								33
							]
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3463:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "3488:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC20",
							"nameLocation": "3569:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "3582:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 143,
									"name": "Transfer",
									"nameLocation": "3751:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3776:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3760:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3798:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3782:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3810:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "3802:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:57:0"
									},
									"src": "3745:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "3823:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 152,
									"name": "Approval",
									"nameLocation": "3982:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4007:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3991:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4014:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3990:63:0"
									},
									"src": "3976:78:0"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4060:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4140:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4151:2:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4177:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4176:9:0"
									},
									"scope": 209,
									"src": "4131:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "4192:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4278:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4296:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4288:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:17:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4327:9:0"
									},
									"scope": 209,
									"src": "4269:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4343:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4559:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4576:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4568:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4588:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4580:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4567:28:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "4614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:6:0"
									},
									"scope": 209,
									"src": "4550:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "4626:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4904:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4922:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4914:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4937:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4913:32:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4968:9:0"
									},
									"scope": 209,
									"src": "4895:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "4984:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5640:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5656:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5647:33:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5699:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 193,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5698:6:0"
									},
									"scope": 209,
									"src": "5631:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5711:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6012:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6042:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6034:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6064:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6056:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6084:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6076:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:72:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "6115:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6115:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6114:6:0"
									},
									"scope": 209,
									"src": "6003:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2095,
							"src": "3559:2564:0",
							"usedErrors": [],
							"usedEvents": [
								143,
								152
							]
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6312:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "6490:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 520,
							"linearizedBaseContracts": [
								520
							],
							"name": "SafeMath",
							"nameLocation": "6695:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "6922:140:0",
										"statements": [
											{
												"id": 241,
												"nodeType": "UncheckedBlock",
												"src": "6932:124:0",
												"statements": [
													{
														"assignments": [
															224
														],
														"declarations": [
															{
																"constant": false,
																"id": 224,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "6964:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 241,
																"src": "6956:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 223,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6956:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 228,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 225,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "6968:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 226,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "6972:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6968:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6956:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 229,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "6991:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 230,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "6995:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6991:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 236,
														"nodeType": "IfStatement",
														"src": "6987:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7006:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7013:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 234,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7005:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 222,
															"id": 235,
															"nodeType": "Return",
															"src": "6998:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7037:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 238,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "7043:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 239,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7036:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 222,
														"id": 240,
														"nodeType": "Return",
														"src": "7029:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "6710:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "6855:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6870:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6862:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6861:22:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "6913:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6906:15:0"
									},
									"scope": 520,
									"src": "6846:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "7283:113:0",
										"statements": [
											{
												"id": 269,
												"nodeType": "UncheckedBlock",
												"src": "7293:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "7321:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 256,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "7325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 262,
														"nodeType": "IfStatement",
														"src": "7317:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7336:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7335:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 254,
															"id": 261,
															"nodeType": "Return",
															"src": "7328:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7367:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 264,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "7373:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 265,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 248,
																		"src": "7377:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7373:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 267,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7366:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 254,
														"id": 268,
														"nodeType": "Return",
														"src": "7359:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "7068:134:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7216:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7231:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7223:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7242:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7234:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:22:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7268:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7268:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7267:15:0"
									},
									"scope": 520,
									"src": "7207:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "7620:417:0",
										"statements": [
											{
												"id": 311,
												"nodeType": "UncheckedBlock",
												"src": "7630:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7888:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7893:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7888:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 290,
														"nodeType": "IfStatement",
														"src": "7884:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7904:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7910:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7903:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 289,
															"nodeType": "Return",
															"src": "7896:16:0"
														}
													},
													{
														"assignments": [
															292
														],
														"declarations": [
															{
																"constant": false,
																"id": 292,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7934:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 311,
																"src": "7926:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 291,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7926:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 296,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 293,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "7938:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7942:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7926:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "7961:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 298,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7965:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7961:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 300,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "7970:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7961:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 306,
														"nodeType": "IfStatement",
														"src": "7957:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7981:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7988:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 304,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7980:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 282,
															"id": 305,
															"nodeType": "Return",
															"src": "7973:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 308,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "8018:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8011:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 282,
														"id": 310,
														"nodeType": "Return",
														"src": "8004:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "7402:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "7553:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7568:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7560:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7579:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7571:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7559:22:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7605:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "7611:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7604:15:0"
									},
									"scope": 520,
									"src": "7544:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "8262:114:0",
										"statements": [
											{
												"id": 339,
												"nodeType": "UncheckedBlock",
												"src": "8272:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "8300:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8305:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8300:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 332,
														"nodeType": "IfStatement",
														"src": "8296:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8316:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8323:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 330,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8315:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 324,
															"id": 331,
															"nodeType": "Return",
															"src": "8308:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 334,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 316,
																		"src": "8353:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 335,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8357:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8353:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 337,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8346:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 324,
														"id": 338,
														"nodeType": "Return",
														"src": "8339:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "8043:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8195:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8210:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8202:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8221:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8213:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8201:22:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8247:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8247:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "8253:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8246:15:0"
									},
									"scope": 520,
									"src": "8186:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "8611:114:0",
										"statements": [
											{
												"id": 367,
												"nodeType": "UncheckedBlock",
												"src": "8621:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 353,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "8649:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8654:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8649:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 360,
														"nodeType": "IfStatement",
														"src": "8645:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8665:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8672:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8664:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 352,
															"id": 359,
															"nodeType": "Return",
															"src": "8657:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8696:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 362,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "8702:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 363,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 346,
																		"src": "8706:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8702:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 365,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8695:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 352,
														"id": 366,
														"nodeType": "Return",
														"src": "8688:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "8382:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "8544:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8559:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "8551:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8551:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8570:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "8562:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8562:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8550:22:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "8596:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "8602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8595:15:0"
									},
									"scope": 520,
									"src": "8535:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "9027:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 379,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "9044:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 380,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "9048:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9044:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 382,
												"nodeType": "Return",
												"src": "9037:12:0"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "8731:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8969:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8981:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8973:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8992:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "8984:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8972:22:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "9018:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9017:9:0"
									},
									"scope": 520,
									"src": "8960:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "9394:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 394,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "9411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 395,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "9415:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 393,
												"id": 397,
												"nodeType": "Return",
												"src": "9404:12:0"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "9062:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "9336:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9348:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9340:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9359:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9351:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9339:22:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "9385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9384:9:0"
									},
									"scope": 520,
									"src": "9327:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "9737:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "9754:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 410,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "9758:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9754:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 412,
												"nodeType": "Return",
												"src": "9747:12:0"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "9429:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "9679:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9691:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9702:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9694:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9682:22:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "9728:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9727:9:0"
									},
									"scope": 520,
									"src": "9670:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "10122:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "10139:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 425,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10139:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 427,
												"nodeType": "Return",
												"src": "10132:12:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "9772:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10064:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10076:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "10068:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10087:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "10079:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10067:22:0"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "10113:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10112:9:0"
									},
									"scope": 520,
									"src": "10055:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "10671:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "10688:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 440,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "10692:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10688:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 442,
												"nodeType": "Return",
												"src": "10681:12:0"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "10157:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "10613:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10625:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10617:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10636:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10628:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10616:22:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "10662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10661:9:0"
									},
									"scope": 520,
									"src": "10604:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "11289:106:0",
										"statements": [
											{
												"id": 467,
												"nodeType": "UncheckedBlock",
												"src": "11299:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 457,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "11331:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 447,
																		"src": "11336:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11331:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 460,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "11339:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 456,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11323:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11323:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 462,
														"nodeType": "ExpressionStatement",
														"src": "11323:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "11373:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 464,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "11377:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11373:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 455,
														"id": 466,
														"nodeType": "Return",
														"src": "11366:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "10706:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "11173:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11194:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "11186:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11186:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11213:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "11205:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11238:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "11224:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11224:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11176:80:0"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "11280:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11279:9:0"
									},
									"scope": 520,
									"src": "11164:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "12004:105:0",
										"statements": [
											{
												"id": 492,
												"nodeType": "UncheckedBlock",
												"src": "12014:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 482,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 474,
																		"src": "12046:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12050:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12046:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 485,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "12053:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 481,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12038:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12038:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 487,
														"nodeType": "ExpressionStatement",
														"src": "12038:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "12087:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 489,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "12091:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 480,
														"id": 491,
														"nodeType": "Return",
														"src": "12080:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "11401:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "11888:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11909:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11901:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11928:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11920:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11953:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11939:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11939:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11891:80:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "11995:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11994:9:0"
									},
									"scope": 520,
									"src": "11879:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "12880:105:0",
										"statements": [
											{
												"id": 517,
												"nodeType": "UncheckedBlock",
												"src": "12890:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "12922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12926:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12922:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 510,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "12929:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 506,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12914:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 512,
														"nodeType": "ExpressionStatement",
														"src": "12914:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 513,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "12963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 514,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "12967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12963:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 505,
														"id": 516,
														"nodeType": "Return",
														"src": "12956:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "12115:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "12764:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12785:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12777:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12804:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12796:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12829:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12815:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12767:80:0"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "12871:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12870:9:0"
									},
									"scope": 520,
									"src": "12755:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "6687:6300:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13168:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 522,
								"nodeType": "StructuredDocumentation",
								"src": "13193:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1384,
							"linearizedBaseContracts": [
								1384
							],
							"name": "Math",
							"nameLocation": "13275:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 526,
									"members": [
										{
											"id": 523,
											"name": "Down",
											"nameLocation": "13310:4:0",
											"nodeType": "EnumValue",
											"src": "13310:4:0"
										},
										{
											"id": 524,
											"name": "Up",
											"nameLocation": "13352:2:0",
											"nodeType": "EnumValue",
											"src": "13352:2:0"
										},
										{
											"id": 525,
											"name": "Zero",
											"nameLocation": "13383:4:0",
											"nodeType": "EnumValue",
											"src": "13383:4:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "13291:8:0",
									"nodeType": "EnumDefinition",
									"src": "13286:122:0"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "13545:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 536,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "13562:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 537,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "13566:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13562:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 540,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 531,
														"src": "13574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13562:13:0",
													"trueExpression": {
														"id": 539,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "13570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 535,
												"id": 542,
												"nodeType": "Return",
												"src": "13555:20:0"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "13414:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "13487:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13491:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13510:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13502:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13490:22:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "13536:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13535:9:0"
									},
									"scope": 1384,
									"src": "13478:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "13720:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 554,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "13737:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 555,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "13741:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13737:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 558,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "13749:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "13737:13:0",
													"trueExpression": {
														"id": 557,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "13745:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 553,
												"id": 560,
												"nodeType": "Return",
												"src": "13730:20:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "13588:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "13662:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13674:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13666:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13685:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13677:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13665:22:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "13711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13710:9:0"
									},
									"scope": 1384,
									"src": "13653:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "13941:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 572,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "13996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 573,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "14000:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13996:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 575,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "13995:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 581,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 576,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "14006:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 577,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "14010:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14006:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 579,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "14005:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13995:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 571,
												"id": 583,
												"nodeType": "Return",
												"src": "13988:28:0"
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "13763:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "13879:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13895:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13906:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13886:22:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "13932:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13931:9:0"
									},
									"scope": 1384,
									"src": "13870:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "14293:123:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 595,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "14381:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14386:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14381:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 599,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "14395:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14399:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14395:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 602,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14394:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 603,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "14404:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14394:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14408:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "14394:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14381:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14390:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 594,
												"id": 608,
												"nodeType": "Return",
												"src": "14374:35:0"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "14029:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "14231:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14247:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14239:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14258:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14238:22:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "14284:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14283:9:0"
									},
									"scope": 1384,
									"src": "14222:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "14860:3797:0",
										"statements": [
											{
												"id": 730,
												"nodeType": "UncheckedBlock",
												"src": "14870:3781:0",
												"statements": [
													{
														"assignments": [
															623
														],
														"declarations": [
															{
																"constant": false,
																"id": 623,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "15199:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "15191:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 622,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15191:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 624,
														"nodeType": "VariableDeclarationStatement",
														"src": "15191:13:0"
													},
													{
														"assignments": [
															626
														],
														"declarations": [
															{
																"constant": false,
																"id": 626,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "15271:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "15263:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 625,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15263:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 627,
														"nodeType": "VariableDeclarationStatement",
														"src": "15263:13:0"
													},
													{
														"AST": {
															"nativeSrc": "15343:157:0",
															"nodeType": "YulBlock",
															"src": "15343:157:0",
															"statements": [
																{
																	"nativeSrc": "15361:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15361:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "15378:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15378:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "15381:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15381:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "15388:1:0",
																						"nodeType": "YulLiteral",
																						"src": "15388:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "15384:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "15384:3:0"
																				},
																				"nativeSrc": "15384:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "15384:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "15371:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "15371:6:0"
																		},
																		"nativeSrc": "15371:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15371:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "15365:2:0",
																			"nodeType": "YulTypedName",
																			"src": "15365:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15408:18:0",
																	"nodeType": "YulAssignment",
																	"src": "15408:18:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "15421:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15421:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "15424:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "15424:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "15417:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15417:3:0"
																		},
																		"nativeSrc": "15417:9:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15417:9:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "15408:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "15408:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "15443:43:0",
																	"nodeType": "YulAssignment",
																	"src": "15443:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "15460:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "15460:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "15464:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "15464:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15456:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "15456:3:0"
																				},
																				"nativeSrc": "15456:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "15456:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "15475:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "15475:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "15479:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "15479:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15472:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "15472:2:0"
																				},
																				"nativeSrc": "15472:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "15472:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15452:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15452:3:0"
																		},
																		"nativeSrc": "15452:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15452:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "15443:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "15443:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "15408:5:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "15464:5:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "15479:5:0",
																"valueSize": 1
															},
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "15443:5:0",
																"valueSize": 1
															},
															{
																"declaration": 613,
																"isOffset": false,
																"isSlot": false,
																"src": "15378:1:0",
																"valueSize": 1
															},
															{
																"declaration": 613,
																"isOffset": false,
																"isSlot": false,
																"src": "15421:1:0",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "15381:1:0",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "15424:1:0",
																"valueSize": 1
															}
														],
														"id": 628,
														"nodeType": "InlineAssembly",
														"src": "15334:166:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 629,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "15581:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15581:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 637,
														"nodeType": "IfStatement",
														"src": "15577:75:0",
														"trueBody": {
															"id": 636,
															"nodeType": "Block",
															"src": "15593:59:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 632,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "15618:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 633,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "15626:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15618:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 621,
																	"id": 635,
																	"nodeType": "Return",
																	"src": "15611:26:0"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 639,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "15762:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 640,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "15776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "15762:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 638,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "15754:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15754:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 643,
														"nodeType": "ExpressionStatement",
														"src": "15754:28:0"
													},
													{
														"assignments": [
															645
														],
														"declarations": [
															{
																"constant": false,
																"id": 645,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "16046:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "16038:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 644,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16038:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 646,
														"nodeType": "VariableDeclarationStatement",
														"src": "16038:17:0"
													},
													{
														"AST": {
															"nativeSrc": "16078:291:0",
															"nodeType": "YulBlock",
															"src": "16078:291:0",
															"statements": [
																{
																	"nativeSrc": "16147:38:0",
																	"nodeType": "YulAssignment",
																	"src": "16147:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16167:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16167:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "16170:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16170:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "16173:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "16173:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "16160:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "16160:6:0"
																		},
																		"nativeSrc": "16160:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16160:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "16147:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "16147:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "16267:41:0",
																	"nodeType": "YulAssignment",
																	"src": "16267:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "16280:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "16280:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "16290:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "16290:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16301:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16301:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "16287:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "16287:2:0"
																				},
																				"nativeSrc": "16287:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16287:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16276:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16276:3:0"
																		},
																		"nativeSrc": "16276:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16276:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "16267:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16267:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "16325:30:0",
																	"nodeType": "YulAssignment",
																	"src": "16325:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "16338:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "16338:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "16345:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "16345:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16334:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16334:3:0"
																		},
																		"nativeSrc": "16334:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16334:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "16325:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16325:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 617,
																"isOffset": false,
																"isSlot": false,
																"src": "16173:11:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "16301:5:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "16325:5:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "16338:5:0",
																"valueSize": 1
															},
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "16267:5:0",
																"valueSize": 1
															},
															{
																"declaration": 626,
																"isOffset": false,
																"isSlot": false,
																"src": "16280:5:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "16147:9:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "16290:9:0",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "16345:9:0",
																"valueSize": 1
															},
															{
																"declaration": 613,
																"isOffset": false,
																"isSlot": false,
																"src": "16167:1:0",
																"valueSize": 1
															},
															{
																"declaration": 615,
																"isOffset": false,
																"isSlot": false,
																"src": "16170:1:0",
																"valueSize": 1
															}
														],
														"id": 647,
														"nodeType": "InlineAssembly",
														"src": "16069:300:0"
													},
													{
														"assignments": [
															649
														],
														"declarations": [
															{
																"constant": false,
																"id": 649,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "16684:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "16676:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 648,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16676:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 657,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 650,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "16691:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "16706:12:0",
																			"subExpression": {
																				"id": 651,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 617,
																				"src": "16707:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16721:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "16706:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 655,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16705:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16691:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16676:47:0"
													},
													{
														"AST": {
															"nativeSrc": "16746:362:0",
															"nodeType": "YulBlock",
															"src": "16746:362:0",
															"statements": [
																{
																	"nativeSrc": "16811:37:0",
																	"nodeType": "YulAssignment",
																	"src": "16811:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "16830:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "16830:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "16843:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16843:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "16826:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16826:3:0"
																		},
																		"nativeSrc": "16826:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16826:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "16811:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "16811:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "16915:25:0",
																	"nodeType": "YulAssignment",
																	"src": "16915:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "16928:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "16928:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "16935:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "16935:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "16924:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16924:3:0"
																		},
																		"nativeSrc": "16924:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16924:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "16915:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16915:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17055:39:0",
																	"nodeType": "YulAssignment",
																	"src": "17055:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17075:1:0",
																								"nodeType": "YulLiteral",
																								"src": "17075:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "17078:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "17078:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "17071:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "17071:3:0"
																						},
																						"nativeSrc": "17071:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "17071:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "17085:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "17085:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "17067:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "17067:3:0"
																				},
																				"nativeSrc": "17067:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "17067:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17092:1:0",
																				"nodeType": "YulLiteral",
																				"src": "17092:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17063:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17063:3:0"
																		},
																		"nativeSrc": "17063:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17063:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "17055:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "17055:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 617,
																"isOffset": false,
																"isSlot": false,
																"src": "16811:11:0",
																"valueSize": 1
															},
															{
																"declaration": 617,
																"isOffset": false,
																"isSlot": false,
																"src": "16830:11:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "16915:5:0",
																"valueSize": 1
															},
															{
																"declaration": 623,
																"isOffset": false,
																"isSlot": false,
																"src": "16928:5:0",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "16843:4:0",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "16935:4:0",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "17055:4:0",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "17078:4:0",
																"valueSize": 1
															},
															{
																"declaration": 649,
																"isOffset": false,
																"isSlot": false,
																"src": "17085:4:0",
																"valueSize": 1
															}
														],
														"id": 658,
														"nodeType": "InlineAssembly",
														"src": "16737:371:0"
													},
													{
														"expression": {
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 659,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "17174:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 660,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "17183:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 661,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 649,
																	"src": "17191:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17183:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17174:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 664,
														"nodeType": "ExpressionStatement",
														"src": "17174:21:0"
													},
													{
														"assignments": [
															666
														],
														"declarations": [
															{
																"constant": false,
																"id": 666,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "17521:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 730,
																"src": "17513:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 665,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17513:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 673,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17532:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 668,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "17536:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17532:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 670,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17531:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "17531:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17513:39:0"
													},
													{
														"expression": {
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "17769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17780:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "17784:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 677,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "17798:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17784:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17780:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17769:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 681,
														"nodeType": "ExpressionStatement",
														"src": "17769:36:0"
													},
													{
														"expression": {
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 682,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "17838:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17849:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "17853:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 685,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "17867:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17853:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17849:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17838:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "17838:36:0"
													},
													{
														"expression": {
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 690,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "17908:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17919:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 692,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "17923:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 693,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "17937:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17923:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17919:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17908:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 697,
														"nodeType": "ExpressionStatement",
														"src": "17908:36:0"
													},
													{
														"expression": {
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 698,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "17978:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17989:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 700,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "17993:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 701,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "18007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17993:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17989:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17978:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 705,
														"nodeType": "ExpressionStatement",
														"src": "17978:36:0"
													},
													{
														"expression": {
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 706,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "18048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18059:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 708,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "18063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 709,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "18077:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18063:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18059:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18048:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 713,
														"nodeType": "ExpressionStatement",
														"src": "18048:36:0"
													},
													{
														"expression": {
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 714,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "18119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18130:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 716,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "18134:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 717,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "18148:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18134:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18130:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18119:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 721,
														"nodeType": "ExpressionStatement",
														"src": "18119:36:0"
													},
													{
														"expression": {
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 722,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "18589:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 723,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "18598:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 724,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 666,
																	"src": "18606:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18598:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18589:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 727,
														"nodeType": "ExpressionStatement",
														"src": "18589:24:0"
													},
													{
														"expression": {
															"id": 728,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "18634:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 621,
														"id": 729,
														"nodeType": "Return",
														"src": "18627:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "14422:305:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "14741:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "14765:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "14757:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14757:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "14784:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "14776:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "14803:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "14795:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14747:73:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14852:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "14844:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14843:16:0"
									},
									"scope": 1384,
									"src": "14732:3925:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "18937:189:0",
										"statements": [
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18955:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 775,
														"src": "18947:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 754,
												"initialValue": {
													"arguments": [
														{
															"id": 750,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "18971:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 751,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "18974:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 752,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "18977:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 749,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															776
														],
														"referencedDeclaration": 732,
														"src": "18964:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18964:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18947:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$526",
															"typeString": "enum Math.Rounding"
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 755,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "19003:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$526",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 756,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "19015:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$526_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19024:2:0",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 524,
															"src": "19015:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$526",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "19003:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 765,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 760,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 735,
																	"src": "19037:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 761,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "19040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 762,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "19043:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 759,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "19030:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19030:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19058:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19030:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19003:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "18999:98:0",
												"trueBody": {
													"id": 771,
													"nodeType": "Block",
													"src": "19061:36:0",
													"statements": [
														{
															"expression": {
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 767,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "19075:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19085:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19075:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 770,
															"nodeType": "ExpressionStatement",
															"src": "19075:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 773,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 748,
													"src": "19113:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 746,
												"id": 774,
												"nodeType": "Return",
												"src": "19106:13:0"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "18663:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "18798:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "18822:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "18841:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "18860:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18852:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18890:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18881:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$526",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 740,
														"name": "Rounding",
														"nameLocations": [
															"18881:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 526,
														"src": "18881:8:0"
													},
													"referencedDeclaration": 526,
													"src": "18881:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$526",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18804:100:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18928:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18927:9:0"
									},
									"scope": 1384,
									"src": "18789:337:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "19402:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 784,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "19416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19421:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19416:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 790,
												"nodeType": "IfStatement",
												"src": "19412:45:0",
												"trueBody": {
													"id": 789,
													"nodeType": "Block",
													"src": "19424:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19445:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 783,
															"id": 788,
															"nodeType": "Return",
															"src": "19438:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20144:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "20136:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20153:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 795,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 779,
																			"src": "20164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 794,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1056,
																			1092
																		],
																		"referencedDeclaration": 1056,
																		"src": "20159:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20159:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20170:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20159:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 799,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "20158:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20153:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20136:36:0"
											},
											{
												"id": 886,
												"nodeType": "UncheckedBlock",
												"src": "20573:408:0",
												"statements": [
													{
														"expression": {
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 802,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20597:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 803,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20607:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 804,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20616:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 805,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20620:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20616:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20607:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20606:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20631:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20606:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20597:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 812,
														"nodeType": "ExpressionStatement",
														"src": "20597:35:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 813,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20646:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 814,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20656:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 815,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20665:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 816,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20669:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20665:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20656:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 819,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20655:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20680:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20655:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20646:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "20646:35:0"
													},
													{
														"expression": {
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20695:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 825,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20705:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 826,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20714:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 827,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20718:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20714:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20705:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20704:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20729:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20704:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20695:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 834,
														"nodeType": "ExpressionStatement",
														"src": "20695:35:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 835,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20744:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 836,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20754:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 837,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20763:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 838,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20767:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20763:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20754:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20753:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20753:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20744:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "20744:35:0"
													},
													{
														"expression": {
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 846,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20793:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 847,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20803:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 848,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20812:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 849,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20816:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20812:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20803:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 852,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20802:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20802:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20793:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 856,
														"nodeType": "ExpressionStatement",
														"src": "20793:35:0"
													},
													{
														"expression": {
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 857,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20842:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 858,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20852:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 859,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20861:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 860,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20865:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20861:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20852:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 863,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20851:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20876:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20851:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20842:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 867,
														"nodeType": "ExpressionStatement",
														"src": "20842:35:0"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 868,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "20891:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 869,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 792,
																				"src": "20901:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 870,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "20910:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 871,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 792,
																					"src": "20914:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20910:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20901:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 874,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "20900:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20925:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20900:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "20891:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "20891:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 880,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "20951:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "20959:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 882,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 792,
																		"src": "20963:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "20959:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 879,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "20947:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20947:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 783,
														"id": 885,
														"nodeType": "Return",
														"src": "20940:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "19132:208:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19354:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19367:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "19359:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19358:11:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "19393:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19392:9:0"
									},
									"scope": 1384,
									"src": "19345:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "21163:161:0",
										"statements": [
											{
												"id": 922,
												"nodeType": "UncheckedBlock",
												"src": "21173:145:0",
												"statements": [
													{
														"assignments": [
															900
														],
														"declarations": [
															{
																"constant": false,
																"id": 900,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21205:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 922,
																"src": "21197:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 899,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21197:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 904,
														"initialValue": {
															"arguments": [
																{
																	"id": 902,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "21219:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 901,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	888,
																	924
																],
																"referencedDeclaration": 888,
																"src": "21214:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21214:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21197:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 905,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "21242:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$526",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 906,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "21252:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 907,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "21264:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$526_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 908,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "21273:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 524,
																					"src": "21264:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "21252:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 912,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 910,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 900,
																						"src": "21279:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 911,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 900,
																						"src": "21288:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21279:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 913,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 891,
																					"src": "21297:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21279:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21252:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21305:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21252:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21301:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 919,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21251:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21242:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 898,
														"id": 921,
														"nodeType": "Return",
														"src": "21235:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "20993:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "21096:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "21109:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "21101:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21121:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "21112:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$526",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "Rounding",
														"nameLocations": [
															"21112:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 526,
														"src": "21112:8:0"
													},
													"referencedDeclaration": 526,
													"src": "21112:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$526",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21100:30:0"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "21154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21153:9:0"
									},
									"scope": 1384,
									"src": "21087:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "21509:922:0",
										"statements": [
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21527:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1055,
														"src": "21519:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 932,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 935,
												"initialValue": {
													"hexValue": "30",
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21536:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21519:18:0"
											},
											{
												"id": 1052,
												"nodeType": "UncheckedBlock",
												"src": "21547:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "21575:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21584:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "21575:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21590:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21575:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 950,
														"nodeType": "IfStatement",
														"src": "21571:99:0",
														"trueBody": {
															"id": 949,
															"nodeType": "Block",
															"src": "21593:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 941,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "21611:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21621:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21611:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"nodeType": "ExpressionStatement",
																	"src": "21611:13:0"
																},
																{
																	"expression": {
																		"id": 947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 945,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "21642:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21652:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21642:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 948,
																	"nodeType": "ExpressionStatement",
																	"src": "21642:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "21687:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21696:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21687:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21701:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21687:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 965,
														"nodeType": "IfStatement",
														"src": "21683:96:0",
														"trueBody": {
															"id": 964,
															"nodeType": "Block",
															"src": "21704:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 956,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "21722:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21732:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21722:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "21722:12:0"
																},
																{
																	"expression": {
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 960,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "21752:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21762:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21752:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 963,
																	"nodeType": "ExpressionStatement",
																	"src": "21752:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 966,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "21796:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21805:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21796:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21810:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21796:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 980,
														"nodeType": "IfStatement",
														"src": "21792:96:0",
														"trueBody": {
															"id": 979,
															"nodeType": "Block",
															"src": "21813:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "21831:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21841:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21831:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "21831:12:0"
																},
																{
																	"expression": {
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 975,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "21861:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21871:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21861:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 978,
																	"nodeType": "ExpressionStatement",
																	"src": "21861:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "21905:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21914:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21905:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21905:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 995,
														"nodeType": "IfStatement",
														"src": "21901:96:0",
														"trueBody": {
															"id": 994,
															"nodeType": "Block",
															"src": "21922:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "21940:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21950:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21940:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "21940:12:0"
																},
																{
																	"expression": {
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 990,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "21970:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 991,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21970:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 993,
																	"nodeType": "ExpressionStatement",
																	"src": "21970:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "22014:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22023:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22014:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22027:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22014:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1010,
														"nodeType": "IfStatement",
														"src": "22010:93:0",
														"trueBody": {
															"id": 1009,
															"nodeType": "Block",
															"src": "22030:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "22048:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22058:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22048:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "22048:11:0"
																},
																{
																	"expression": {
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "22077:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22087:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22077:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1008,
																	"nodeType": "ExpressionStatement",
																	"src": "22077:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "22120:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22120:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22133:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22120:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1025,
														"nodeType": "IfStatement",
														"src": "22116:93:0",
														"trueBody": {
															"id": 1024,
															"nodeType": "Block",
															"src": "22136:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "22154:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22164:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22154:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1019,
																	"nodeType": "ExpressionStatement",
																	"src": "22154:11:0"
																},
																{
																	"expression": {
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "22183:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22193:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22183:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1023,
																	"nodeType": "ExpressionStatement",
																	"src": "22183:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "22226:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22235:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "22226:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22226:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1040,
														"nodeType": "IfStatement",
														"src": "22222:93:0",
														"trueBody": {
															"id": 1039,
															"nodeType": "Block",
															"src": "22242:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "22260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22270:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22260:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1034,
																	"nodeType": "ExpressionStatement",
																	"src": "22260:11:0"
																},
																{
																	"expression": {
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1035,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "22289:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22289:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1038,
																	"nodeType": "ExpressionStatement",
																	"src": "22289:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "22332:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22332:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22332:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "22328:64:0",
														"trueBody": {
															"id": 1050,
															"nodeType": "Block",
															"src": "22348:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "22366:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22376:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22366:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "22366:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1053,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 933,
													"src": "22418:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 931,
												"id": 1054,
												"nodeType": "Return",
												"src": "22411:13:0"
											}
										]
									},
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "21330:113:0",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "21457:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21470:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "21462:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21461:15:0"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "21500:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21500:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21499:9:0"
									},
									"scope": 1384,
									"src": "21448:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "22664:165:0",
										"statements": [
											{
												"id": 1090,
												"nodeType": "UncheckedBlock",
												"src": "22674:149:0",
												"statements": [
													{
														"assignments": [
															1068
														],
														"declarations": [
															{
																"constant": false,
																"id": 1068,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22706:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1090,
																"src": "22698:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1067,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22698:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1072,
														"initialValue": {
															"arguments": [
																{
																	"id": 1070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "22720:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1069,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1056,
																	1092
																],
																"referencedDeclaration": 1056,
																"src": "22715:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22715:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22698:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "22747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$526",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1077,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1074,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1062,
																					"src": "22757:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1075,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "22769:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$526_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1076,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "22778:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 524,
																					"src": "22769:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "22757:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22784:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1079,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1068,
																						"src": "22789:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22784:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1081,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1059,
																					"src": "22798:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22784:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22757:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22810:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22757:54:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22806:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1087,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22756:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22747:65:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1066,
														"id": 1089,
														"nodeType": "Return",
														"src": "22740:72:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "22437:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "22593:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "22598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22622:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "22613:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$526",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "Rounding",
														"nameLocations": [
															"22613:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 526,
														"src": "22613:8:0"
													},
													"referencedDeclaration": 526,
													"src": "22613:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$526",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22597:34:0"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "22655:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22655:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22654:9:0"
									},
									"scope": 1384,
									"src": "22584:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "23016:828:0",
										"statements": [
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23034:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "23026:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1100,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23026:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"hexValue": "30",
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23043:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23026:18:0"
											},
											{
												"id": 1217,
												"nodeType": "UncheckedBlock",
												"src": "23054:761:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1104,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23082:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23091:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23095:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "23091:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "23082:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1120,
														"nodeType": "IfStatement",
														"src": "23078:99:0",
														"trueBody": {
															"id": 1119,
															"nodeType": "Block",
															"src": "23099:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1109,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23117:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23126:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23130:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "23126:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "23117:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "23117:15:0"
																},
																{
																	"expression": {
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1115,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23150:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23160:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "23150:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1118,
																	"nodeType": "ExpressionStatement",
																	"src": "23150:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1121,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23194:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23203:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23207:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "23203:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "23194:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1137,
														"nodeType": "IfStatement",
														"src": "23190:99:0",
														"trueBody": {
															"id": 1136,
															"nodeType": "Block",
															"src": "23211:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1126,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23229:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23238:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23242:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "23238:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "23229:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1131,
																	"nodeType": "ExpressionStatement",
																	"src": "23229:15:0"
																},
																{
																	"expression": {
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1132,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23262:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23272:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "23262:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1135,
																	"nodeType": "ExpressionStatement",
																	"src": "23262:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23306:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23315:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23319:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23315:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "23306:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1154,
														"nodeType": "IfStatement",
														"src": "23302:99:0",
														"trueBody": {
															"id": 1153,
															"nodeType": "Block",
															"src": "23323:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1143,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23341:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23350:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23354:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "23350:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "23341:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1148,
																	"nodeType": "ExpressionStatement",
																	"src": "23341:15:0"
																},
																{
																	"expression": {
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23374:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23384:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23374:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1152,
																	"nodeType": "ExpressionStatement",
																	"src": "23374:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1155,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23418:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23427:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23431:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23427:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "23418:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1171,
														"nodeType": "IfStatement",
														"src": "23414:96:0",
														"trueBody": {
															"id": 1170,
															"nodeType": "Block",
															"src": "23434:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1160,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23452:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23461:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23465:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "23461:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "23452:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1165,
																	"nodeType": "ExpressionStatement",
																	"src": "23452:14:0"
																},
																{
																	"expression": {
																		"id": 1168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23484:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23494:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23484:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1169,
																	"nodeType": "ExpressionStatement",
																	"src": "23484:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23527:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23536:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23540:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "23536:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "23527:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1188,
														"nodeType": "IfStatement",
														"src": "23523:96:0",
														"trueBody": {
															"id": 1187,
															"nodeType": "Block",
															"src": "23543:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1177,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23561:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23570:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23574:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "23570:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "23561:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1182,
																	"nodeType": "ExpressionStatement",
																	"src": "23561:14:0"
																},
																{
																	"expression": {
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1183,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23593:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23603:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23593:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1186,
																	"nodeType": "ExpressionStatement",
																	"src": "23593:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23636:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23645:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23649:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23645:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "23636:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1205,
														"nodeType": "IfStatement",
														"src": "23632:96:0",
														"trueBody": {
															"id": 1204,
															"nodeType": "Block",
															"src": "23652:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1194,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1095,
																			"src": "23670:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1197,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23679:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1196,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23683:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "23679:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "23670:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "23670:14:0"
																},
																{
																	"expression": {
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1200,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23702:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23712:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23702:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1203,
																	"nodeType": "ExpressionStatement",
																	"src": "23702:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1095,
																"src": "23745:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23754:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23758:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23754:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "23745:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1216,
														"nodeType": "IfStatement",
														"src": "23741:64:0",
														"trueBody": {
															"id": 1215,
															"nodeType": "Block",
															"src": "23761:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1101,
																			"src": "23779:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23789:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23779:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1214,
																	"nodeType": "ExpressionStatement",
																	"src": "23779:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1218,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1101,
													"src": "23831:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1099,
												"id": 1219,
												"nodeType": "Return",
												"src": "23824:13:0"
											}
										]
									},
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "22835:114:0",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "22963:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22977:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22969:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22968:15:0"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "23007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23006:9:0"
									},
									"scope": 1384,
									"src": "22954:890:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "24079:165:0",
										"statements": [
											{
												"id": 1255,
												"nodeType": "UncheckedBlock",
												"src": "24089:149:0",
												"statements": [
													{
														"assignments": [
															1233
														],
														"declarations": [
															{
																"constant": false,
																"id": 1233,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24121:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1255,
																"src": "24113:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1237,
														"initialValue": {
															"arguments": [
																{
																	"id": 1235,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "24136:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1234,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1221,
																	1257
																],
																"referencedDeclaration": 1221,
																"src": "24130:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24130:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24113:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1238,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "24163:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$526",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1239,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "24173:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1240,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "24185:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$526_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1241,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "24194:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 524,
																					"src": "24185:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "24173:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1245,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1243,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24200:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1244,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1233,
																						"src": "24204:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24200:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1246,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1224,
																					"src": "24213:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24200:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "24173:45:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24225:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "24173:53:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24221:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1252,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24172:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "24163:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1231,
														"id": 1254,
														"nodeType": "Return",
														"src": "24156:71:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "23850:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24007:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24021:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "24013:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "24028:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$526",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1225,
														"name": "Rounding",
														"nameLocations": [
															"24028:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 526,
														"src": "24028:8:0"
													},
													"referencedDeclaration": 526,
													"src": "24028:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$526",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24012:34:0"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "24070:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24069:9:0"
									},
									"scope": 1384,
									"src": "23998:246:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "24558:600:0",
										"statements": [
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24576:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1343,
														"src": "24568:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24568:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"hexValue": "30",
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24585:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24568:18:0"
											},
											{
												"id": 1340,
												"nodeType": "UncheckedBlock",
												"src": "24596:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1269,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "24624:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24633:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "24624:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24624:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1283,
														"nodeType": "IfStatement",
														"src": "24620:98:0",
														"trueBody": {
															"id": 1282,
															"nodeType": "Block",
															"src": "24642:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1274,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "24660:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24670:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "24660:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1277,
																	"nodeType": "ExpressionStatement",
																	"src": "24660:13:0"
																},
																{
																	"expression": {
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1278,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "24691:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24701:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24691:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1281,
																	"nodeType": "ExpressionStatement",
																	"src": "24691:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "24735:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24744:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24735:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24749:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24735:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1298,
														"nodeType": "IfStatement",
														"src": "24731:95:0",
														"trueBody": {
															"id": 1297,
															"nodeType": "Block",
															"src": "24752:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1289,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "24770:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24780:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24770:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1292,
																	"nodeType": "ExpressionStatement",
																	"src": "24770:12:0"
																},
																{
																	"expression": {
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1293,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "24800:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24810:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24800:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1296,
																	"nodeType": "ExpressionStatement",
																	"src": "24800:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1299,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "24843:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24852:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24843:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24857:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24843:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1313,
														"nodeType": "IfStatement",
														"src": "24839:95:0",
														"trueBody": {
															"id": 1312,
															"nodeType": "Block",
															"src": "24860:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1304,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "24878:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24888:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24878:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1307,
																	"nodeType": "ExpressionStatement",
																	"src": "24878:12:0"
																},
																{
																	"expression": {
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1308,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "24908:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24918:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24908:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1311,
																	"nodeType": "ExpressionStatement",
																	"src": "24908:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1314,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "24951:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24960:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "24951:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24965:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24951:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1328,
														"nodeType": "IfStatement",
														"src": "24947:95:0",
														"trueBody": {
															"id": 1327,
															"nodeType": "Block",
															"src": "24968:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1260,
																			"src": "24986:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24996:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24986:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "24986:12:0"
																},
																{
																	"expression": {
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1323,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "25016:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25026:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "25016:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1326,
																	"nodeType": "ExpressionStatement",
																	"src": "25016:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1329,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "25059:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25068:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "25059:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25072:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25059:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1339,
														"nodeType": "IfStatement",
														"src": "25055:64:0",
														"trueBody": {
															"id": 1338,
															"nodeType": "Block",
															"src": "25075:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1334,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "25093:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25103:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "25093:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1337,
																	"nodeType": "ExpressionStatement",
																	"src": "25093:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1341,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1266,
													"src": "25145:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1264,
												"id": 1342,
												"nodeType": "Return",
												"src": "25138:13:0"
											}
										]
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "24250:240:0",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "24504:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24519:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "24511:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24510:15:0"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "24549:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24548:9:0"
									},
									"scope": 1384,
									"src": "24495:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "25394:174:0",
										"statements": [
											{
												"id": 1381,
												"nodeType": "UncheckedBlock",
												"src": "25404:158:0",
												"statements": [
													{
														"assignments": [
															1356
														],
														"declarations": [
															{
																"constant": false,
																"id": 1356,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25436:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1381,
																"src": "25428:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1355,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25428:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1360,
														"initialValue": {
															"arguments": [
																{
																	"id": 1358,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1347,
																	"src": "25452:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1357,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1344,
																	1383
																],
																"referencedDeclaration": 1344,
																"src": "25445:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25445:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25428:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "25479:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$526",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1362,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1350,
																					"src": "25489:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1363,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 526,
																						"src": "25501:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$526_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "25510:2:0",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 524,
																					"src": "25501:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$526",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "25489:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1371,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25516:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1369,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1367,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1356,
																									"src": "25522:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1368,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "25532:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "25522:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1370,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "25521:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25516:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1372,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1347,
																					"src": "25537:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25516:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25489:53:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1376,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25549:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25489:61:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25545:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25488:63:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25479:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1354,
														"id": 1380,
														"nodeType": "Return",
														"src": "25472:79:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "25164:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "25321:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25336:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "25328:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "25343:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$526",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "Rounding",
														"nameLocations": [
															"25343:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 526,
														"src": "25343:8:0"
													},
													"referencedDeclaration": 526,
													"src": "25343:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$526",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25327:34:0"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "25385:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25384:9:0"
									},
									"scope": 1384,
									"src": "25312:256:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2095,
							"src": "13267:12303:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1385,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25593:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1386,
										"name": "Ownable",
										"nameLocations": [
											"25640:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "25640:7:0"
									},
									"id": 1387,
									"nodeType": "InheritanceSpecifier",
									"src": "25640:7:0"
								}
							],
							"canonicalName": "Staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2094,
							"linearizedBaseContracts": [
								2094,
								132,
								21
							],
							"name": "Staking",
							"nameLocation": "25629:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1390,
									"libraryName": {
										"id": 1388,
										"name": "SafeMath",
										"nameLocations": [
											"25660:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 520,
										"src": "25660:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "25654:27:0",
									"typeName": {
										"id": 1389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25673:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 1392,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "25702:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "25687:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1391,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25687:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 1394,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "25733:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "25718:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1393,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "25718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Staking.StakingPeriod",
									"id": 1400,
									"members": [
										{
											"id": 1395,
											"name": "ONE_MONTH",
											"nameLocation": "25772:9:0",
											"nodeType": "EnumValue",
											"src": "25772:9:0"
										},
										{
											"id": 1396,
											"name": "TWO_MONTH",
											"nameLocation": "25783:9:0",
											"nodeType": "EnumValue",
											"src": "25783:9:0"
										},
										{
											"id": 1397,
											"name": "THREE_MONTH",
											"nameLocation": "25794:11:0",
											"nodeType": "EnumValue",
											"src": "25794:11:0"
										},
										{
											"id": 1398,
											"name": "SIX_MONTH",
											"nameLocation": "25807:9:0",
											"nodeType": "EnumValue",
											"src": "25807:9:0"
										},
										{
											"id": 1399,
											"name": "ONE_YEAR",
											"nameLocation": "25818:8:0",
											"nodeType": "EnumValue",
											"src": "25818:8:0"
										}
									],
									"name": "StakingPeriod",
									"nameLocation": "25757:13:0",
									"nodeType": "EnumDefinition",
									"src": "25752:76:0"
								},
								{
									"canonicalName": "Staking.stake",
									"id": 1408,
									"members": [
										{
											"constant": false,
											"id": 1402,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "25865:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1408,
											"src": "25857:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25857:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1405,
											"mutability": "mutable",
											"name": "stakePeriod",
											"nameLocation": "25895:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 1408,
											"src": "25881:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$1400",
												"typeString": "enum Staking.StakingPeriod"
											},
											"typeName": {
												"id": 1404,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1403,
													"name": "StakingPeriod",
													"nameLocations": [
														"25881:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1400,
													"src": "25881:13:0"
												},
												"referencedDeclaration": 1400,
												"src": "25881:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1407,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "25921:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 1408,
											"src": "25916:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1406,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "25916:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "stake",
									"nameLocation": "25841:5:0",
									"nodeType": "StructDefinition",
									"scope": 2094,
									"src": "25834:103:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1411,
									"mutability": "mutable",
									"name": "stakeholders",
									"nameLocation": "25962:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "25943:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1409,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25943:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1410,
										"nodeType": "ArrayTypeName",
										"src": "25943:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3027ffc0",
									"id": 1419,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "26040:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "25981:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
										"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))"
									},
									"typeName": {
										"id": 1418,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1412,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25989:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25981:51:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
											"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1417,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1414,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1413,
													"name": "StakingPeriod",
													"nameLocations": [
														"26008:13:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1400,
													"src": "26008:13:0"
												},
												"referencedDeclaration": 1400,
												"src": "26008:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												}
											},
											"nodeType": "Mapping",
											"src": "26000:31:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
												"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1416,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1415,
													"name": "stake",
													"nameLocations": [
														"26025:5:0"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1408,
													"src": "26025:5:0"
												},
												"referencedDeclaration": 1408,
												"src": "26025:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
													"typeString": "struct Staking.stake"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e196cad",
									"id": 1424,
									"mutability": "mutable",
									"name": "apr",
									"nameLocation": "26090:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "26052:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
										"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
									},
									"typeName": {
										"id": 1423,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1421,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1420,
												"name": "StakingPeriod",
												"nameLocations": [
													"26060:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1400,
												"src": "26060:13:0"
											},
											"referencedDeclaration": 1400,
											"src": "26060:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_StakingPeriod_$1400",
												"typeString": "enum Staking.StakingPeriod"
											}
										},
										"nodeType": "Mapping",
										"src": "26052:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
											"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1422,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "26077:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 1427,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "26114:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2094,
									"src": "26100:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$209",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1426,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1425,
											"name": "IERC20",
											"nameLocations": [
												"26100:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 209,
											"src": "26100:6:0"
										},
										"referencedDeclaration": 209,
										"src": "26100:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$209",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "add17b9d82cb146eaff151f4f864faa55b09599b4eff7714935025b99054fe1c",
									"id": 1438,
									"name": "TokenStaked",
									"nameLocation": "26134:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "26162:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "26146:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "26169:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26196:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "26182:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1433,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1432,
														"name": "StakingPeriod",
														"nameLocations": [
															"26182:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "26182:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "26182:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26207:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "26202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26145:72:0"
									},
									"src": "26128:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "20b8c145b65cb389fbd3274ce53ddf475d0167c30e65fc56215bbc9988670f56",
									"id": 1449,
									"name": "TokenUnstaked",
									"nameLocation": "26229:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"indexed": true,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "26259:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "26243:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26271:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "26266:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26293:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "26279:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1443,
														"name": "StakingPeriod",
														"nameLocations": [
															"26279:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "26279:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "26279:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26304:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "26299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26242:72:0"
									},
									"src": "26223:92:0"
								},
								{
									"anonymous": false,
									"eventSelector": "6719f60144372d022e82b9bbcec8a044fc8dbaf58504f89906532d12008e4c57",
									"id": 1460,
									"name": "RewardsTransferred",
									"nameLocation": "26326:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"indexed": true,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "26361:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "26345:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26371:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "26366:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26366:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1456,
												"indexed": false,
												"mutability": "mutable",
												"name": "plan",
												"nameLocation": "26393:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "26379:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "StakingPeriod",
														"nameLocations": [
															"26379:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "26379:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "26379:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "26404:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "26399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "26399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26344:70:0"
									},
									"src": "26320:95:0"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "26455:327:0",
										"statements": [
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "26466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$209",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1467,
																"name": "_myToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "26483:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1466,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "26476:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$209_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26476:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$209",
															"typeString": "contract IERC20"
														}
													},
													"src": "26466:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$209",
														"typeString": "contract IERC20"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "26466:26:0"
											},
											{
												"expression": {
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1471,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26502:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1474,
														"indexExpression": {
															"expression": {
																"id": 1472,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "26506:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "26520:9:0",
															"memberName": "ONE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1395,
															"src": "26506:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26502:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343134",
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26533:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_414_by_1",
															"typeString": "int_const 414"
														},
														"value": "414"
													},
													"src": "26502:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "26502:34:0"
											},
											{
												"expression": {
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1478,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26557:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1481,
														"indexExpression": {
															"expression": {
																"id": 1479,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "26561:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "26575:9:0",
															"memberName": "TWO_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1396,
															"src": "26561:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26557:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393132",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26588:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_912_by_1",
															"typeString": "int_const 912"
														},
														"value": "912"
													},
													"src": "26557:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "26557:34:0"
											},
											{
												"expression": {
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1485,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26612:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1488,
														"indexExpression": {
															"expression": {
																"id": 1486,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "26616:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "26630:11:0",
															"memberName": "THREE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1397,
															"src": "26616:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26612:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34383137",
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26645:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4817_by_1",
															"typeString": "int_const 4817"
														},
														"value": "4817"
													},
													"src": "26612:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "26612:37:0"
											},
											{
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1492,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26671:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1495,
														"indexExpression": {
															"expression": {
																"id": 1493,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "26675:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "26689:9:0",
															"memberName": "SIX_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "26675:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26671:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37323133",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26702:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7213_by_1",
															"typeString": "int_const 7213"
														},
														"value": "7213"
													},
													"src": "26671:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "26671:35:0"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1499,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "26728:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 1502,
														"indexExpression": {
															"expression": {
																"id": 1500,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "26732:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "26746:8:0",
															"memberName": "ONE_YEAR",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1399,
															"src": "26732:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26728:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138303030",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26758:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18000_by_1",
															"typeString": "int_const 18000"
														},
														"value": "18000"
													},
													"src": "26728:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "26728:35:0"
											}
										]
									},
									"id": 1507,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "_myToken",
												"nameLocation": "26441:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "26433:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26432:18:0"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26455:0:0"
									},
									"scope": 2094,
									"src": "26421:361:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "26897:804:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1516,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "26915:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26915:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26927:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															},
															"value": "stake value should not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26907:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "26907:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1525,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "26999:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27003:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "26999:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1529,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "27019:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$2094",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$2094",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27011:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1527,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "27011:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27011:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1531,
																	"name": "_stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "27026:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1523,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "26978:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$209",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26986:12:0",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 208,
																"src": "26978:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26978:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e205472616e73666572204661696c6564",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27035:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															},
															"value": "Token Transfer Failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_11d830844854a9f1f280451171a115f010deebe6a9340835a1050f96ac7ef538",
																"typeString": "literal_string \"Token Transfer Failed\""
															}
														],
														"id": 1522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26970:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26970:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "26970:89:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1536,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "27072:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																		"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																	}
																},
																"id": 1539,
																"indexExpression": {
																	"expression": {
																		"id": 1537,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "27079:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27083:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "27079:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27072:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																	"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																}
															},
															"id": 1541,
															"indexExpression": {
																"id": 1540,
																"name": "_stakePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "27091:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "27072:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_storage",
																"typeString": "struct Staking.stake storage ref"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27105:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "27072:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27115:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27072:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1615,
													"nodeType": "Block",
													"src": "27317:301:0",
													"statements": [
														{
															"assignments": [
																1574
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1574,
																	"mutability": "mutable",
																	"name": "tempStake",
																	"nameLocation": "27344:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1615,
																	"src": "27331:22:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake"
																	},
																	"typeName": {
																		"id": 1573,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1572,
																			"name": "stake",
																			"nameLocations": [
																				"27331:5:0"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1408,
																			"src": "27331:5:0"
																		},
																		"referencedDeclaration": 1408,
																		"src": "27331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
																			"typeString": "struct Staking.stake"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1581,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1575,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "27356:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																			"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																		}
																	},
																	"id": 1578,
																	"indexExpression": {
																		"expression": {
																			"id": 1576,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "27363:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27367:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "27363:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "27356:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																		"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																	}
																},
																"id": 1580,
																"indexExpression": {
																	"id": 1579,
																	"name": "_stakePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "27375:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "27356:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "27331:57:0"
														},
														{
															"expression": {
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1582,
																		"name": "tempStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "27402:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "27412:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1402,
																	"src": "27402:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1588,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "27442:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1585,
																				"name": "tempStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "27421:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27431:6:0",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1402,
																			"src": "27421:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27438:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 384,
																		"src": "27421:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27421:28:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27402:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1591,
															"nodeType": "ExpressionStatement",
															"src": "27402:47:0"
														},
														{
															"expression": {
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1592,
																		"name": "tempStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1574,
																		"src": "27463:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "27473:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1407,
																	"src": "27463:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1595,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "27485:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27491:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "27485:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27463:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1598,
															"nodeType": "ExpressionStatement",
															"src": "27463:37:0"
														},
														{
															"expression": {
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1599,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "27514:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																			}
																		},
																		"id": 1603,
																		"indexExpression": {
																			"expression": {
																				"id": 1600,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "27521:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27525:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "27521:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27514:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																			"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																		}
																	},
																	"id": 1604,
																	"indexExpression": {
																		"id": 1602,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "27533:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_storage",
																		"typeString": "struct Staking.stake storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1605,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "27549:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"src": "27514:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"id": 1607,
															"nodeType": "ExpressionStatement",
															"src": "27514:44:0"
														},
														{
															"expression": {
																"id": 1613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1608,
																	"name": "totalStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "27572:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1611,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "27600:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1609,
																			"name": "totalStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1392,
																			"src": "27585:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27596:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 384,
																		"src": "27585:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27585:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27572:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1614,
															"nodeType": "ExpressionStatement",
															"src": "27572:35:0"
														}
													]
												},
												"id": 1616,
												"nodeType": "IfStatement",
												"src": "27069:549:0",
												"trueBody": {
													"id": 1571,
													"nodeType": "Block",
													"src": "27118:193:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1546,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "27147:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27151:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "27147:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1545,
																	"name": "addStakeholder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "27132:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27132:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1549,
															"nodeType": "ExpressionStatement",
															"src": "27132:26:0"
														},
														{
															"expression": {
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1550,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1419,
																			"src": "27172:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																				"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																			}
																		},
																		"id": 1554,
																		"indexExpression": {
																			"expression": {
																				"id": 1551,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "27179:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27183:6:0",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "27179:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "27172:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																			"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																		}
																	},
																	"id": 1555,
																	"indexExpression": {
																		"id": 1553,
																		"name": "_stakePeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "27191:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27172:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_storage",
																		"typeString": "struct Staking.stake storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1557,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "27213:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1558,
																			"name": "_stakePeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "27221:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		{
																			"expression": {
																				"id": 1559,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "27235:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27241:9:0",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "27235:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																				"typeString": "enum Staking.StakingPeriod"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1556,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "27207:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_stake_$1408_storage_ptr_$",
																			"typeString": "type(struct Staking.stake storage pointer)"
																		}
																	},
																	"id": 1561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27207:44:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"src": "27172:79:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_storage",
																	"typeString": "struct Staking.stake storage ref"
																}
															},
															"id": 1563,
															"nodeType": "ExpressionStatement",
															"src": "27172:79:0"
														},
														{
															"expression": {
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1564,
																	"name": "totalStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "27265:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1567,
																			"name": "_stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "27293:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1565,
																			"name": "totalStake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1392,
																			"src": "27278:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "27289:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 384,
																		"src": "27278:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27278:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27265:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1570,
															"nodeType": "ExpressionStatement",
															"src": "27265:35:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1618,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27644:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27648:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27644:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1620,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "27656:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1621,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "27664:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1622,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "27678:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27684:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "27678:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1617,
														"name": "TokenStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "27632:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1400_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27632:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "EmitStatement",
												"src": "27627:67:0"
											}
										]
									},
									"functionSelector": "e9917c07",
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createStake",
									"nameLocation": "26834:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "26854:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "26846:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "26876:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "26862:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1511,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1510,
														"name": "StakingPeriod",
														"nameLocations": [
															"26862:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "26862:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "26862:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26845:44:0"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26897:0:0"
									},
									"scope": 2094,
									"src": "26825:876:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "27775:1011:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1636,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "27793:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27802:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "27793:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374616b652076616c75652073686f756c64206e6f74206265207a65726f",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27805:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															},
															"value": "stake value should not be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04c3441615aa5793da9a05076e1799405ac2852cadcf665e21d4ec2776f56392",
																"typeString": "literal_string \"stake value should not be zero\""
															}
														],
														"id": 1635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27785:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "27785:53:0"
											},
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "27861:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "27848:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 1643,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1642,
																"name": "stake",
																"nameLocations": [
																	"27848:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1408,
																"src": "27848:5:0"
															},
															"referencedDeclaration": 1408,
															"src": "27848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1651,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1645,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "27873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 1648,
														"indexExpression": {
															"expression": {
																"id": 1646,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "27880:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27884:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "27880:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27873:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 1650,
													"indexExpression": {
														"id": 1649,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "27892:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1400",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27873:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27848:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1654,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "27945:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																],
																"id": 1653,
																"name": "validateStakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1806,
																"src": "27923:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_stake_$1408_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (struct Staking.stake memory) view returns (bool)"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27923:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6720706572696f64206973206e6f742065787069726564",
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27957:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																"typeString": "literal_string \"Staking period is not expired\""
															},
															"value": "Staking period is not expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0694c7f392e22ce36c10616ae4f6977fdf92db5e23ad79f90fffa4a3e034bfb6",
																"typeString": "literal_string \"Staking period is not expired\""
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27915:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "27915:74:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "28007:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1661,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "28017:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28027:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "28017:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28007:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964205374616b6520416d6f756e74",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28035:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																"typeString": "literal_string \"Invalid Stake Amount\""
															},
															"value": "Invalid Stake Amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5fe76c166af2715132273c3d6d3869b2400fe4144834c119b0d90edf5e61285",
																"typeString": "literal_string \"Invalid Stake Amount\""
															}
														],
														"id": 1659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27999:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "27999:59:0"
											},
											{
												"assignments": [
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "_investorReward",
														"nameLocation": "28076:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1757,
														"src": "28068:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"arguments": [
														{
															"id": 1670,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "28110:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														],
														"id": 1669,
														"name": "getDailyRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1952,
														"src": "28094:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_enum$_StakingPeriod_$1400_$returns$_t_uint256_$",
															"typeString": "function (enum Staking.StakingPeriod) view returns (uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28094:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28068:55:0"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1673,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "28133:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "28143:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "28133:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1679,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "28173:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1676,
																	"name": "tempStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "28152:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28162:6:0",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1402,
																"src": "28152:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28169:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "28152:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28152:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28133:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "28133:47:0"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1683,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "28190:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 1687,
															"indexExpression": {
																"expression": {
																	"id": 1684,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "28197:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28201:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "28197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28190:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 1688,
														"indexExpression": {
															"id": 1686,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "28209:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "28190:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1689,
														"name": "tempStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "28225:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
															"typeString": "struct Staking.stake memory"
														}
													},
													"src": "28190:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "28190:44:0"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1692,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "28244:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1695,
																"name": "_stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "28272:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1693,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "28257:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28268:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 399,
															"src": "28257:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28257:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28244:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "28244:35:0"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1699,
														"name": "totalRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "28289:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1702,
																"name": "_investorReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "28321:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1700,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1394,
																"src": "28304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28317:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 384,
															"src": "28304:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28304:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "28289:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "28289:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1706,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "28418:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																		"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																	}
																},
																"id": 1709,
																"indexExpression": {
																	"expression": {
																		"id": 1707,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "28425:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28429:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "28425:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "28418:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																	"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
																}
															},
															"id": 1711,
															"indexExpression": {
																"id": 1710,
																"name": "_stakePeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1632,
																"src": "28437:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "28418:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_storage",
																"typeString": "struct Staking.stake storage ref"
															}
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28451:6:0",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "28418:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28461:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28418:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1720,
												"nodeType": "IfStatement",
												"src": "28415:78:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1716,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "28482:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28486:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "28482:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1715,
															"name": "removeStakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "28464:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28464:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1719,
													"nodeType": "ExpressionStatement",
													"src": "28464:29:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1724,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28520:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28524:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28520:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1726,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "28532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1721,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "28503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$209",
																"typeString": "contract IERC20"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28511:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 176,
														"src": "28503:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28503:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "28503:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1732,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "28570:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28570:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1734,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28579:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28583:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28579:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1736,
															"name": "_investorReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "28591:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1729,
															"name": "myToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "28549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$209",
																"typeString": "contract IERC20"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28557:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 208,
														"src": "28549:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28549:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "28549:58:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1740,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28636:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28640:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1742,
															"name": "_stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "28648:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1743,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "28656:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1744,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "28670:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28676:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "28670:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1739,
														"name": "TokenUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "28622:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1400_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28622:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "EmitStatement",
												"src": "28617:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "28720:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28724:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "28720:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1751,
															"name": "_investorReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "28732:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1752,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "28749:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														{
															"expression": {
																"id": 1753,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "28763:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "28769:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "28763:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1748,
														"name": "RewardsTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "28701:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_enum$_StakingPeriod_$1400_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,enum Staking.StakingPeriod,uint256)"
														}
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28701:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1756,
												"nodeType": "EmitStatement",
												"src": "28696:83:0"
											}
										]
									},
									"functionSelector": "7e61badd",
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unStake",
									"nameLocation": "27716:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "27732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "27724:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "27754:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "27740:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1630,
														"name": "StakingPeriod",
														"nameLocations": [
															"27740:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "27740:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "27740:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27723:44:0"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27775:0:0"
									},
									"scope": 2094,
									"src": "27707:1079:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "28900:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "313030",
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29234:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "313030",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29225:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1770,
																				"name": "apr",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1424,
																				"src": "29193:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																					"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
																				}
																			},
																			"id": 1773,
																			"indexExpression": {
																				"expression": {
																					"id": 1771,
																					"name": "_investor",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1763,
																					"src": "29197:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																						"typeString": "struct Staking.stake memory"
																					}
																				},
																				"id": 1772,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "29207:11:0",
																				"memberName": "stakePeriod",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1405,
																				"src": "29197:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																					"typeString": "enum Staking.StakingPeriod"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "29193:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1768,
																			"name": "_unstakeAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1760,
																			"src": "29174:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "29189:3:0",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 414,
																		"src": "29174:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29174:46:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29221:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "29174:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29174:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29230:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "29174:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29174:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1767,
												"id": 1781,
												"nodeType": "Return",
												"src": "29167:71:0"
											}
										]
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInvestorRewards",
									"nameLocation": "28801:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "_unstakeAmount",
												"nameLocation": "28828:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "28820:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "28857:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "28844:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 1762,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1761,
														"name": "stake",
														"nameLocations": [
															"28844:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1408,
														"src": "28844:5:0"
													},
													"referencedDeclaration": 1408,
													"src": "28844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28819:48:0"
									},
									"returnParameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "28891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28890:9:0"
									},
									"scope": 2094,
									"src": "28792:453:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "29335:155:0",
										"statements": [
											{
												"assignments": [
													1792
												],
												"declarations": [
													{
														"constant": false,
														"id": 1792,
														"mutability": "mutable",
														"name": "stakingTimeStamp",
														"nameLocation": "29353:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1805,
														"src": "29345:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1799,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1793,
															"name": "_investor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "29372:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29382:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1407,
														"src": "29372:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"id": 1796,
																"name": "_investor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1786,
																"src": "29420:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															],
															"id": 1795,
															"name": "getStakingPeriodInNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1852,
															"src": "29394:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_struct$_stake_$1408_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct Staking.stake memory) pure returns (uint256)"
															}
														},
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29394:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29372:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29345:85:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1800,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "29447:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29453:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "29447:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1802,
														"name": "stakingTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "29466:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29447:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1790,
												"id": 1804,
												"nodeType": "Return",
												"src": "29440:42:0"
											}
										]
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateStakingPeriod",
									"nameLocation": "29261:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "29296:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "29283:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 1785,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1784,
														"name": "stake",
														"nameLocations": [
															"29283:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1408,
														"src": "29283:5:0"
													},
													"referencedDeclaration": 1408,
													"src": "29283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29282:24:0"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "29329:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29328:6:0"
									},
									"scope": 2094,
									"src": "29252:238:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "29587:334:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1400",
															"typeString": "enum Staking.StakingPeriod"
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1814,
																"name": "_investor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "29604:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29614:11:0",
															"memberName": "stakePeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1405,
															"src": "29604:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1816,
																"name": "StakingPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "29629:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																	"typeString": "type(enum Staking.StakingPeriod)"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "29643:9:0",
															"memberName": "ONE_MONTH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1395,
															"src": "29629:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"src": "29604:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1820,
																	"name": "_investor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1809,
																	"src": "29665:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																		"typeString": "struct Staking.stake memory"
																	}
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29675:11:0",
																"memberName": "stakePeriod",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1405,
																"src": "29665:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1822,
																	"name": "StakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "29690:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																		"typeString": "type(enum Staking.StakingPeriod)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "29704:9:0",
																"memberName": "TWO_MONTH",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1396,
																"src": "29690:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																	"typeString": "enum Staking.StakingPeriod"
																}
															},
															"src": "29665:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																	"typeString": "enum Staking.StakingPeriod"
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1826,
																		"name": "_investor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "29726:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																			"typeString": "struct Staking.stake memory"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "29736:11:0",
																	"memberName": "stakePeriod",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1405,
																	"src": "29726:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1828,
																		"name": "StakingPeriod",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "29751:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																			"typeString": "type(enum Staking.StakingPeriod)"
																		}
																	},
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "29765:11:0",
																	"memberName": "THREE_MONTH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1397,
																	"src": "29751:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																		"typeString": "enum Staking.StakingPeriod"
																	}
																},
																"src": "29726:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																		"typeString": "enum Staking.StakingPeriod"
																	},
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1832,
																			"name": "_investor",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "29789:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																				"typeString": "struct Staking.stake memory"
																			}
																		},
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "29799:11:0",
																		"memberName": "stakePeriod",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1405,
																		"src": "29789:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"id": 1834,
																			"name": "StakingPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1400,
																			"src": "29814:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																				"typeString": "type(enum Staking.StakingPeriod)"
																			}
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "29828:9:0",
																		"memberName": "SIX_MONTH",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1398,
																		"src": "29814:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																			"typeString": "enum Staking.StakingPeriod"
																		}
																	},
																	"src": "29789:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																			"typeString": "enum Staking.StakingPeriod"
																		},
																		"id": 1842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1838,
																				"name": "_investor",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "29851:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																					"typeString": "struct Staking.stake memory"
																				}
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29861:11:0",
																			"memberName": "stakePeriod",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1405,
																			"src": "29851:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1840,
																				"name": "StakingPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1400,
																				"src": "29876:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_StakingPeriod_$1400_$",
																					"typeString": "type(enum Staking.StakingPeriod)"
																				}
																			},
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "29890:8:0",
																			"memberName": "ONE_YEAR",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1399,
																			"src": "29876:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																				"typeString": "enum Staking.StakingPeriod"
																			}
																		},
																		"src": "29851:47:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "30",
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29912:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "29851:62:0",
																	"trueExpression": {
																		"hexValue": "333635",
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29901:8:0",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_31536000_by_1",
																			"typeString": "int_const 31536000"
																		},
																		"value": "365"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "29789:124:0",
																"trueExpression": {
																	"hexValue": "313230",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29840:8:0",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10368000_by_1",
																		"typeString": "int_const 10368000"
																	},
																	"value": "120"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "29726:187:0",
															"trueExpression": {
																"hexValue": "3930",
																"id": 1831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29779:7:0",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																},
																"value": "90"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "29665:248:0",
														"trueExpression": {
															"hexValue": "3330",
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29716:7:0",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "29604:309:0",
													"trueExpression": {
														"hexValue": "3135",
														"id": 1819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29655:7:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1296000_by_1",
															"typeString": "int_const 1296000"
														},
														"value": "15"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 1813,
												"id": 1850,
												"nodeType": "Return",
												"src": "29597:316:0"
											}
										]
									},
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingPeriodInNumbers",
									"nameLocation": "29506:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "_investor",
												"nameLocation": "29545:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "29532:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
													"typeString": "struct Staking.stake"
												},
												"typeName": {
													"id": 1808,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1807,
														"name": "stake",
														"nameLocations": [
															"29532:5:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1408,
														"src": "29532:5:0"
													},
													"referencedDeclaration": 1408,
													"src": "29532:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
														"typeString": "struct Staking.stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29531:24:0"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "29579:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29578:9:0"
									},
									"scope": 2094,
									"src": "29497:424:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "30051:65:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1862,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "30068:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 1864,
															"indexExpression": {
																"id": 1863,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "30075:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30068:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 1866,
														"indexExpression": {
															"id": 1865,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "30089:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30068:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30103:6:0",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1402,
													"src": "30068:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1861,
												"id": 1868,
												"nodeType": "Return",
												"src": "30061:48:0"
											}
										]
									},
									"functionSelector": "ad9159fd",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeOf",
									"nameLocation": "29936:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "29952:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "29944:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "29980:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "29966:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1856,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1855,
														"name": "StakingPeriod",
														"nameLocations": [
															"29966:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "29966:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "29966:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29943:50:0"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "30038:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30037:9:0"
									},
									"scope": 2094,
									"src": "29927:189:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "30233:70:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1881,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "30250:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																	"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
																}
															},
															"id": 1883,
															"indexExpression": {
																"id": 1882,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "30257:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "30250:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
																"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
															}
														},
														"id": 1885,
														"indexExpression": {
															"id": 1884,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "30271:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30250:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_storage",
															"typeString": "struct Staking.stake storage ref"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30285:11:0",
													"memberName": "stakePeriod",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1405,
													"src": "30250:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"functionReturnParameters": 1880,
												"id": 1887,
												"nodeType": "Return",
												"src": "30243:53:0"
											}
										]
									},
									"functionSelector": "063b35bf",
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakingPeriodOf",
									"nameLocation": "30131:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "30155:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "30147:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "30183:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "30169:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1874,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1873,
														"name": "StakingPeriod",
														"nameLocations": [
															"30169:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "30169:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "30169:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30146:50:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "30218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1877,
														"name": "StakingPeriod",
														"nameLocations": [
															"30218:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "30218:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "30218:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30217:15:0"
									},
									"scope": 2094,
									"src": "30122:181:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "30392:453:0",
										"statements": [
											{
												"assignments": [
													1899
												],
												"declarations": [
													{
														"constant": false,
														"id": 1899,
														"mutability": "mutable",
														"name": "tempStake",
														"nameLocation": "30415:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "30402:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
															"typeString": "struct Staking.stake"
														},
														"typeName": {
															"id": 1898,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1897,
																"name": "stake",
																"nameLocations": [
																	"30402:5:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1408,
																"src": "30402:5:0"
															},
															"referencedDeclaration": 1408,
															"src": "30402:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_storage_ptr",
																"typeString": "struct Staking.stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1900,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "30427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$_$",
																"typeString": "mapping(address => mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref))"
															}
														},
														"id": 1903,
														"indexExpression": {
															"expression": {
																"id": 1901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "30434:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30438:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "30434:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30427:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_struct$_stake_$1408_storage_$",
															"typeString": "mapping(enum Staking.StakingPeriod => struct Staking.stake storage ref)"
														}
													},
													"id": 1905,
													"indexExpression": {
														"id": 1904,
														"name": "_stakePeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "30446:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_StakingPeriod_$1400",
															"typeString": "enum Staking.StakingPeriod"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30427:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_stake_$1408_storage",
														"typeString": "struct Staking.stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30402:57:0"
											},
											{
												"assignments": [
													1908
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "total_rewards",
														"nameLocation": "30477:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "30469:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1907,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1910,
																"name": "tempStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1899,
																"src": "30512:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																	"typeString": "struct Staking.stake memory"
																}
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30522:6:0",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1402,
															"src": "30512:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1912,
															"name": "tempStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1899,
															"src": "30530:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																"typeString": "struct Staking.stake memory"
															}
														],
														"id": 1909,
														"name": "getInvestorRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "30493:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_stake_$1408_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,struct Staking.stake memory) view returns (uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30493:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30469:71:0"
											},
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "noOfDays",
														"nameLocation": "30558:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1951,
														"src": "30550:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1932,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3234",
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30629:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															},
															"value": "24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_24_by_1",
																"typeString": "int_const 24"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "3630",
																	"id": 1927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30621:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "3630",
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30613:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			}
																		],
																		"expression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1917,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "30570:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1918,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "30576:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "30570:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 1919,
																							"name": "tempStake",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1899,
																							"src": "30588:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_stake_$1408_memory_ptr",
																								"typeString": "struct Staking.stake memory"
																							}
																						},
																						"id": 1920,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "30598:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1407,
																						"src": "30588:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "30570:37:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1922,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "30569:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "30609:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 429,
																		"src": "30569:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30569:47:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30617:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "30569:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30569:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30625:3:0",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 429,
														"src": "30569:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30569:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30550:82:0"
											},
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1933,
														"name": "noOfDays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "30642:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1934,
																		"name": "noOfDays",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1916,
																		"src": "30654:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30665:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "30654:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1937,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "30653:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 1939,
															"name": "noOfDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "30674:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "30653:29:0",
														"trueExpression": {
															"hexValue": "31",
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30670:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30642:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "30642:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1948,
															"name": "noOfDays",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "30829:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "333634",
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30820:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_364_by_1",
																		"typeString": "int_const 364"
																	},
																	"value": "364"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_364_by_1",
																		"typeString": "int_const 364"
																	}
																],
																"expression": {
																	"id": 1943,
																	"name": "total_rewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1908,
																	"src": "30802:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30816:3:0",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 429,
																"src": "30802:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30802:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30825:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 414,
														"src": "30802:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30802:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1896,
												"id": 1950,
												"nodeType": "Return",
												"src": "30795:43:0"
											}
										]
									},
									"functionSelector": "0ded03cd",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDailyRewards",
									"nameLocation": "30318:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "30348:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "30334:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 1891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1890,
														"name": "StakingPeriod",
														"nameLocations": [
															"30334:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "30334:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "30334:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30333:28:0"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "30383:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30382:9:0"
									},
									"scope": 2094,
									"src": "30309:536:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "31000:169:0",
										"statements": [
											{
												"body": {
													"id": 1983,
													"nodeType": "Block",
													"src": "31062:74:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1973,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1954,
																	"src": "31080:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1974,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "31092:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1976,
																	"indexExpression": {
																		"id": 1975,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "31105:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31092:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "31080:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1982,
															"nodeType": "IfStatement",
															"src": "31076:49:0",
															"trueBody": {
																"expression": {
																	"components": [
																		{
																			"hexValue": "74727565",
																			"id": 1978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31117:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		{
																			"id": 1979,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "31123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31116:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																		"typeString": "tuple(bool,uint256)"
																	}
																},
																"functionReturnParameters": 1960,
																"id": 1981,
																"nodeType": "Return",
																"src": "31109:16:0"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1965,
														"name": "s",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "31030:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1966,
															"name": "stakeholders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "31034:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31047:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31034:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31030:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1984,
												"initializationExpression": {
													"assignments": [
														1962
													],
													"declarations": [
														{
															"constant": false,
															"id": 1962,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "31023:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1984,
															"src": "31015:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1961,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1964,
													"initialValue": {
														"hexValue": "30",
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31027:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31015:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1969,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "31055:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31060:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "31055:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1972,
													"nodeType": "ExpressionStatement",
													"src": "31055:6:0"
												},
												"nodeType": "ForStatement",
												"src": "31010:126:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31153:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31160:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 1987,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "31152:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1988,
												"nodeType": "Return",
												"src": "31145:17:0"
											}
										]
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isStakeholder",
									"nameLocation": "30903:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "30925:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "30917:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30917:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30916:18:0"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "30981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "30987:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30980:15:0"
									},
									"scope": 2094,
									"src": "30894:275:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2010,
										"nodeType": "Block",
										"src": "31246:131:0",
										"statements": [
											{
												"assignments": [
													1996,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "_isStakeholder",
														"nameLocation": "31262:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2010,
														"src": "31257:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1995,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "31257:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2000,
												"initialValue": {
													"arguments": [
														{
															"id": 1998,
															"name": "_stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "31296:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1997,
														"name": "isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "31282:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address) view returns (bool,uint256)"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31282:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31256:53:0"
											},
											{
												"condition": {
													"id": 2002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31322:15:0",
													"subExpression": {
														"id": 2001,
														"name": "_isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "31323:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2009,
												"nodeType": "IfStatement",
												"src": "31319:51:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 2006,
																"name": "_stakeholder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "31357:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2003,
																"name": "stakeholders",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1411,
																"src": "31339:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31352:4:0",
															"memberName": "push",
															"nodeType": "MemberAccess",
															"src": "31339:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																"typeString": "function (address[] storage pointer,address)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31339:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2008,
													"nodeType": "ExpressionStatement",
													"src": "31339:31:0"
												}
											}
										]
									},
									"id": 2011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addStakeholder",
									"nameLocation": "31188:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "31211:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "31203:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31202:22:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31246:0:0"
									},
									"scope": 2094,
									"src": "31179:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "31458:219:0",
										"statements": [
											{
												"assignments": [
													2017,
													2019
												],
												"declarations": [
													{
														"constant": false,
														"id": 2017,
														"mutability": "mutable",
														"name": "_isStakeholder",
														"nameLocation": "31474:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "31469:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2016,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "31469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2019,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "31498:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 2043,
														"src": "31490:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "31490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"arguments": [
														{
															"id": 2021,
															"name": "_stakeholder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "31517:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2020,
														"name": "isStakeholder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "31503:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (address) view returns (bool,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31503:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "31468:62:0"
											},
											{
												"condition": {
													"id": 2024,
													"name": "_isStakeholder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2017,
													"src": "31543:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2042,
												"nodeType": "IfStatement",
												"src": "31540:130:0",
												"trueBody": {
													"id": 2041,
													"nodeType": "Block",
													"src": "31558:112:0",
													"statements": [
														{
															"expression": {
																"id": 2034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2025,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "31572:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2027,
																	"indexExpression": {
																		"id": 2026,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "31585:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31572:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2028,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "31590:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2033,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2029,
																				"name": "stakeholders",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "31603:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "31616:6:0",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "31603:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31625:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "31603:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31590:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "31572:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2035,
															"nodeType": "ExpressionStatement",
															"src": "31572:55:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2036,
																		"name": "stakeholders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "31641:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31654:3:0",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "31641:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer)"
																	}
																},
																"id": 2039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31641:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2040,
															"nodeType": "ExpressionStatement",
															"src": "31641:18:0"
														}
													]
												}
											}
										]
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeStakeholder",
									"nameLocation": "31397:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "_stakeholder",
												"nameLocation": "31423:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "31415:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31414:22:0"
									},
									"returnParameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31458:0:0"
									},
									"scope": 2094,
									"src": "31388:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "31809:36:0",
										"statements": [
											{
												"expression": {
													"id": 2049,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1394,
													"src": "31826:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2048,
												"id": 2050,
												"nodeType": "Return",
												"src": "31819:19:0"
											}
										]
									},
									"functionSelector": "e627f2db",
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalRewards",
									"nameLocation": "31734:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31749:2:0"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "31796:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31795:9:0"
									},
									"scope": 2094,
									"src": "31725:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "31981:48:0",
										"statements": [
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2062,
															"name": "apr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "31991:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_enum$_StakingPeriod_$1400_$_t_uint256_$",
																"typeString": "mapping(enum Staking.StakingPeriod => uint256)"
															}
														},
														"id": 2064,
														"indexExpression": {
															"id": 2063,
															"name": "_stakePeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2057,
															"src": "31995:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_StakingPeriod_$1400",
																"typeString": "enum Staking.StakingPeriod"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "31991:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2065,
														"name": "_percentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2054,
														"src": "32011:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "31991:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "31991:31:0"
											}
										]
									},
									"functionSelector": "a3fcd253",
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2060,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2059,
												"name": "onlyOwner",
												"nameLocations": [
													"31971:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "31971:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "31971:9:0"
										}
									],
									"name": "setApyPercentage",
									"nameLocation": "31900:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "_percentage",
												"nameLocation": "31923:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "31917:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2053,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31917:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "_stakePeriod",
												"nameLocation": "31950:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "31936:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_StakingPeriod_$1400",
													"typeString": "enum Staking.StakingPeriod"
												},
												"typeName": {
													"id": 2056,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2055,
														"name": "StakingPeriod",
														"nameLocations": [
															"31936:13:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "31936:13:0"
													},
													"referencedDeclaration": 1400,
													"src": "31936:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_StakingPeriod_$1400",
														"typeString": "enum Staking.StakingPeriod"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31916:47:0"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31981:0:0"
									},
									"scope": 2094,
									"src": "31891:138:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "32092:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2078,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "32136:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32136:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2076,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "32118:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$209",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32126:9:0",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 166,
																"src": "32118:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32118:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2083,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 60,
																		"src": "32164:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32164:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2087,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "32181:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$2094",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$2094",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 2086,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2085,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32173:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32173:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2081,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "32146:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$209",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32154:9:0",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 186,
																"src": "32146:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32146:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2074,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "32109:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$1384_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 2075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32114:3:0",
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 562,
														"src": "32109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32109:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2073,
												"id": 2091,
												"nodeType": "Return",
												"src": "32102:86:0"
											}
										]
									},
									"functionSelector": "bf583903",
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remainingTokens",
									"nameLocation": "32044:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32059:2:0"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "32083:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32082:9:0"
									},
									"scope": 2094,
									"src": "32035:160:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2095,
							"src": "25620:6578:0",
							"usedErrors": [],
							"usedEvents": [
								33,
								1438,
								1449,
								1460
							]
						}
					],
					"src": "258:31940:0"
				},
				"id": 0
			}
		}
	}
}